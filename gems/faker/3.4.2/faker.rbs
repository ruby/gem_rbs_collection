module Faker
  class Alphanumeric < Faker::Base
    # https://github.com/faker-ruby/faker/blob/main/doc/default/alphanumeric.md
    def self.alpha: (?number: Integer) -> String
    def self.alphanumeric: (?number: Integer, ?min_alpha: Integer, ?min_numeric: Integer) -> String
  end
  class Book < Faker::Base
    # https://github.com/faker-ruby/faker/blob/v3.4.2/lib/faker/books/book.rb
    def self.title: () -> String
  end
  class Company < Faker::Base
    # https://github.com/faker-ruby/faker/blob/main/doc/default/company.md
    def self.catch_phrase: () -> String
  end
  class Educator < Faker::Base
    # https://github.com/faker-ruby/faker/blob/v3.4.2/lib/faker/default/educator.rb
    def self.degree: -> String
    def self.subject: -> String
  end
  class Internet < Faker::Base
    # https://github.com/faker-ruby/faker/blob/v3.4.2/lib/faker/default/internet.rb
    def self.url: (?host: String?, ?path: String?) -> String
  end
  class Job < Faker::Base
    # https://github.com/faker-ruby/faker/blob/v3.4.2/lib/faker/default/job.rb
    def self.title: -> String
  end
  class Lorem < Faker::Base
    # https://github.com/faker-ruby/faker/blob/v3.4.2/lib/faker/default/lorem.rb
    def self.sentence: (?word_count: Integer?, ?supplemental: bool, ?random_words_to_add: Integer?) -> String
    def self.paragraph: (?sentence_count: Integer?, ?supplemental: bool, ?random_sentences_to_add: Integer?) -> String
  end
  class Marketing < Faker::Base
    # https://github.com/faker-ruby/faker/blob/v3.4.2/lib/faker/default/marketing.rb
    def self.buzzwords: -> String
  end
  class Name < Faker::Base
    # https://github.com/faker-ruby/faker/blob/v3.4.2/lib/faker/default/name.rb
    def self.first_name: -> String
    def self.last_name: -> String
  end
  class PhoneNumber < Faker::Base
    # https://github.com/faker-ruby/faker/blob/v3.4.2/lib/faker/default/phone_number.rb#L4
    def self.cell_phone: -> String
  end
  class University < Faker::Base
    # https://github.com/faker-ruby/faker/blob/v3.4.2/lib/faker/default/university.rb
    def self.name: -> String
  end
end
