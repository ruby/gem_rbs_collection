# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the generator README.md for more information:
# https://github.com/ruby/gem_rbs_collection/blob/main/generators/aws-sdk-rbs-generator/README.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module Firehose
    module Types
      type awskms_key_arn = ::String
      type amazon_open_search_serverless_buffering_hints = { interval_in_seconds: amazon_open_search_serverless_buffering_interval_in_seconds?, size_in_m_bs: amazon_open_search_serverless_buffering_size_in_m_bs? }
      class AmazonOpenSearchServerlessBufferingHints
        attr_accessor interval_in_seconds: amazon_open_search_serverless_buffering_interval_in_seconds
        attr_accessor size_in_m_bs: amazon_open_search_serverless_buffering_size_in_m_bs
      end
      type amazon_open_search_serverless_buffering_interval_in_seconds = ::Integer
      type amazon_open_search_serverless_buffering_size_in_m_bs = ::Integer
      type amazon_open_search_serverless_collection_endpoint = ::String
      type amazon_open_search_serverless_destination_configuration = { role_arn: role_arn, collection_endpoint: amazon_open_search_serverless_collection_endpoint?, index_name: amazon_open_search_serverless_index_name, buffering_hints: amazon_open_search_serverless_buffering_hints?, retry_options: amazon_open_search_serverless_retry_options?, s3_backup_mode: amazon_open_search_serverless_s3_backup_mode?, s3_configuration: s3_destination_configuration, processing_configuration: processing_configuration?, cloud_watch_logging_options: cloud_watch_logging_options?, vpc_configuration: vpc_configuration? }
      class AmazonOpenSearchServerlessDestinationDescription
        attr_accessor role_arn: role_arn
        attr_accessor collection_endpoint: amazon_open_search_serverless_collection_endpoint
        attr_accessor index_name: amazon_open_search_serverless_index_name
        attr_accessor buffering_hints: AmazonOpenSearchServerlessBufferingHints
        attr_accessor retry_options: AmazonOpenSearchServerlessRetryOptions
        attr_accessor s3_backup_mode: amazon_open_search_serverless_s3_backup_mode
        attr_accessor s3_destination_description: S3DestinationDescription
        attr_accessor processing_configuration: ProcessingConfiguration
        attr_accessor cloud_watch_logging_options: CloudWatchLoggingOptions
        attr_accessor vpc_configuration_description: VpcConfigurationDescription
      end
      type amazon_open_search_serverless_destination_update = { role_arn: role_arn?, collection_endpoint: amazon_open_search_serverless_collection_endpoint?, index_name: amazon_open_search_serverless_index_name?, buffering_hints: amazon_open_search_serverless_buffering_hints?, retry_options: amazon_open_search_serverless_retry_options?, s3_update: s3_destination_update?, processing_configuration: processing_configuration?, cloud_watch_logging_options: cloud_watch_logging_options? }
      type amazon_open_search_serverless_index_name = ::String
      type amazon_open_search_serverless_retry_duration_in_seconds = ::Integer
      type amazon_open_search_serverless_retry_options = { duration_in_seconds: amazon_open_search_serverless_retry_duration_in_seconds? }
      class AmazonOpenSearchServerlessRetryOptions
        attr_accessor duration_in_seconds: amazon_open_search_serverless_retry_duration_in_seconds
      end
      type amazon_open_search_serverless_s3_backup_mode = ("FailedDocumentsOnly" | "AllDocuments")
      type amazonopensearchservice_buffering_hints = { interval_in_seconds: amazonopensearchservice_buffering_interval_in_seconds?, size_in_m_bs: amazonopensearchservice_buffering_size_in_m_bs? }
      class AmazonopensearchserviceBufferingHints
        attr_accessor interval_in_seconds: amazonopensearchservice_buffering_interval_in_seconds
        attr_accessor size_in_m_bs: amazonopensearchservice_buffering_size_in_m_bs
      end
      type amazonopensearchservice_buffering_interval_in_seconds = ::Integer
      type amazonopensearchservice_buffering_size_in_m_bs = ::Integer
      type amazonopensearchservice_cluster_endpoint = ::String
      type amazonopensearchservice_destination_configuration = { role_arn: role_arn, domain_arn: amazonopensearchservice_domain_arn?, cluster_endpoint: amazonopensearchservice_cluster_endpoint?, index_name: amazonopensearchservice_index_name, type_name: amazonopensearchservice_type_name?, index_rotation_period: amazonopensearchservice_index_rotation_period?, buffering_hints: amazonopensearchservice_buffering_hints?, retry_options: amazonopensearchservice_retry_options?, s3_backup_mode: amazonopensearchservice_s3_backup_mode?, s3_configuration: s3_destination_configuration, processing_configuration: processing_configuration?, cloud_watch_logging_options: cloud_watch_logging_options?, vpc_configuration: vpc_configuration? }
      class AmazonopensearchserviceDestinationDescription
        attr_accessor role_arn: role_arn
        attr_accessor domain_arn: amazonopensearchservice_domain_arn
        attr_accessor cluster_endpoint: amazonopensearchservice_cluster_endpoint
        attr_accessor index_name: amazonopensearchservice_index_name
        attr_accessor type_name: amazonopensearchservice_type_name
        attr_accessor index_rotation_period: amazonopensearchservice_index_rotation_period
        attr_accessor buffering_hints: AmazonopensearchserviceBufferingHints
        attr_accessor retry_options: AmazonopensearchserviceRetryOptions
        attr_accessor s3_backup_mode: amazonopensearchservice_s3_backup_mode
        attr_accessor s3_destination_description: S3DestinationDescription
        attr_accessor processing_configuration: ProcessingConfiguration
        attr_accessor cloud_watch_logging_options: CloudWatchLoggingOptions
        attr_accessor vpc_configuration_description: VpcConfigurationDescription
      end
      type amazonopensearchservice_destination_update = { role_arn: role_arn?, domain_arn: amazonopensearchservice_domain_arn?, cluster_endpoint: amazonopensearchservice_cluster_endpoint?, index_name: amazonopensearchservice_index_name?, type_name: amazonopensearchservice_type_name?, index_rotation_period: amazonopensearchservice_index_rotation_period?, buffering_hints: amazonopensearchservice_buffering_hints?, retry_options: amazonopensearchservice_retry_options?, s3_update: s3_destination_update?, processing_configuration: processing_configuration?, cloud_watch_logging_options: cloud_watch_logging_options? }
      type amazonopensearchservice_domain_arn = ::String
      type amazonopensearchservice_index_name = ::String
      type amazonopensearchservice_index_rotation_period = ("NoRotation" | "OneHour" | "OneDay" | "OneWeek" | "OneMonth")
      type amazonopensearchservice_retry_duration_in_seconds = ::Integer
      type amazonopensearchservice_retry_options = { duration_in_seconds: amazonopensearchservice_retry_duration_in_seconds? }
      class AmazonopensearchserviceRetryOptions
        attr_accessor duration_in_seconds: amazonopensearchservice_retry_duration_in_seconds
      end
      type amazonopensearchservice_s3_backup_mode = ("FailedDocumentsOnly" | "AllDocuments")
      type amazonopensearchservice_type_name = ::String
      type block_size_bytes = ::Integer
      type boolean_object = bool
      type bucket_arn = ::String
      type buffering_hints = { size_in_m_bs: size_in_m_bs?, interval_in_seconds: interval_in_seconds? }
      class BufferingHints
        attr_accessor size_in_m_bs: size_in_m_bs
        attr_accessor interval_in_seconds: interval_in_seconds
      end
      type cloud_watch_logging_options = { enabled: boolean_object?, log_group_name: log_group_name?, log_stream_name: log_stream_name? }
      class CloudWatchLoggingOptions
        attr_accessor enabled: boolean_object
        attr_accessor log_group_name: log_group_name
        attr_accessor log_stream_name: log_stream_name
      end
      type cluster_jdbc_url = ::String
      type column_to_json_key_mappings = ::Hash[non_empty_string_without_whitespace, non_empty_string]
      type compression_format = ("UNCOMPRESSED" | "GZIP" | "ZIP" | "Snappy" | "HADOOP_SNAPPY")
      type content_encoding = ("NONE" | "GZIP")
      type copy_command = { data_table_name: data_table_name, data_table_columns: data_table_columns?, copy_options: copy_options? }
      class CopyCommand
        attr_accessor data_table_name: data_table_name
        attr_accessor data_table_columns: data_table_columns
        attr_accessor copy_options: copy_options
      end
      type copy_options = ::String
      type create_delivery_stream_input = { delivery_stream_name: delivery_stream_name, delivery_stream_type: delivery_stream_type?, kinesis_stream_source_configuration: kinesis_stream_source_configuration?, delivery_stream_encryption_configuration_input: delivery_stream_encryption_configuration_input?, s3_destination_configuration: s3_destination_configuration?, extended_s3_destination_configuration: extended_s3_destination_configuration?, redshift_destination_configuration: redshift_destination_configuration?, elasticsearch_destination_configuration: elasticsearch_destination_configuration?, amazonopensearchservice_destination_configuration: amazonopensearchservice_destination_configuration?, splunk_destination_configuration: splunk_destination_configuration?, http_endpoint_destination_configuration: http_endpoint_destination_configuration?, tags: tag_delivery_stream_input_tag_list_input?, amazon_open_search_serverless_destination_configuration: amazon_open_search_serverless_destination_configuration? }
      class CreateDeliveryStreamOutput
        attr_accessor delivery_stream_arn: delivery_stream_arn
      end
      type data = ::String
      type data_format_conversion_configuration = { schema_configuration: schema_configuration?, input_format_configuration: input_format_configuration?, output_format_configuration: output_format_configuration?, enabled: boolean_object? }
      class DataFormatConversionConfiguration
        attr_accessor schema_configuration: SchemaConfiguration
        attr_accessor input_format_configuration: InputFormatConfiguration
        attr_accessor output_format_configuration: OutputFormatConfiguration
        attr_accessor enabled: boolean_object
      end
      type data_table_columns = ::String
      type data_table_name = ::String
      type delete_delivery_stream_input = { delivery_stream_name: delivery_stream_name, allow_force_delete: boolean_object? }
      class DeleteDeliveryStreamOutput < Aws::EmptyStructure
      end
      type delivery_start_timestamp = ::Time
      type delivery_stream_arn = ::String
      class DeliveryStreamDescription
        attr_accessor delivery_stream_name: delivery_stream_name
        attr_accessor delivery_stream_arn: delivery_stream_arn
        attr_accessor delivery_stream_status: delivery_stream_status
        attr_accessor failure_description: FailureDescription
        attr_accessor delivery_stream_encryption_configuration: DeliveryStreamEncryptionConfiguration
        attr_accessor delivery_stream_type: delivery_stream_type
        attr_accessor version_id: delivery_stream_version_id
        attr_accessor create_timestamp: timestamp
        attr_accessor last_update_timestamp: timestamp
        attr_accessor source: SourceDescription
        attr_accessor destinations: destination_description_list
        attr_accessor has_more_destinations: boolean_object
      end
      class DeliveryStreamEncryptionConfiguration
        attr_accessor key_arn: awskms_key_arn
        attr_accessor key_type: key_type
        attr_accessor status: delivery_stream_encryption_status
        attr_accessor failure_description: FailureDescription
      end
      type delivery_stream_encryption_configuration_input = { key_arn: awskms_key_arn?, key_type: key_type }
      type delivery_stream_encryption_status = ("ENABLED" | "ENABLING" | "ENABLING_FAILED" | "DISABLED" | "DISABLING" | "DISABLING_FAILED")
      type delivery_stream_failure_type = ("RETIRE_KMS_GRANT_FAILED" | "CREATE_KMS_GRANT_FAILED" | "KMS_ACCESS_DENIED" | "DISABLED_KMS_KEY" | "INVALID_KMS_KEY" | "KMS_KEY_NOT_FOUND" | "KMS_OPT_IN_REQUIRED" | "CREATE_ENI_FAILED" | "DELETE_ENI_FAILED" | "SUBNET_NOT_FOUND" | "SECURITY_GROUP_NOT_FOUND" | "ENI_ACCESS_DENIED" | "SUBNET_ACCESS_DENIED" | "SECURITY_GROUP_ACCESS_DENIED" | "UNKNOWN_ERROR")
      type delivery_stream_name = ::String
      type delivery_stream_name_list = ::Array[delivery_stream_name]
      type delivery_stream_status = ("CREATING" | "CREATING_FAILED" | "DELETING" | "DELETING_FAILED" | "ACTIVE")
      type delivery_stream_type = ("DirectPut" | "KinesisStreamAsSource")
      type delivery_stream_version_id = ::String
      type describe_delivery_stream_input = { delivery_stream_name: delivery_stream_name, limit: describe_delivery_stream_input_limit?, exclusive_start_destination_id: destination_id? }
      type describe_delivery_stream_input_limit = ::Integer
      class DescribeDeliveryStreamOutput
        attr_accessor delivery_stream_description: DeliveryStreamDescription
      end
      type deserializer = { open_x_json_ser_de: open_x_json_ser_de?, hive_json_ser_de: hive_json_ser_de? }
      class Deserializer
        attr_accessor open_x_json_ser_de: OpenXJsonSerDe
        attr_accessor hive_json_ser_de: HiveJsonSerDe
      end
      class DestinationDescription
        attr_accessor destination_id: destination_id
        attr_accessor s3_destination_description: S3DestinationDescription
        attr_accessor extended_s3_destination_description: ExtendedS3DestinationDescription
        attr_accessor redshift_destination_description: RedshiftDestinationDescription
        attr_accessor elasticsearch_destination_description: ElasticsearchDestinationDescription
        attr_accessor amazonopensearchservice_destination_description: AmazonopensearchserviceDestinationDescription
        attr_accessor splunk_destination_description: SplunkDestinationDescription
        attr_accessor http_endpoint_destination_description: HttpEndpointDestinationDescription
        attr_accessor amazon_open_search_serverless_destination_description: AmazonOpenSearchServerlessDestinationDescription
      end
      type destination_description_list = ::Array[DestinationDescription]
      type destination_id = ::String
      type dynamic_partitioning_configuration = { retry_options: retry_options?, enabled: boolean_object? }
      class DynamicPartitioningConfiguration
        attr_accessor retry_options: RetryOptions
        attr_accessor enabled: boolean_object
      end
      type elasticsearch_buffering_hints = { interval_in_seconds: elasticsearch_buffering_interval_in_seconds?, size_in_m_bs: elasticsearch_buffering_size_in_m_bs? }
      class ElasticsearchBufferingHints
        attr_accessor interval_in_seconds: elasticsearch_buffering_interval_in_seconds
        attr_accessor size_in_m_bs: elasticsearch_buffering_size_in_m_bs
      end
      type elasticsearch_buffering_interval_in_seconds = ::Integer
      type elasticsearch_buffering_size_in_m_bs = ::Integer
      type elasticsearch_cluster_endpoint = ::String
      type elasticsearch_destination_configuration = { role_arn: role_arn, domain_arn: elasticsearch_domain_arn?, cluster_endpoint: elasticsearch_cluster_endpoint?, index_name: elasticsearch_index_name, type_name: elasticsearch_type_name?, index_rotation_period: elasticsearch_index_rotation_period?, buffering_hints: elasticsearch_buffering_hints?, retry_options: elasticsearch_retry_options?, s3_backup_mode: elasticsearch_s3_backup_mode?, s3_configuration: s3_destination_configuration, processing_configuration: processing_configuration?, cloud_watch_logging_options: cloud_watch_logging_options?, vpc_configuration: vpc_configuration? }
      class ElasticsearchDestinationDescription
        attr_accessor role_arn: role_arn
        attr_accessor domain_arn: elasticsearch_domain_arn
        attr_accessor cluster_endpoint: elasticsearch_cluster_endpoint
        attr_accessor index_name: elasticsearch_index_name
        attr_accessor type_name: elasticsearch_type_name
        attr_accessor index_rotation_period: elasticsearch_index_rotation_period
        attr_accessor buffering_hints: ElasticsearchBufferingHints
        attr_accessor retry_options: ElasticsearchRetryOptions
        attr_accessor s3_backup_mode: elasticsearch_s3_backup_mode
        attr_accessor s3_destination_description: S3DestinationDescription
        attr_accessor processing_configuration: ProcessingConfiguration
        attr_accessor cloud_watch_logging_options: CloudWatchLoggingOptions
        attr_accessor vpc_configuration_description: VpcConfigurationDescription
      end
      type elasticsearch_destination_update = { role_arn: role_arn?, domain_arn: elasticsearch_domain_arn?, cluster_endpoint: elasticsearch_cluster_endpoint?, index_name: elasticsearch_index_name?, type_name: elasticsearch_type_name?, index_rotation_period: elasticsearch_index_rotation_period?, buffering_hints: elasticsearch_buffering_hints?, retry_options: elasticsearch_retry_options?, s3_update: s3_destination_update?, processing_configuration: processing_configuration?, cloud_watch_logging_options: cloud_watch_logging_options? }
      type elasticsearch_domain_arn = ::String
      type elasticsearch_index_name = ::String
      type elasticsearch_index_rotation_period = ("NoRotation" | "OneHour" | "OneDay" | "OneWeek" | "OneMonth")
      type elasticsearch_retry_duration_in_seconds = ::Integer
      type elasticsearch_retry_options = { duration_in_seconds: elasticsearch_retry_duration_in_seconds? }
      class ElasticsearchRetryOptions
        attr_accessor duration_in_seconds: elasticsearch_retry_duration_in_seconds
      end
      type elasticsearch_s3_backup_mode = ("FailedDocumentsOnly" | "AllDocuments")
      type elasticsearch_type_name = ::String
      type encryption_configuration = { no_encryption_config: no_encryption_config?, kms_encryption_config: kms_encryption_config? }
      class EncryptionConfiguration
        attr_accessor no_encryption_config: no_encryption_config
        attr_accessor kms_encryption_config: KMSEncryptionConfig
      end
      type error_code = ::String
      type error_message = ::String
      type error_output_prefix = ::String
      type extended_s3_destination_configuration = { role_arn: role_arn, bucket_arn: bucket_arn, prefix: prefix?, error_output_prefix: error_output_prefix?, buffering_hints: buffering_hints?, compression_format: compression_format?, encryption_configuration: encryption_configuration?, cloud_watch_logging_options: cloud_watch_logging_options?, processing_configuration: processing_configuration?, s3_backup_mode: s3_backup_mode?, s3_backup_configuration: s3_destination_configuration?, data_format_conversion_configuration: data_format_conversion_configuration?, dynamic_partitioning_configuration: dynamic_partitioning_configuration? }
      class ExtendedS3DestinationDescription
        attr_accessor role_arn: role_arn
        attr_accessor bucket_arn: bucket_arn
        attr_accessor prefix: prefix
        attr_accessor error_output_prefix: error_output_prefix
        attr_accessor buffering_hints: BufferingHints
        attr_accessor compression_format: compression_format
        attr_accessor encryption_configuration: EncryptionConfiguration
        attr_accessor cloud_watch_logging_options: CloudWatchLoggingOptions
        attr_accessor processing_configuration: ProcessingConfiguration
        attr_accessor s3_backup_mode: s3_backup_mode
        attr_accessor s3_backup_description: S3DestinationDescription
        attr_accessor data_format_conversion_configuration: DataFormatConversionConfiguration
        attr_accessor dynamic_partitioning_configuration: DynamicPartitioningConfiguration
      end
      type extended_s3_destination_update = { role_arn: role_arn?, bucket_arn: bucket_arn?, prefix: prefix?, error_output_prefix: error_output_prefix?, buffering_hints: buffering_hints?, compression_format: compression_format?, encryption_configuration: encryption_configuration?, cloud_watch_logging_options: cloud_watch_logging_options?, processing_configuration: processing_configuration?, s3_backup_mode: s3_backup_mode?, s3_backup_update: s3_destination_update?, data_format_conversion_configuration: data_format_conversion_configuration?, dynamic_partitioning_configuration: dynamic_partitioning_configuration? }
      class FailureDescription
        attr_accessor type_: delivery_stream_failure_type
        attr_accessor details: non_empty_string
      end
      type hec_acknowledgment_timeout_in_seconds = ::Integer
      type hec_endpoint = ::String
      type hec_endpoint_type = ("Raw" | "Event")
      type hec_token = ::String
      type hive_json_ser_de = { timestamp_formats: list_of_non_empty_strings? }
      class HiveJsonSerDe
        attr_accessor timestamp_formats: list_of_non_empty_strings
      end
      type http_endpoint_access_key = ::String
      type http_endpoint_attribute_name = ::String
      type http_endpoint_attribute_value = ::String
      type http_endpoint_buffering_hints = { size_in_m_bs: http_endpoint_buffering_size_in_m_bs?, interval_in_seconds: http_endpoint_buffering_interval_in_seconds? }
      class HttpEndpointBufferingHints
        attr_accessor size_in_m_bs: http_endpoint_buffering_size_in_m_bs
        attr_accessor interval_in_seconds: http_endpoint_buffering_interval_in_seconds
      end
      type http_endpoint_buffering_interval_in_seconds = ::Integer
      type http_endpoint_buffering_size_in_m_bs = ::Integer
      type http_endpoint_common_attribute = { attribute_name: http_endpoint_attribute_name, attribute_value: http_endpoint_attribute_value }
      class HttpEndpointCommonAttribute
        attr_accessor attribute_name: http_endpoint_attribute_name
        attr_accessor attribute_value: http_endpoint_attribute_value
      end
      type http_endpoint_common_attributes_list_input = ::Array[http_endpoint_common_attribute]
      type http_endpoint_common_attributes_list_output = ::Array[HttpEndpointCommonAttribute]
      type http_endpoint_configuration = { url: http_endpoint_url, name: http_endpoint_name?, access_key: http_endpoint_access_key? }
      class HttpEndpointDescription
        attr_accessor url: http_endpoint_url
        attr_accessor name: http_endpoint_name
      end
      type http_endpoint_destination_configuration = { endpoint_configuration: http_endpoint_configuration, buffering_hints: http_endpoint_buffering_hints?, cloud_watch_logging_options: cloud_watch_logging_options?, request_configuration: http_endpoint_request_configuration?, processing_configuration: processing_configuration?, role_arn: role_arn?, retry_options: http_endpoint_retry_options?, s3_backup_mode: http_endpoint_s3_backup_mode?, s3_configuration: s3_destination_configuration }
      class HttpEndpointDestinationDescription
        attr_accessor endpoint_configuration: HttpEndpointDescription
        attr_accessor buffering_hints: HttpEndpointBufferingHints
        attr_accessor cloud_watch_logging_options: CloudWatchLoggingOptions
        attr_accessor request_configuration: HttpEndpointRequestConfiguration
        attr_accessor processing_configuration: ProcessingConfiguration
        attr_accessor role_arn: role_arn
        attr_accessor retry_options: HttpEndpointRetryOptions
        attr_accessor s3_backup_mode: http_endpoint_s3_backup_mode
        attr_accessor s3_destination_description: S3DestinationDescription
      end
      type http_endpoint_destination_update = { endpoint_configuration: http_endpoint_configuration?, buffering_hints: http_endpoint_buffering_hints?, cloud_watch_logging_options: cloud_watch_logging_options?, request_configuration: http_endpoint_request_configuration?, processing_configuration: processing_configuration?, role_arn: role_arn?, retry_options: http_endpoint_retry_options?, s3_backup_mode: http_endpoint_s3_backup_mode?, s3_update: s3_destination_update? }
      type http_endpoint_name = ::String
      type http_endpoint_request_configuration = { content_encoding: content_encoding?, common_attributes: http_endpoint_common_attributes_list_input? }
      class HttpEndpointRequestConfiguration
        attr_accessor content_encoding: content_encoding
        attr_accessor common_attributes: http_endpoint_common_attributes_list_output
      end
      type http_endpoint_retry_duration_in_seconds = ::Integer
      type http_endpoint_retry_options = { duration_in_seconds: http_endpoint_retry_duration_in_seconds? }
      class HttpEndpointRetryOptions
        attr_accessor duration_in_seconds: http_endpoint_retry_duration_in_seconds
      end
      type http_endpoint_s3_backup_mode = ("FailedDataOnly" | "AllData")
      type http_endpoint_url = ::String
      type input_format_configuration = { deserializer: deserializer? }
      class InputFormatConfiguration
        attr_accessor deserializer: Deserializer
      end
      type interval_in_seconds = ::Integer
      type kms_encryption_config = { awskms_key_arn: awskms_key_arn }
      class KMSEncryptionConfig
        attr_accessor awskms_key_arn: awskms_key_arn
      end
      type key_type = ("AWS_OWNED_CMK" | "CUSTOMER_MANAGED_CMK")
      type kinesis_stream_arn = ::String
      type kinesis_stream_source_configuration = { kinesis_stream_arn: kinesis_stream_arn, role_arn: role_arn }
      class KinesisStreamSourceDescription
        attr_accessor kinesis_stream_arn: kinesis_stream_arn
        attr_accessor role_arn: role_arn
        attr_accessor delivery_start_timestamp: delivery_start_timestamp
      end
      type list_delivery_streams_input = { limit: list_delivery_streams_input_limit?, delivery_stream_type: delivery_stream_type?, exclusive_start_delivery_stream_name: delivery_stream_name? }
      type list_delivery_streams_input_limit = ::Integer
      class ListDeliveryStreamsOutput
        attr_accessor delivery_stream_names: delivery_stream_name_list
        attr_accessor has_more_delivery_streams: boolean_object
      end
      type list_of_non_empty_strings = ::Array[non_empty_string]
      type list_of_non_empty_strings_without_whitespace = ::Array[non_empty_string_without_whitespace]
      type list_tags_for_delivery_stream_input = { delivery_stream_name: delivery_stream_name, exclusive_start_tag_key: tag_key?, limit: list_tags_for_delivery_stream_input_limit? }
      type list_tags_for_delivery_stream_input_limit = ::Integer
      class ListTagsForDeliveryStreamOutput
        attr_accessor tags: list_tags_for_delivery_stream_output_tag_list_output
        attr_accessor has_more_tags: boolean_object
      end
      type list_tags_for_delivery_stream_output_tag_list_output = ::Array[Tag]
      type log_group_name = ::String
      type log_stream_name = ::String
      type no_encryption_config = ("NoEncryption")
      type non_empty_string = ::String
      type non_empty_string_without_whitespace = ::String
      type non_negative_integer_object = ::Integer
      type open_x_json_ser_de = { convert_dots_in_json_keys_to_underscores: boolean_object?, case_insensitive: boolean_object?, column_to_json_key_mappings: column_to_json_key_mappings? }
      class OpenXJsonSerDe
        attr_accessor convert_dots_in_json_keys_to_underscores: boolean_object
        attr_accessor case_insensitive: boolean_object
        attr_accessor column_to_json_key_mappings: column_to_json_key_mappings
      end
      type orc_compression = ("NONE" | "ZLIB" | "SNAPPY")
      type orc_format_version = ("V0_11" | "V0_12")
      type orc_row_index_stride = ::Integer
      type orc_ser_de = { stripe_size_bytes: orc_stripe_size_bytes?, block_size_bytes: block_size_bytes?, row_index_stride: orc_row_index_stride?, enable_padding: boolean_object?, padding_tolerance: proportion?, compression: orc_compression?, bloom_filter_columns: list_of_non_empty_strings_without_whitespace?, bloom_filter_false_positive_probability: proportion?, dictionary_key_threshold: proportion?, format_version: orc_format_version? }
      class OrcSerDe
        attr_accessor stripe_size_bytes: orc_stripe_size_bytes
        attr_accessor block_size_bytes: block_size_bytes
        attr_accessor row_index_stride: orc_row_index_stride
        attr_accessor enable_padding: boolean_object
        attr_accessor padding_tolerance: proportion
        attr_accessor compression: orc_compression
        attr_accessor bloom_filter_columns: list_of_non_empty_strings_without_whitespace
        attr_accessor bloom_filter_false_positive_probability: proportion
        attr_accessor dictionary_key_threshold: proportion
        attr_accessor format_version: orc_format_version
      end
      type orc_stripe_size_bytes = ::Integer
      type output_format_configuration = { serializer: serializer? }
      class OutputFormatConfiguration
        attr_accessor serializer: Serializer
      end
      type parquet_compression = ("UNCOMPRESSED" | "GZIP" | "SNAPPY")
      type parquet_page_size_bytes = ::Integer
      type parquet_ser_de = { block_size_bytes: block_size_bytes?, page_size_bytes: parquet_page_size_bytes?, compression: parquet_compression?, enable_dictionary_compression: boolean_object?, max_padding_bytes: non_negative_integer_object?, writer_version: parquet_writer_version? }
      class ParquetSerDe
        attr_accessor block_size_bytes: block_size_bytes
        attr_accessor page_size_bytes: parquet_page_size_bytes
        attr_accessor compression: parquet_compression
        attr_accessor enable_dictionary_compression: boolean_object
        attr_accessor max_padding_bytes: non_negative_integer_object
        attr_accessor writer_version: parquet_writer_version
      end
      type parquet_writer_version = ("V1" | "V2")
      type password = ::String
      type prefix = ::String
      type processing_configuration = { enabled: boolean_object?, processors: processor_list_input? }
      class ProcessingConfiguration
        attr_accessor enabled: boolean_object
        attr_accessor processors: processor_list_output
      end
      type processor = { type: processor_type, parameters: processor_parameter_list_input? }
      class Processor
        attr_accessor type_: processor_type
        attr_accessor parameters: processor_parameter_list_output
      end
      type processor_list_input = ::Array[processor]
      type processor_list_output = ::Array[Processor]
      type processor_parameter = { parameter_name: processor_parameter_name, parameter_value: processor_parameter_value }
      class ProcessorParameter
        attr_accessor parameter_name: processor_parameter_name
        attr_accessor parameter_value: processor_parameter_value
      end
      type processor_parameter_list_input = ::Array[processor_parameter]
      type processor_parameter_list_output = ::Array[ProcessorParameter]
      type processor_parameter_name = ("LambdaArn" | "NumberOfRetries" | "MetadataExtractionQuery" | "JsonParsingEngine" | "RoleArn" | "BufferSizeInMBs" | "BufferIntervalInSeconds" | "SubRecordType" | "Delimiter")
      type processor_parameter_value = ::String
      type processor_type = ("RecordDeAggregation" | "Lambda" | "MetadataExtraction" | "AppendDelimiterToRecord")
      type proportion = ::Float
      type put_record_batch_input = { delivery_stream_name: delivery_stream_name, records: put_record_batch_request_entry_list }
      class PutRecordBatchOutput
        attr_accessor failed_put_count: non_negative_integer_object
        attr_accessor encrypted: boolean_object
        attr_accessor request_responses: put_record_batch_response_entry_list
      end
      type put_record_batch_request_entry_list = ::Array[record]
      class PutRecordBatchResponseEntry
        attr_accessor record_id: put_response_record_id
        attr_accessor error_code: error_code
        attr_accessor error_message: error_message
      end
      type put_record_batch_response_entry_list = ::Array[PutRecordBatchResponseEntry]
      type put_record_input = { delivery_stream_name: delivery_stream_name, record: record }
      class PutRecordOutput
        attr_accessor record_id: put_response_record_id
        attr_accessor encrypted: boolean_object
      end
      type put_response_record_id = ::String
      type record = { data: data }
      type redshift_destination_configuration = { role_arn: role_arn, cluster_jdbc_url: cluster_jdbc_url, copy_command: copy_command, username: username, password: password, retry_options: redshift_retry_options?, s3_configuration: s3_destination_configuration, processing_configuration: processing_configuration?, s3_backup_mode: redshift_s3_backup_mode?, s3_backup_configuration: s3_destination_configuration?, cloud_watch_logging_options: cloud_watch_logging_options? }
      class RedshiftDestinationDescription
        attr_accessor role_arn: role_arn
        attr_accessor cluster_jdbc_url: cluster_jdbc_url
        attr_accessor copy_command: CopyCommand
        attr_accessor username: username
        attr_accessor retry_options: RedshiftRetryOptions
        attr_accessor s3_destination_description: S3DestinationDescription
        attr_accessor processing_configuration: ProcessingConfiguration
        attr_accessor s3_backup_mode: redshift_s3_backup_mode
        attr_accessor s3_backup_description: S3DestinationDescription
        attr_accessor cloud_watch_logging_options: CloudWatchLoggingOptions
      end
      type redshift_destination_update = { role_arn: role_arn?, cluster_jdbc_url: cluster_jdbc_url?, copy_command: copy_command?, username: username?, password: password?, retry_options: redshift_retry_options?, s3_update: s3_destination_update?, processing_configuration: processing_configuration?, s3_backup_mode: redshift_s3_backup_mode?, s3_backup_update: s3_destination_update?, cloud_watch_logging_options: cloud_watch_logging_options? }
      type redshift_retry_duration_in_seconds = ::Integer
      type redshift_retry_options = { duration_in_seconds: redshift_retry_duration_in_seconds? }
      class RedshiftRetryOptions
        attr_accessor duration_in_seconds: redshift_retry_duration_in_seconds
      end
      type redshift_s3_backup_mode = ("Disabled" | "Enabled")
      type retry_duration_in_seconds = ::Integer
      type retry_options = { duration_in_seconds: retry_duration_in_seconds? }
      class RetryOptions
        attr_accessor duration_in_seconds: retry_duration_in_seconds
      end
      type role_arn = ::String
      type s3_backup_mode = ("Disabled" | "Enabled")
      type s3_destination_configuration = { role_arn: role_arn, bucket_arn: bucket_arn, prefix: prefix?, error_output_prefix: error_output_prefix?, buffering_hints: buffering_hints?, compression_format: compression_format?, encryption_configuration: encryption_configuration?, cloud_watch_logging_options: cloud_watch_logging_options? }
      class S3DestinationDescription
        attr_accessor role_arn: role_arn
        attr_accessor bucket_arn: bucket_arn
        attr_accessor prefix: prefix
        attr_accessor error_output_prefix: error_output_prefix
        attr_accessor buffering_hints: BufferingHints
        attr_accessor compression_format: compression_format
        attr_accessor encryption_configuration: EncryptionConfiguration
        attr_accessor cloud_watch_logging_options: CloudWatchLoggingOptions
      end
      type s3_destination_update = { role_arn: role_arn?, bucket_arn: bucket_arn?, prefix: prefix?, error_output_prefix: error_output_prefix?, buffering_hints: buffering_hints?, compression_format: compression_format?, encryption_configuration: encryption_configuration?, cloud_watch_logging_options: cloud_watch_logging_options? }
      type schema_configuration = { role_arn: non_empty_string_without_whitespace?, catalog_id: non_empty_string_without_whitespace?, database_name: non_empty_string_without_whitespace?, table_name: non_empty_string_without_whitespace?, region: non_empty_string_without_whitespace?, version_id: non_empty_string_without_whitespace? }
      class SchemaConfiguration
        attr_accessor role_arn: non_empty_string_without_whitespace
        attr_accessor catalog_id: non_empty_string_without_whitespace
        attr_accessor database_name: non_empty_string_without_whitespace
        attr_accessor table_name: non_empty_string_without_whitespace
        attr_accessor region: non_empty_string_without_whitespace
        attr_accessor version_id: non_empty_string_without_whitespace
      end
      type security_group_id_list = ::Array[non_empty_string_without_whitespace]
      type serializer = { parquet_ser_de: parquet_ser_de?, orc_ser_de: orc_ser_de? }
      class Serializer
        attr_accessor parquet_ser_de: ParquetSerDe
        attr_accessor orc_ser_de: OrcSerDe
      end
      type size_in_m_bs = ::Integer
      class SourceDescription
        attr_accessor kinesis_stream_source_description: KinesisStreamSourceDescription
      end
      type splunk_destination_configuration = { hec_endpoint: hec_endpoint, hec_endpoint_type: hec_endpoint_type, hec_token: hec_token, hec_acknowledgment_timeout_in_seconds: hec_acknowledgment_timeout_in_seconds?, retry_options: splunk_retry_options?, s3_backup_mode: splunk_s3_backup_mode?, s3_configuration: s3_destination_configuration, processing_configuration: processing_configuration?, cloud_watch_logging_options: cloud_watch_logging_options? }
      class SplunkDestinationDescription
        attr_accessor hec_endpoint: hec_endpoint
        attr_accessor hec_endpoint_type: hec_endpoint_type
        attr_accessor hec_token: hec_token
        attr_accessor hec_acknowledgment_timeout_in_seconds: hec_acknowledgment_timeout_in_seconds
        attr_accessor retry_options: SplunkRetryOptions
        attr_accessor s3_backup_mode: splunk_s3_backup_mode
        attr_accessor s3_destination_description: S3DestinationDescription
        attr_accessor processing_configuration: ProcessingConfiguration
        attr_accessor cloud_watch_logging_options: CloudWatchLoggingOptions
      end
      type splunk_destination_update = { hec_endpoint: hec_endpoint?, hec_endpoint_type: hec_endpoint_type?, hec_token: hec_token?, hec_acknowledgment_timeout_in_seconds: hec_acknowledgment_timeout_in_seconds?, retry_options: splunk_retry_options?, s3_backup_mode: splunk_s3_backup_mode?, s3_update: s3_destination_update?, processing_configuration: processing_configuration?, cloud_watch_logging_options: cloud_watch_logging_options? }
      type splunk_retry_duration_in_seconds = ::Integer
      type splunk_retry_options = { duration_in_seconds: splunk_retry_duration_in_seconds? }
      class SplunkRetryOptions
        attr_accessor duration_in_seconds: splunk_retry_duration_in_seconds
      end
      type splunk_s3_backup_mode = ("FailedEventsOnly" | "AllEvents")
      type start_delivery_stream_encryption_input = { delivery_stream_name: delivery_stream_name, delivery_stream_encryption_configuration_input: delivery_stream_encryption_configuration_input? }
      class StartDeliveryStreamEncryptionOutput < Aws::EmptyStructure
      end
      type stop_delivery_stream_encryption_input = { delivery_stream_name: delivery_stream_name }
      class StopDeliveryStreamEncryptionOutput < Aws::EmptyStructure
      end
      type subnet_id_list = ::Array[non_empty_string_without_whitespace]
      type tag = { key: tag_key, value: tag_value? }
      class Tag
        attr_accessor key: tag_key
        attr_accessor value: tag_value
      end
      type tag_delivery_stream_input = { delivery_stream_name: delivery_stream_name, tags: tag_delivery_stream_input_tag_list_input }
      type tag_delivery_stream_input_tag_list_input = ::Array[tag]
      class TagDeliveryStreamOutput < Aws::EmptyStructure
      end
      type tag_key = ::String
      type tag_key_list = ::Array[tag_key]
      type tag_value = ::String
      type timestamp = ::Time
      type untag_delivery_stream_input = { delivery_stream_name: delivery_stream_name, tag_keys: tag_key_list }
      class UntagDeliveryStreamOutput < Aws::EmptyStructure
      end
      type update_destination_input = { delivery_stream_name: delivery_stream_name, current_delivery_stream_version_id: delivery_stream_version_id, destination_id: destination_id, s3_destination_update: s3_destination_update?, extended_s3_destination_update: extended_s3_destination_update?, redshift_destination_update: redshift_destination_update?, elasticsearch_destination_update: elasticsearch_destination_update?, amazonopensearchservice_destination_update: amazonopensearchservice_destination_update?, splunk_destination_update: splunk_destination_update?, http_endpoint_destination_update: http_endpoint_destination_update?, amazon_open_search_serverless_destination_update: amazon_open_search_serverless_destination_update? }
      class UpdateDestinationOutput < Aws::EmptyStructure
      end
      type username = ::String
      type vpc_configuration = { subnet_ids: subnet_id_list, role_arn: role_arn, security_group_ids: security_group_id_list }
      class VpcConfigurationDescription
        attr_accessor subnet_ids: subnet_id_list
        attr_accessor role_arn: role_arn
        attr_accessor security_group_ids: security_group_id_list
        attr_accessor vpc_id: non_empty_string_without_whitespace
      end
    end
  end
end
