module Google
  # Module Auth provides classes that provide Google-specific authorization
  # used to access Google APIs.
  module Auth
    # CredentialsLoader contains the behaviour used to locate and find default
    # credentials files on the file system.
    module CredentialsLoader
      ENV_VAR: "GOOGLE_APPLICATION_CREDENTIALS"

      PRIVATE_KEY_VAR: "GOOGLE_PRIVATE_KEY"

      CLIENT_EMAIL_VAR: "GOOGLE_CLIENT_EMAIL"

      CLIENT_ID_VAR: "GOOGLE_CLIENT_ID"

      CLIENT_SECRET_VAR: "GOOGLE_CLIENT_SECRET"

      REFRESH_TOKEN_VAR: "GOOGLE_REFRESH_TOKEN"

      ACCOUNT_TYPE_VAR: "GOOGLE_ACCOUNT_TYPE"

      PROJECT_ID_VAR: "GOOGLE_PROJECT_ID"

      AWS_REGION_VAR: "AWS_REGION"

      AWS_DEFAULT_REGION_VAR: "AWS_DEFAULT_REGION"

      AWS_ACCESS_KEY_ID_VAR: "AWS_ACCESS_KEY_ID"

      AWS_SECRET_ACCESS_KEY_VAR: "AWS_SECRET_ACCESS_KEY"

      AWS_SESSION_TOKEN_VAR: "AWS_SESSION_TOKEN"

      GCLOUD_POSIX_COMMAND: "gcloud"

      GCLOUD_WINDOWS_COMMAND: "gcloud.cmd"

      GCLOUD_CONFIG_COMMAND: "config config-helper --format json --verbosity none"

      CREDENTIALS_FILE_NAME: "application_default_credentials.json"

      NOT_FOUND_ERROR: ::String

      WELL_KNOWN_PATH: ::String

      WELL_KNOWN_ERROR: "Unable to read the default credential file"

      SYSTEM_DEFAULT_ERROR: "Unable to read the system default credential file"

      CLOUD_SDK_CLIENT_ID: "764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.com"

      # make_creds proxies the construction of a credentials instance
      #
      # By default, it calls #new on the current class, but this behaviour can
      # be modified, allowing different instances to be created.
      def make_creds: (*untyped args) -> untyped

      # Creates an instance from the path specified in an environment
      # variable.
      #
      # @param scope [string|array|nil] the scope(s) to access
      # @param options [Hash] Connection options. These may be used to configure
      #     how OAuth tokens are retrieved, by providing a suitable
      #     `Faraday::Connection`. For example, if a connection proxy must be
      #     used in the current network, you may provide a connection with
      #     with the needed proxy options.
      #     The following keys are recognized:
      #     * `:default_connection` The connection object to use.
      #     * `:connection_builder` A `Proc` that returns a connection.
      def from_env: (?untyped? scope, ?::Hash[untyped, untyped] options) -> untyped

      # Creates an instance from a well known path.
      #
      # @param scope [string|array|nil] the scope(s) to access
      # @param options [Hash] Connection options. These may be used to configure
      #     how OAuth tokens are retrieved, by providing a suitable
      #     `Faraday::Connection`. For example, if a connection proxy must be
      #     used in the current network, you may provide a connection with
      #     with the needed proxy options.
      #     The following keys are recognized:
      #     * `:default_connection` The connection object to use.
      #     * `:connection_builder` A `Proc` that returns a connection.
      def from_well_known_path: (?untyped? scope, ?::Hash[untyped, untyped] options) -> untyped

      # Creates an instance from the system default path
      #
      # @param scope [string|array|nil] the scope(s) to access
      # @param options [Hash] Connection options. These may be used to configure
      #     how OAuth tokens are retrieved, by providing a suitable
      #     `Faraday::Connection`. For example, if a connection proxy must be
      #     used in the current network, you may provide a connection with
      #     with the needed proxy options.
      #     The following keys are recognized:
      #     * `:default_connection` The connection object to use.
      #     * `:connection_builder` A `Proc` that returns a connection.
      def from_system_default_path: (?untyped? scope, ?::Hash[untyped, untyped] options) -> untyped

      # Finds project_id from gcloud CLI configuration
      def self?.load_gcloud_project_id: () -> untyped

      private

      def self?.interpret_options: (untyped scope, untyped options) -> untyped

      def self?.service_account_env_vars?: () -> untyped

      def self?.authorized_user_env_vars?: () -> untyped
    end
  end
end
