module Roo
  class Excelx
    class Cell
      class DateTime < Cell::Base
        @format: untyped

        @value: untyped

        SECONDS_IN_DAY: untyped

        attr_reader value: untyped

        attr_reader formula: untyped

        attr_reader format: untyped

        attr_reader cell_value: untyped

        attr_reader coordinate: untyped

        def initialize: (untyped value, untyped formula, untyped excelx_type, untyped style, untyped link, untyped base_timestamp, untyped coordinate) -> void

        # Public: Returns formatted value for a datetime. Format's can be an
        #         standard excel format, or a custom format.
        #
        #         Standard formats follow certain conventions. Date fields for
        #         days, months, and years are separated with hyhens or
        #         slashes ("-", /") (e.g. 01-JAN, 1/13/15). Time fields for
        #         hours, minutes, and seconds are separated with a colon (e.g.
        #         12:45:01).
        #
        #         If a custom format follows those conventions, then the custom
        #         format will be used for the a cell's formatted value.
        #         Otherwise, the formatted value will be in the following
        #         format: 'YYYY-mm-dd HH:MM:SS' (e.g. "2015-07-10 20:33:15").
        #
        # Examples
        #    formatted_value #=> '01-JAN'
        #
        # Returns a String representation of a cell's value.
        def formatted_value: () -> untyped

        private

        def parse_date_or_time_format: (untyped part) -> (false | untyped)

        DATE_FORMATS: ::Hash[::String, "%Y" | "%y" | "%B" | "%^b" | "%m" | "%-m" | "%A" | "%^a" | "%d" | "%-d"]

        TIME_FORMATS: ::Hash[::String, "%H" | "%-k" | "%M" | "%-M" | "%S" | "%-S" | "%p" | "%3N" | "%2N" | "%1N"]

        def create_datetime: (untyped base_timestamp, untyped value) -> untyped
      end
    end
  end
end
