module Roo
  class Excelx
    class SharedStrings < Excelx::Extractor
      @array: Array[String]

      @html: Array[String]

      @options: { disable_html_wrapper: bool }

      def []: (Integer index) -> (String | nil)

      def to_a: () -> Array[String]

      def to_html: () -> Array[String]

      # Use to_html or to_a for html returns
      # See what is happening with commit???
      def use_html?: (Integer index) -> (false | String)

      private

      def fix_invalid_shared_strings: (Nokogiri::XML::Document doc) -> Nokogiri::XML::Document

      def extract_shared_strings: () -> Array[String]

      def extract_html: () -> Array[String]

      # The goal of this function is to take the following XML code snippet and create a html tag
      # r_elem ::: XML Element that is in sharedStrings.xml of excel_book.xlsx
      # {code:xml}
      # <r>
      #   <rPr>
      #      <i/>
      #      <b/>
      #      <u/>
      #      <vertAlign val="subscript"/>
      #      <vertAlign val="superscript"/>
      #   </rPr>
      #   <t>TEXT</t>
      # </r>
      # {code}
      #
      # Expected Output ::: "<html><sub|sup><b><i><u>TEXT</u></i></b></sub|/sup></html>"
      def extract_html_r: (Nokogiri::XML::Node r_elem) -> String

      # This will return an html string
      def create_html: (String text, { sub: bool, sup: bool, b: bool, i: bool, u: bool } formatting) -> String
    end
  end
end
