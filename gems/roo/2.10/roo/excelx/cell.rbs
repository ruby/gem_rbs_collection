module Roo
  class Excelx
    class Cell
      @type: :float | :percentage | :date | :datetime | :time

      @formula: string | nil

      @base_date: ::Date | nil

      @excelx_type: untyped

      @excelx_value: untyped

      @style: string | nil

      @value: float | ::Date | ::DateTime | string

      @coordinate: ::Roo::Excelx::Coordinate

      attr_reader formula: string | nil

      attr_reader value: float | ::Date | ::DateTime | string

      attr_reader excelx_type: untyped

      attr_reader excelx_value: untyped

      attr_reader style: string | nil

      attr_reader hyperlink: string | nil

      attr_reader coordinate: ::Roo::Excelx::Coordinate

      attr_writer value: float | ::Date | ::DateTime | string

      # DEPRECATED: Please use Cell.create_cell instead.
      def initialize: (int | string | float value, :float | :percentage | :date | :datetime | :time type, string | nil formula, untyped excelx_type, untyped excelx_value, string | nil style, string | nil hyperlink, ::Date | nil base_date, Excelx::Coordinate coordinate) -> void

      def type: () -> (:float | :percentage | :date | :datetime | :time)

      def self.create_cell: (:string type, *[string, string | nil, string | nil, string | nil, ::Roo::Excelx::Coordinate] values) -> Cell::String
                          | (:boolean type, *[string, string | nil, int, string | nil, ::Roo::Excelx::Coordinate] values) -> Cell::Boolean
                          | (:number type, *[string, string | nil, [:numeric_or_formula, string], string | nil, string | nil, ::Roo::Excelx::Coordinate] values) -> Cell::Number
                          | (:date type, *[string, string | nil, [:numeric_or_formula, string], string | nil, string | nil, ::Date, ::Roo::Excelx::Coordinate] values) -> Cell::Date
                          | (:datetime type, *[string, string | nil, [:numeric_or_formula, string], string | nil, string | nil, int, ::Roo::Excelx::Coordinate] values) -> Cell::DateTime
                          | (:time type, *[string, string | nil, [:numeric_or_formula, string], string | nil, string | nil, ::Date, ::Roo::Excelx::Coordinate] values) -> Cell::Time
                          | (untyped type, *untyped values) -> nil

      def self.cell_class: (:string | :boolean | :number | :date | :datetime | :time type) -> Class
                         | (untyped type) -> nil

      # Deprecated: use Roo::Excelx::Coordinate instead.
      class Coordinate
        @row: int

        @column: int

        attr_accessor row: int

        attr_accessor column: int

        def initialize: (int row, int column) -> void
      end

      private

      def type_cast_value: (int | string | float value) -> (float | ::Date | ::DateTime | string)

      def create_date: (::Date date) -> ::Date

      def create_datetime: (::Date date) -> ::DateTime

      def round_datetime: (string datetime_string) -> ::Time
    end
  end
end
