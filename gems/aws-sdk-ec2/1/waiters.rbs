# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the generator README.md for more information:
# https://github.com/ruby/gem_rbs_collection/blob/main/generators/aws-sdk-rbs-generator/README.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module EC2
    module Waiters
      class BundleTaskComplete
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_bundle_tasks_request) -> Types::DescribeBundleTasksResult
      end
      class ConversionTaskCancelled
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_conversion_tasks_request) -> Types::DescribeConversionTasksResult
      end
      class ConversionTaskCompleted
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_conversion_tasks_request) -> Types::DescribeConversionTasksResult
      end
      class ConversionTaskDeleted
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_conversion_tasks_request) -> Types::DescribeConversionTasksResult
      end
      class CustomerGatewayAvailable
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_customer_gateways_request) -> Types::DescribeCustomerGatewaysResult
      end
      class ExportTaskCancelled
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_export_tasks_request) -> Types::DescribeExportTasksResult
      end
      class ExportTaskCompleted
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_export_tasks_request) -> Types::DescribeExportTasksResult
      end
      class ImageAvailable
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_images_request) -> Types::DescribeImagesResult
      end
      class ImageExists
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_images_request) -> Types::DescribeImagesResult
      end
      class InstanceExists
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_instances_request) -> Types::DescribeInstancesResult
      end
      class InstanceRunning
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_instances_request) -> Types::DescribeInstancesResult
      end
      class InstanceStatusOk
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_instance_status_request) -> Types::DescribeInstanceStatusResult
      end
      class InstanceStopped
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_instances_request) -> Types::DescribeInstancesResult
      end
      class InstanceTerminated
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_instances_request) -> Types::DescribeInstancesResult
      end
      class InternetGatewayExists
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_internet_gateways_request) -> Types::DescribeInternetGatewaysResult
      end
      class KeyPairExists
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_key_pairs_request) -> Types::DescribeKeyPairsResult
      end
      class NatGatewayAvailable
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_nat_gateways_request) -> Types::DescribeNatGatewaysResult
      end
      class NatGatewayDeleted
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_nat_gateways_request) -> Types::DescribeNatGatewaysResult
      end
      class NetworkInterfaceAvailable
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_network_interfaces_request) -> Types::DescribeNetworkInterfacesResult
      end
      class PasswordDataAvailable
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::get_password_data_request) -> Types::GetPasswordDataResult
      end
      class SecurityGroupExists
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_security_groups_request) -> Types::DescribeSecurityGroupsResult
      end
      class SnapshotCompleted
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_snapshots_request) -> Types::DescribeSnapshotsResult
      end
      class SnapshotImported
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_import_snapshot_tasks_request) -> Types::DescribeImportSnapshotTasksResult
      end
      class SpotInstanceRequestFulfilled
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_spot_instance_requests_request) -> Types::DescribeSpotInstanceRequestsResult
      end
      class SubnetAvailable
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_subnets_request) -> Types::DescribeSubnetsResult
      end
      class SystemStatusOk
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_instance_status_request) -> Types::DescribeInstanceStatusResult
      end
      class VolumeAvailable
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_volumes_request) -> Types::DescribeVolumesResult
      end
      class VolumeDeleted
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_volumes_request) -> Types::DescribeVolumesResult
      end
      class VolumeInUse
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_volumes_request) -> Types::DescribeVolumesResult
      end
      class VpcAvailable
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_vpcs_request) -> Types::DescribeVpcsResult
      end
      class VpcExists
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_vpcs_request) -> Types::DescribeVpcsResult
      end
      class VpcPeeringConnectionDeleted
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_vpc_peering_connections_request) -> Types::DescribeVpcPeeringConnectionsResult
      end
      class VpcPeeringConnectionExists
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_vpc_peering_connections_request) -> Types::DescribeVpcPeeringConnectionsResult
      end
      class VpnConnectionAvailable
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_vpn_connections_request) -> Types::DescribeVpnConnectionsResult
      end
      class VpnConnectionDeleted
        def initialize: (client: Client, ?max_attempts: Integer, ?delay: Integer, ?before_attempt: Proc, before_wait: Proc) -> void
        def wait: (Types::describe_vpn_connections_request) -> Types::DescribeVpnConnectionsResult
      end
    end
  end
end
