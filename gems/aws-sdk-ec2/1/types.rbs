# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the generator README.md for more information:
# https://github.com/ruby/gem_rbs_collection/blob/main/generators/aws-sdk-rbs-generator/README.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module EC2
    module Types
      class AcceleratorCount
        attr_accessor min: integer
        attr_accessor max: integer
      end
      type accelerator_count = { min: integer?, max: integer? }
      type accelerator_count_request = { min: integer?, max: integer? }
      type accelerator_manufacturer = ("nvidia" | "amd" | "amazon-web-services" | "xilinx")
      type accelerator_manufacturer_set = ::Array[accelerator_manufacturer]
      type accelerator_name = ("a100" | "v100" | "k80" | "t4" | "m60" | "radeon-pro-v520" | "vu9p" | "inferentia" | "k520")
      type accelerator_name_set = ::Array[accelerator_name]
      class AcceleratorTotalMemoryMiB
        attr_accessor min: integer
        attr_accessor max: integer
      end
      type accelerator_total_memory_mi_b = { min: integer?, max: integer? }
      type accelerator_total_memory_mi_b_request = { min: integer?, max: integer? }
      type accelerator_type = ("gpu" | "fpga" | "inference")
      type accelerator_type_set = ::Array[accelerator_type]
      type accept_address_transfer_request = { address: string, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class AcceptAddressTransferResult
        attr_accessor address_transfer: AddressTransfer
      end
      type accept_reserved_instances_exchange_quote_request = { dry_run: boolean?, reserved_instance_ids: reserved_instance_id_set, target_configurations: target_configuration_request_set? }
      class AcceptReservedInstancesExchangeQuoteResult
        attr_accessor exchange_id: string
      end
      type accept_transit_gateway_multicast_domain_associations_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id?, transit_gateway_attachment_id: transit_gateway_attachment_id?, subnet_ids: value_string_list?, dry_run: boolean? }
      class AcceptTransitGatewayMulticastDomainAssociationsResult
        attr_accessor associations: TransitGatewayMulticastDomainAssociations
      end
      type accept_transit_gateway_peering_attachment_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class AcceptTransitGatewayPeeringAttachmentResult
        attr_accessor transit_gateway_peering_attachment: TransitGatewayPeeringAttachment
      end
      type accept_transit_gateway_vpc_attachment_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class AcceptTransitGatewayVpcAttachmentResult
        attr_accessor transit_gateway_vpc_attachment: TransitGatewayVpcAttachment
      end
      type accept_vpc_endpoint_connections_request = { dry_run: boolean?, service_id: vpc_endpoint_service_id, vpc_endpoint_ids: vpc_endpoint_id_list }
      class AcceptVpcEndpointConnectionsResult
        attr_accessor unsuccessful: unsuccessful_item_set
      end
      type accept_vpc_peering_connection_request = { dry_run: boolean?, vpc_peering_connection_id: vpc_peering_connection_id_with_resolver }
      class AcceptVpcPeeringConnectionResult
        attr_accessor vpc_peering_connection: VpcPeeringConnection
      end
      class AccessScopeAnalysisFinding
        attr_accessor network_insights_access_scope_analysis_id: network_insights_access_scope_analysis_id
        attr_accessor network_insights_access_scope_id: network_insights_access_scope_id
        attr_accessor finding_id: string
        attr_accessor finding_components: path_component_list
      end
      type access_scope_analysis_finding_list = ::Array[AccessScopeAnalysisFinding]
      class AccessScopePath
        attr_accessor source: PathStatement
        attr_accessor destination: PathStatement
        attr_accessor through_resources: through_resources_statement_list
      end
      type access_scope_path_list = ::Array[AccessScopePath]
      type access_scope_path_list_request = ::Array[access_scope_path_request]
      type access_scope_path_request = { source: path_statement_request?, destination: path_statement_request?, through_resources: through_resources_statement_request_list? }
      class AccountAttribute
        attr_accessor attribute_name: string
        attr_accessor attribute_values: account_attribute_value_list
      end
      type account_attribute_list = ::Array[AccountAttribute]
      type account_attribute_name = ("supported-platforms" | "default-vpc")
      type account_attribute_name_string_list = ::Array[account_attribute_name]
      class AccountAttributeValue
        attr_accessor attribute_value: string
      end
      type account_attribute_value_list = ::Array[AccountAttributeValue]
      class ActiveInstance
        attr_accessor instance_id: string
        attr_accessor instance_type: string
        attr_accessor spot_instance_request_id: string
        attr_accessor instance_health: instance_health_status
      end
      type active_instance_set = ::Array[ActiveInstance]
      type activity_status = ("error" | "pending_fulfillment" | "pending_termination" | "fulfilled")
      type add_ipam_operating_region = { region_name: string? }
      type add_ipam_operating_region_set = ::Array[add_ipam_operating_region]
      type add_prefix_list_entries = ::Array[add_prefix_list_entry]
      type add_prefix_list_entry = { cidr: string, description: string? }
      class AddedPrincipal
        attr_accessor principal_type: principal_type
        attr_accessor principal: string
        attr_accessor service_permission_id: string
        attr_accessor service_id: string
      end
      type added_principal_set = ::Array[AddedPrincipal]
      class AdditionalDetail
        attr_accessor additional_detail_type: string
        attr_accessor component: AnalysisComponent
        attr_accessor vpc_endpoint_service: AnalysisComponent
        attr_accessor rule_options: rule_option_list
        attr_accessor rule_group_type_pairs: rule_group_type_pair_list
        attr_accessor rule_group_rule_options_pairs: rule_group_rule_options_pair_list
        attr_accessor service_name: string
        attr_accessor load_balancers: analysis_component_list_output
      end
      type additional_detail_list = ::Array[AdditionalDetail]
      class Address
        attr_accessor instance_id: string
        attr_accessor public_ip: string
        attr_accessor allocation_id: string
        attr_accessor association_id: string
        attr_accessor domain: domain_type
        attr_accessor network_interface_id: string
        attr_accessor network_interface_owner_id: string
        attr_accessor private_ip_address: string
        attr_accessor tags: tag_list_output
        attr_accessor public_ipv_4_pool: string
        attr_accessor network_border_group: string
        attr_accessor customer_owned_ip: string
        attr_accessor customer_owned_ipv_4_pool: string
        attr_accessor carrier_ip: string
      end
      class AddressAttribute
        attr_accessor public_ip: public_ip_address
        attr_accessor allocation_id: allocation_id
        attr_accessor ptr_record: string
        attr_accessor ptr_record_update: PtrUpdateStatus
      end
      type address_attribute_name = ("domain-name")
      type address_family = ("ipv4" | "ipv6")
      type address_list = ::Array[Address]
      type address_max_results = ::Integer
      type address_set_output = ::Array[AddressAttribute]
      class AddressTransfer
        attr_accessor public_ip: string
        attr_accessor allocation_id: string
        attr_accessor transfer_account_id: string
        attr_accessor transfer_offer_expiration_timestamp: millisecond_date_time
        attr_accessor transfer_offer_accepted_timestamp: millisecond_date_time
        attr_accessor address_transfer_status: address_transfer_status
      end
      type address_transfer_list_output = ::Array[AddressTransfer]
      type address_transfer_status = ("pending" | "disabled" | "accepted")
      type advertise_byoip_cidr_request = { cidr: string, dry_run: boolean? }
      class AdvertiseByoipCidrResult
        attr_accessor byoip_cidr: ByoipCidr
      end
      type affinity = ("default" | "host")
      type allocate_address_request = { domain: domain_type?, address: public_ip_address?, public_ipv_4_pool: ipv_4_pool_ec2_id?, network_border_group: string?, customer_owned_ipv_4_pool: string?, dry_run: boolean?, tag_specifications: tag_specification_list_input? }
      class AllocateAddressResult
        attr_accessor public_ip: string
        attr_accessor allocation_id: string
        attr_accessor public_ipv_4_pool: string
        attr_accessor network_border_group: string
        attr_accessor domain: domain_type
        attr_accessor customer_owned_ip: string
        attr_accessor customer_owned_ipv_4_pool: string
        attr_accessor carrier_ip: string
      end
      type allocate_hosts_request = { auto_placement: auto_placement?, availability_zone: string, client_token: string?, instance_type: string?, instance_family: string?, quantity: integer, tag_specifications: tag_specification_list_input?, host_recovery: host_recovery?, outpost_arn: string?, host_maintenance: host_maintenance? }
      class AllocateHostsResult
        attr_accessor host_ids: response_host_id_list
      end
      type allocate_ipam_pool_cidr_request = { dry_run: boolean?, ipam_pool_id: ipam_pool_id, cidr: string?, netmask_length: integer?, client_token: string?, description: string?, preview_next_cidr: boolean?, disallowed_cidrs: ipam_pool_allocation_disallowed_cidrs? }
      class AllocateIpamPoolCidrResult
        attr_accessor ipam_pool_allocation: IpamPoolAllocation
      end
      type allocation_id = ::String
      type allocation_id_list = ::Array[allocation_id]
      type allocation_ids = ::Array[allocation_id]
      type allocation_state = ("available" | "under-assessment" | "permanent-failure" | "released" | "released-permanent-failure" | "pending")
      type allocation_strategy = ("lowestPrice" | "diversified" | "capacityOptimized" | "capacityOptimizedPrioritized" | "priceCapacityOptimized")
      type allocation_type = ("used")
      type allowed_instance_type = ::String
      type allowed_instance_type_set = ::Array[allowed_instance_type]
      class AllowedPrincipal
        attr_accessor principal_type: principal_type
        attr_accessor principal: string
        attr_accessor service_permission_id: string
        attr_accessor tags: tag_list_output
        attr_accessor service_id: string
      end
      type allowed_principal_set = ::Array[AllowedPrincipal]
      type allows_multiple_instance_types = ("on" | "off")
      class AlternatePathHint
        attr_accessor component_id: string
        attr_accessor component_arn: string
      end
      type alternate_path_hint_list = ::Array[AlternatePathHint]
      type amd_sev_snp_specification = ("enabled" | "disabled")
      class AnalysisAclRule
        attr_accessor cidr: string
        attr_accessor egress: boolean
        attr_accessor port_range: PortRange
        attr_accessor protocol: string
        attr_accessor rule_action: string
        attr_accessor rule_number: integer
      end
      class AnalysisComponent
        attr_accessor id: string
        attr_accessor arn: string
        attr_accessor name: string
      end
      type analysis_component_list_output = ::Array[AnalysisComponent]
      class AnalysisLoadBalancerListener
        attr_accessor load_balancer_port: port
        attr_accessor instance_port: port
      end
      class AnalysisLoadBalancerTarget
        attr_accessor address: ip_address
        attr_accessor availability_zone: string
        attr_accessor instance_: AnalysisComponent
        attr_accessor port: port
      end
      class AnalysisPacketHeader
        attr_accessor destination_addresses: ip_address_list
        attr_accessor destination_port_ranges: port_range_list_output
        attr_accessor protocol: string
        attr_accessor source_addresses: ip_address_list
        attr_accessor source_port_ranges: port_range_list_output
      end
      class AnalysisRouteTableRoute
        attr_accessor destination_cidr: string
        attr_accessor destination_prefix_list_id: string
        attr_accessor egress_only_internet_gateway_id: string
        attr_accessor gateway_id: string
        attr_accessor instance_id: string
        attr_accessor nat_gateway_id: string
        attr_accessor network_interface_id: string
        attr_accessor origin: string
        attr_accessor transit_gateway_id: string
        attr_accessor vpc_peering_connection_id: string
        attr_accessor state: string
        attr_accessor carrier_gateway_id: string
        attr_accessor core_network_arn: resource_arn
        attr_accessor local_gateway_id: string
      end
      class AnalysisSecurityGroupRule
        attr_accessor cidr: string
        attr_accessor direction: string
        attr_accessor security_group_id: string
        attr_accessor port_range: PortRange
        attr_accessor prefix_list_id: string
        attr_accessor protocol: string
      end
      type analysis_status = ("running" | "succeeded" | "failed")
      type appliance_mode_support_value = ("enable" | "disable")
      type apply_security_groups_to_client_vpn_target_network_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, vpc_id: vpc_id, security_group_ids: client_vpn_security_group_id_set, dry_run: boolean? }
      class ApplySecurityGroupsToClientVpnTargetNetworkResult
        attr_accessor security_group_ids: client_vpn_security_group_id_set
      end
      type architecture_type = ("i386" | "x86_64" | "arm64" | "x86_64_mac" | "arm64_mac")
      type architecture_type_list = ::Array[architecture_type]
      type architecture_type_set = ::Array[architecture_type]
      type architecture_values = ("i386" | "x86_64" | "arm64" | "x86_64_mac" | "arm64_mac")
      type arn_list = ::Array[resource_arn]
      type assign_ipv_6_addresses_request = { ipv_6_address_count: integer?, ipv_6_addresses: ipv_6_address_list?, ipv_6_prefix_count: integer?, ipv_6_prefixes: ip_prefix_list?, network_interface_id: network_interface_id }
      class AssignIpv6AddressesResult
        attr_accessor assigned_ipv_6_addresses: ipv_6_address_list
        attr_accessor assigned_ipv_6_prefixes: ip_prefix_list
        attr_accessor network_interface_id: string
      end
      type assign_private_ip_addresses_request = { allow_reassignment: boolean?, network_interface_id: network_interface_id, private_ip_addresses: private_ip_address_string_list?, secondary_private_ip_address_count: integer?, ipv_4_prefixes: ip_prefix_list?, ipv_4_prefix_count: integer? }
      class AssignPrivateIpAddressesResult
        attr_accessor network_interface_id: string
        attr_accessor assigned_private_ip_addresses: assigned_private_ip_address_list
        attr_accessor assigned_ipv_4_prefixes: ipv_4_prefixes_list
      end
      type assign_private_nat_gateway_address_request = { nat_gateway_id: nat_gateway_id, private_ip_addresses: ip_list?, private_ip_address_count: private_ip_address_count?, dry_run: boolean? }
      class AssignPrivateNatGatewayAddressResult
        attr_accessor nat_gateway_id: nat_gateway_id
        attr_accessor nat_gateway_addresses: nat_gateway_address_list
      end
      class AssignedPrivateIpAddress
        attr_accessor private_ip_address: string
      end
      type assigned_private_ip_address_list = ::Array[AssignedPrivateIpAddress]
      type associate_address_request = { allocation_id: allocation_id?, instance_id: instance_id?, public_ip: eip_allocation_public_ip?, allow_reassociation: boolean?, dry_run: boolean?, network_interface_id: network_interface_id?, private_ip_address: string? }
      class AssociateAddressResult
        attr_accessor association_id: string
      end
      type associate_client_vpn_target_network_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, subnet_id: subnet_id, client_token: string?, dry_run: boolean? }
      class AssociateClientVpnTargetNetworkResult
        attr_accessor association_id: string
        attr_accessor status: AssociationStatus
      end
      type associate_dhcp_options_request = { dhcp_options_id: defaulting_dhcp_options_id, vpc_id: vpc_id, dry_run: boolean? }
      type associate_enclave_certificate_iam_role_request = { certificate_arn: certificate_id, role_arn: role_id, dry_run: boolean? }
      class AssociateEnclaveCertificateIamRoleResult
        attr_accessor certificate_s3_bucket_name: string
        attr_accessor certificate_s3_object_key: string
        attr_accessor encryption_kms_key_id: string
      end
      type associate_iam_instance_profile_request = { iam_instance_profile: iam_instance_profile_specification, instance_id: instance_id }
      class AssociateIamInstanceProfileResult
        attr_accessor iam_instance_profile_association: IamInstanceProfileAssociation
      end
      type associate_instance_event_window_request = { dry_run: boolean?, instance_event_window_id: instance_event_window_id, association_target: instance_event_window_association_request }
      class AssociateInstanceEventWindowResult
        attr_accessor instance_event_window: InstanceEventWindow
      end
      type associate_ipam_resource_discovery_request = { dry_run: boolean?, ipam_id: ipam_id, ipam_resource_discovery_id: ipam_resource_discovery_id, tag_specifications: tag_specification_list_input?, client_token: string? }
      class AssociateIpamResourceDiscoveryResult
        attr_accessor ipam_resource_discovery_association: IpamResourceDiscoveryAssociation
      end
      type associate_nat_gateway_address_request = { nat_gateway_id: nat_gateway_id, allocation_ids: allocation_id_list, private_ip_addresses: ip_list?, dry_run: boolean? }
      class AssociateNatGatewayAddressResult
        attr_accessor nat_gateway_id: nat_gateway_id
        attr_accessor nat_gateway_addresses: nat_gateway_address_list
      end
      type associate_route_table_request = { dry_run: boolean?, route_table_id: route_table_id, subnet_id: subnet_id?, gateway_id: route_gateway_id? }
      class AssociateRouteTableResult
        attr_accessor association_id: string
        attr_accessor association_state: RouteTableAssociationState
      end
      type associate_subnet_cidr_block_request = { ipv_6_cidr_block: string, subnet_id: subnet_id }
      class AssociateSubnetCidrBlockResult
        attr_accessor ipv_6_cidr_block_association: SubnetIpv6CidrBlockAssociation
        attr_accessor subnet_id: string
      end
      type associate_transit_gateway_multicast_domain_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id, transit_gateway_attachment_id: transit_gateway_attachment_id, subnet_ids: transit_gateway_subnet_id_list, dry_run: boolean? }
      class AssociateTransitGatewayMulticastDomainResult
        attr_accessor associations: TransitGatewayMulticastDomainAssociations
      end
      type associate_transit_gateway_policy_table_request = { transit_gateway_policy_table_id: transit_gateway_policy_table_id, transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class AssociateTransitGatewayPolicyTableResult
        attr_accessor association: TransitGatewayPolicyTableAssociation
      end
      type associate_transit_gateway_route_table_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class AssociateTransitGatewayRouteTableResult
        attr_accessor association: TransitGatewayAssociation
      end
      type associate_trunk_interface_request = { branch_interface_id: network_interface_id, trunk_interface_id: network_interface_id, vlan_id: integer?, gre_key: integer?, client_token: string?, dry_run: boolean? }
      class AssociateTrunkInterfaceResult
        attr_accessor interface_association: TrunkInterfaceAssociation
        attr_accessor client_token: string
      end
      type associate_vpc_cidr_block_request = { amazon_provided_ipv_6_cidr_block: boolean?, cidr_block: string?, vpc_id: vpc_id, ipv_6_cidr_block_network_border_group: string?, ipv_6_pool: ipv_6_pool_ec2_id?, ipv_6_cidr_block: string?, ipv_4_ipam_pool_id: ipam_pool_id?, ipv_4_netmask_length: netmask_length?, ipv_6_ipam_pool_id: ipam_pool_id?, ipv_6_netmask_length: netmask_length? }
      class AssociateVpcCidrBlockResult
        attr_accessor ipv_6_cidr_block_association: VpcIpv6CidrBlockAssociation
        attr_accessor cidr_block_association: VpcCidrBlockAssociation
        attr_accessor vpc_id: string
      end
      type associated_network_type = ("vpc")
      class AssociatedRole
        attr_accessor associated_role_arn: resource_arn
        attr_accessor certificate_s3_bucket_name: string
        attr_accessor certificate_s3_object_key: string
        attr_accessor encryption_kms_key_id: string
      end
      type associated_roles_list = ::Array[AssociatedRole]
      class AssociatedTargetNetwork
        attr_accessor network_id: string
        attr_accessor network_type: associated_network_type
      end
      type associated_target_network_set = ::Array[AssociatedTargetNetwork]
      type association_id_list = ::Array[iam_instance_profile_association_id]
      class AssociationStatus
        attr_accessor code: association_status_code
        attr_accessor message: string
      end
      type association_status_code = ("associating" | "associated" | "association-failed" | "disassociating" | "disassociated")
      type athena_integration = { integration_result_s3_destination_arn: string, partition_load_frequency: partition_load_frequency, partition_start_date: millisecond_date_time?, partition_end_date: millisecond_date_time? }
      type athena_integrations_set = ::Array[athena_integration]
      type attach_classic_link_vpc_request = { dry_run: boolean?, groups: group_id_string_list, instance_id: instance_id, vpc_id: vpc_id }
      class AttachClassicLinkVpcResult
        attr_accessor return: boolean
      end
      type attach_internet_gateway_request = { dry_run: boolean?, internet_gateway_id: internet_gateway_id, vpc_id: vpc_id }
      type attach_network_interface_request = { device_index: integer, dry_run: boolean?, instance_id: instance_id, network_interface_id: network_interface_id, network_card_index: integer?, ena_srd_specification: ena_srd_specification? }
      class AttachNetworkInterfaceResult
        attr_accessor attachment_id: string
        attr_accessor network_card_index: integer
      end
      type attach_verified_access_trust_provider_request = { verified_access_instance_id: verified_access_instance_id, verified_access_trust_provider_id: verified_access_trust_provider_id, client_token: string?, dry_run: boolean? }
      class AttachVerifiedAccessTrustProviderResult
        attr_accessor verified_access_trust_provider: VerifiedAccessTrustProvider
        attr_accessor verified_access_instance: VerifiedAccessInstance
      end
      type attach_volume_request = { device: string, instance_id: instance_id, volume_id: volume_id, dry_run: boolean? }
      type attach_vpn_gateway_request = { vpc_id: vpc_id, vpn_gateway_id: vpn_gateway_id, dry_run: boolean? }
      class AttachVpnGatewayResult
        attr_accessor vpc_attachment: VpcAttachment
      end
      class AttachmentEnaSrdSpecification
        attr_accessor ena_srd_enabled: boolean
        attr_accessor ena_srd_udp_specification: AttachmentEnaSrdUdpSpecification
      end
      class AttachmentEnaSrdUdpSpecification
        attr_accessor ena_srd_udp_enabled: boolean
      end
      type attachment_status = ("attaching" | "attached" | "detaching" | "detached")
      class AttributeBooleanValue
        attr_accessor value: boolean
      end
      type attribute_boolean_value = { value: boolean? }
      class AttributeValue
        attr_accessor value: string
      end
      type attribute_value = { value: string? }
      class AuthorizationRule
        attr_accessor client_vpn_endpoint_id: string
        attr_accessor description: string
        attr_accessor group_id: string
        attr_accessor access_all: boolean
        attr_accessor destination_cidr: string
        attr_accessor status: ClientVpnAuthorizationRuleStatus
      end
      type authorization_rule_set = ::Array[AuthorizationRule]
      type authorize_client_vpn_ingress_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, target_network_cidr: string, access_group_id: string?, authorize_all_groups: boolean?, description: string?, client_token: string?, dry_run: boolean? }
      class AuthorizeClientVpnIngressResult
        attr_accessor status: ClientVpnAuthorizationRuleStatus
      end
      type authorize_security_group_egress_request = { dry_run: boolean?, group_id: security_group_id, ip_permissions: ip_permission_list_input?, tag_specifications: tag_specification_list_input?, cidr_ip: string?, from_port: integer?, ip_protocol: string?, to_port: integer?, source_security_group_name: string?, source_security_group_owner_id: string? }
      class AuthorizeSecurityGroupEgressResult
        attr_accessor return: boolean
        attr_accessor security_group_rules: security_group_rule_list
      end
      type authorize_security_group_ingress_request = { cidr_ip: string?, from_port: integer?, group_id: security_group_id?, group_name: security_group_name?, ip_permissions: ip_permission_list_input?, ip_protocol: string?, source_security_group_name: string?, source_security_group_owner_id: string?, to_port: integer?, dry_run: boolean?, tag_specifications: tag_specification_list_input? }
      class AuthorizeSecurityGroupIngressResult
        attr_accessor return: boolean
        attr_accessor security_group_rules: security_group_rule_list
      end
      type auto_accept_shared_associations_value = ("enable" | "disable")
      type auto_accept_shared_attachments_value = ("enable" | "disable")
      type auto_placement = ("on" | "off")
      type auto_recovery_flag = bool
      class AvailabilityZone
        attr_accessor state: availability_zone_state
        attr_accessor opt_in_status: availability_zone_opt_in_status
        attr_accessor messages: availability_zone_message_list
        attr_accessor region_name: string
        attr_accessor zone_name: string
        attr_accessor zone_id: string
        attr_accessor group_name: string
        attr_accessor network_border_group: string
        attr_accessor zone_type: string
        attr_accessor parent_zone_name: string
        attr_accessor parent_zone_id: string
      end
      type availability_zone_list = ::Array[AvailabilityZone]
      class AvailabilityZoneMessage
        attr_accessor message: string
      end
      type availability_zone_message_list = ::Array[AvailabilityZoneMessage]
      type availability_zone_name = ::String
      type availability_zone_opt_in_status = ("opt-in-not-required" | "opted-in" | "not-opted-in")
      type availability_zone_state = ("available" | "information" | "impaired" | "unavailable")
      type availability_zone_string_list = ::Array[string]
      class AvailableCapacity
        attr_accessor available_instance_capacity: available_instance_capacity_list
        attr_accessor available_v_cpus: integer
      end
      type available_instance_capacity_list = ::Array[InstanceCapacity]
      type bare_metal = ("included" | "required" | "excluded")
      type bare_metal_flag = bool
      type baseline_bandwidth_in_mbps = ::Integer
      class BaselineEbsBandwidthMbps
        attr_accessor min: integer
        attr_accessor max: integer
      end
      type baseline_ebs_bandwidth_mbps = { min: integer?, max: integer? }
      type baseline_ebs_bandwidth_mbps_request = { min: integer?, max: integer? }
      type baseline_iops = ::Integer
      type baseline_throughput_in_m_bps = ::Float
      type batch_state = ("submitted" | "active" | "cancelled" | "failed" | "cancelled_running" | "cancelled_terminating" | "modifying")
      type bgp_status = ("up" | "down")
      type billing_product_list = ::Array[string]
      type blob = ::String
      type blob_attribute_value = { value: blob? }
      type block_device_mapping = { device_name: string?, virtual_name: string?, ebs: ebs_block_device?, no_device: string? }
      class BlockDeviceMapping
        attr_accessor device_name: string
        attr_accessor virtual_name: string
        attr_accessor ebs: EbsBlockDevice
        attr_accessor no_device: string
      end
      type block_device_mapping_list_output = ::Array[BlockDeviceMapping]
      type block_device_mapping_list_input = ::Array[block_device_mapping]
      type block_device_mapping_request_list_input = ::Array[block_device_mapping]
      type boolean = bool
      type boot_mode_type = ("legacy-bios" | "uefi")
      type boot_mode_type_list = ::Array[boot_mode_type]
      type boot_mode_values = ("legacy-bios" | "uefi" | "uefi-preferred")
      type boxed_double = ::Float
      type bundle_id = ::String
      type bundle_id_string_list = ::Array[bundle_id]
      type bundle_instance_request = { instance_id: instance_id, storage: storage, dry_run: boolean? }
      class BundleInstanceResult
        attr_accessor bundle_task: BundleTask
      end
      class BundleTask
        attr_accessor bundle_id: string
        attr_accessor bundle_task_error: BundleTaskError
        attr_accessor instance_id: string
        attr_accessor progress: string
        attr_accessor start_time: date_time
        attr_accessor state: bundle_task_state
        attr_accessor storage: Storage
        attr_accessor update_time: date_time
      end
      class BundleTaskError
        attr_accessor code: string
        attr_accessor message: string
      end
      type bundle_task_list_output = ::Array[BundleTask]
      type bundle_task_state = ("pending" | "waiting-for-shutdown" | "bundling" | "storing" | "cancelling" | "complete" | "failed")
      type burstable_performance = ("included" | "required" | "excluded")
      type burstable_performance_flag = bool
      class ByoipCidr
        attr_accessor cidr: string
        attr_accessor description: string
        attr_accessor status_message: string
        attr_accessor state: byoip_cidr_state
      end
      type byoip_cidr_set_output = ::Array[ByoipCidr]
      type byoip_cidr_state = ("advertised" | "deprovisioned" | "failed-deprovision" | "failed-provision" | "pending-deprovision" | "pending-provision" | "provisioned" | "provisioned-not-publicly-advertisable")
      type cancel_batch_error_code = ("fleetRequestIdDoesNotExist" | "fleetRequestIdMalformed" | "fleetRequestNotInCancellableState" | "unexpectedError")
      type cancel_bundle_task_request = { bundle_id: bundle_id, dry_run: boolean? }
      class CancelBundleTaskResult
        attr_accessor bundle_task: BundleTask
      end
      class CancelCapacityReservationFleetError
        attr_accessor code: cancel_capacity_reservation_fleet_error_code
        attr_accessor message: cancel_capacity_reservation_fleet_error_message
      end
      type cancel_capacity_reservation_fleet_error_code = ::String
      type cancel_capacity_reservation_fleet_error_message = ::String
      type cancel_capacity_reservation_fleets_request = { dry_run: boolean?, capacity_reservation_fleet_ids: capacity_reservation_fleet_id_set }
      class CancelCapacityReservationFleetsResult
        attr_accessor successful_fleet_cancellations: capacity_reservation_fleet_cancellation_state_set
        attr_accessor failed_fleet_cancellations: failed_capacity_reservation_fleet_cancellation_result_set
      end
      type cancel_capacity_reservation_request = { capacity_reservation_id: capacity_reservation_id, dry_run: boolean? }
      class CancelCapacityReservationResult
        attr_accessor return: boolean
      end
      type cancel_conversion_request = { conversion_task_id: conversion_task_id, dry_run: boolean?, reason_message: string? }
      type cancel_export_task_request = { export_task_id: export_vm_task_id }
      type cancel_image_launch_permission_request = { image_id: image_id, dry_run: boolean? }
      class CancelImageLaunchPermissionResult
        attr_accessor return: boolean
      end
      type cancel_import_task_request = { cancel_reason: string?, dry_run: boolean?, import_task_id: import_task_id? }
      class CancelImportTaskResult
        attr_accessor import_task_id: string
        attr_accessor previous_state: string
        attr_accessor state: string
      end
      type cancel_reserved_instances_listing_request = { reserved_instances_listing_id: reserved_instances_listing_id }
      class CancelReservedInstancesListingResult
        attr_accessor reserved_instances_listings: reserved_instances_listing_list
      end
      class CancelSpotFleetRequestsError
        attr_accessor code: cancel_batch_error_code
        attr_accessor message: string
      end
      class CancelSpotFleetRequestsErrorItem
        attr_accessor error: CancelSpotFleetRequestsError
        attr_accessor spot_fleet_request_id: string
      end
      type cancel_spot_fleet_requests_error_set = ::Array[CancelSpotFleetRequestsErrorItem]
      type cancel_spot_fleet_requests_request = { dry_run: boolean?, spot_fleet_request_ids: spot_fleet_request_id_list, terminate_instances: boolean }
      class CancelSpotFleetRequestsResponse
        attr_accessor successful_fleet_requests: cancel_spot_fleet_requests_success_set
        attr_accessor unsuccessful_fleet_requests: cancel_spot_fleet_requests_error_set
      end
      class CancelSpotFleetRequestsSuccessItem
        attr_accessor current_spot_fleet_request_state: batch_state
        attr_accessor previous_spot_fleet_request_state: batch_state
        attr_accessor spot_fleet_request_id: string
      end
      type cancel_spot_fleet_requests_success_set = ::Array[CancelSpotFleetRequestsSuccessItem]
      type cancel_spot_instance_request_state = ("active" | "open" | "closed" | "cancelled" | "completed")
      type cancel_spot_instance_requests_request = { dry_run: boolean?, spot_instance_request_ids: spot_instance_request_id_list }
      class CancelSpotInstanceRequestsResult
        attr_accessor cancelled_spot_instance_requests: cancelled_spot_instance_request_list
      end
      class CancelledSpotInstanceRequest
        attr_accessor spot_instance_request_id: string
        attr_accessor state: cancel_spot_instance_request_state
      end
      type cancelled_spot_instance_request_list = ::Array[CancelledSpotInstanceRequest]
      class CapacityAllocation
        attr_accessor allocation_type: allocation_type
        attr_accessor count: integer
      end
      type capacity_allocations = ::Array[CapacityAllocation]
      class CapacityReservation
        attr_accessor capacity_reservation_id: string
        attr_accessor owner_id: string
        attr_accessor capacity_reservation_arn: string
        attr_accessor availability_zone_id: string
        attr_accessor instance_type: string
        attr_accessor instance_platform: capacity_reservation_instance_platform
        attr_accessor availability_zone: string
        attr_accessor tenancy: capacity_reservation_tenancy
        attr_accessor total_instance_count: integer
        attr_accessor available_instance_count: integer
        attr_accessor ebs_optimized: boolean
        attr_accessor ephemeral_storage: boolean
        attr_accessor state: capacity_reservation_state
        attr_accessor start_date: millisecond_date_time
        attr_accessor end_date: date_time
        attr_accessor end_date_type: end_date_type
        attr_accessor instance_match_criteria: instance_match_criteria
        attr_accessor create_date: date_time
        attr_accessor tags: tag_list_output
        attr_accessor outpost_arn: outpost_arn
        attr_accessor capacity_reservation_fleet_id: string
        attr_accessor placement_group_arn: placement_group_arn
        attr_accessor capacity_allocations: capacity_allocations
      end
      class CapacityReservationFleet
        attr_accessor capacity_reservation_fleet_id: capacity_reservation_fleet_id
        attr_accessor capacity_reservation_fleet_arn: string
        attr_accessor state: capacity_reservation_fleet_state
        attr_accessor total_target_capacity: integer
        attr_accessor total_fulfilled_capacity: double
        attr_accessor tenancy: fleet_capacity_reservation_tenancy
        attr_accessor end_date: millisecond_date_time
        attr_accessor create_time: millisecond_date_time
        attr_accessor instance_match_criteria: fleet_instance_match_criteria
        attr_accessor allocation_strategy: string
        attr_accessor instance_type_specifications: fleet_capacity_reservation_set
        attr_accessor tags: tag_list_output
      end
      class CapacityReservationFleetCancellationState
        attr_accessor current_fleet_state: capacity_reservation_fleet_state
        attr_accessor previous_fleet_state: capacity_reservation_fleet_state
        attr_accessor capacity_reservation_fleet_id: capacity_reservation_fleet_id
      end
      type capacity_reservation_fleet_cancellation_state_set = ::Array[CapacityReservationFleetCancellationState]
      type capacity_reservation_fleet_id = ::String
      type capacity_reservation_fleet_id_set = ::Array[capacity_reservation_fleet_id]
      type capacity_reservation_fleet_set = ::Array[CapacityReservationFleet]
      type capacity_reservation_fleet_state = ("submitted" | "modifying" | "active" | "partially_fulfilled" | "expiring" | "expired" | "cancelling" | "cancelled" | "failed")
      class CapacityReservationGroup
        attr_accessor group_arn: string
        attr_accessor owner_id: string
      end
      type capacity_reservation_group_set = ::Array[CapacityReservationGroup]
      type capacity_reservation_id = ::String
      type capacity_reservation_id_set = ::Array[capacity_reservation_id]
      type capacity_reservation_instance_platform = ("Linux/UNIX" | "Red Hat Enterprise Linux" | "SUSE Linux" | "Windows" | "Windows with SQL Server" | "Windows with SQL Server Enterprise" | "Windows with SQL Server Standard" | "Windows with SQL Server Web" | "Linux with SQL Server Standard" | "Linux with SQL Server Web" | "Linux with SQL Server Enterprise" | "RHEL with SQL Server Standard" | "RHEL with SQL Server Enterprise" | "RHEL with SQL Server Web" | "RHEL with HA" | "RHEL with HA and SQL Server Standard" | "RHEL with HA and SQL Server Enterprise")
      class CapacityReservationOptions
        attr_accessor usage_strategy: fleet_capacity_reservation_usage_strategy
      end
      type capacity_reservation_options_request = { usage_strategy: fleet_capacity_reservation_usage_strategy? }
      type capacity_reservation_preference = ("open" | "none")
      type capacity_reservation_set_output = ::Array[CapacityReservation]
      type capacity_reservation_specification = { capacity_reservation_preference: capacity_reservation_preference?, capacity_reservation_target: capacity_reservation_target? }
      class CapacityReservationSpecificationResponse
        attr_accessor capacity_reservation_preference: capacity_reservation_preference
        attr_accessor capacity_reservation_target: CapacityReservationTargetResponse
      end
      type capacity_reservation_state = ("active" | "expired" | "cancelled" | "pending" | "failed")
      type capacity_reservation_target = { capacity_reservation_id: capacity_reservation_id?, capacity_reservation_resource_group_arn: string? }
      class CapacityReservationTargetResponse
        attr_accessor capacity_reservation_id: string
        attr_accessor capacity_reservation_resource_group_arn: string
      end
      type capacity_reservation_tenancy = ("default" | "dedicated")
      class CarrierGateway
        attr_accessor carrier_gateway_id: carrier_gateway_id
        attr_accessor vpc_id: vpc_id
        attr_accessor state: carrier_gateway_state
        attr_accessor owner_id: string
        attr_accessor tags: tag_list_output
      end
      type carrier_gateway_id = ::String
      type carrier_gateway_id_set = ::Array[carrier_gateway_id]
      type carrier_gateway_max_results = ::Integer
      type carrier_gateway_set_output = ::Array[CarrierGateway]
      type carrier_gateway_state = ("pending" | "available" | "deleting" | "deleted")
      type certificate_arn = ::String
      class CertificateAuthentication
        attr_accessor client_root_certificate_chain: string
      end
      type certificate_authentication_request = { client_root_certificate_chain_arn: string? }
      type certificate_id = ::String
      type cidr_authorization_context = { message: string, signature: string }
      class CidrBlock
        attr_accessor cidr_block: string
      end
      type cidr_block_set = ::Array[CidrBlock]
      class ClassicLinkDnsSupport
        attr_accessor classic_link_dns_supported: boolean
        attr_accessor vpc_id: string
      end
      type classic_link_dns_support_list = ::Array[ClassicLinkDnsSupport]
      class ClassicLinkInstance
        attr_accessor groups: group_identifier_list_output
        attr_accessor instance_id: string
        attr_accessor tags: tag_list_output
        attr_accessor vpc_id: string
      end
      type classic_link_instance_list = ::Array[ClassicLinkInstance]
      class ClassicLoadBalancer
        attr_accessor name: string
      end
      type classic_load_balancer = { name: string? }
      type classic_load_balancers_output = ::Array[ClassicLoadBalancer]
      type classic_load_balancers_input = ::Array[classic_load_balancer]
      class ClassicLoadBalancersConfig
        attr_accessor classic_load_balancers: classic_load_balancers_output
      end
      type classic_load_balancers_config = { classic_load_balancers: classic_load_balancers_input? }
      class ClientCertificateRevocationListStatus
        attr_accessor code: client_certificate_revocation_list_status_code
        attr_accessor message: string
      end
      type client_certificate_revocation_list_status_code = ("pending" | "active")
      type client_connect_options = { enabled: boolean?, lambda_function_arn: string? }
      class ClientConnectResponseOptions
        attr_accessor enabled: boolean
        attr_accessor lambda_function_arn: string
        attr_accessor status: ClientVpnEndpointAttributeStatus
      end
      type client_data = { comment: string?, upload_end: date_time?, upload_size: double?, upload_start: date_time? }
      type client_login_banner_options = { enabled: boolean?, banner_text: string? }
      class ClientLoginBannerResponseOptions
        attr_accessor enabled: boolean
        attr_accessor banner_text: string
      end
      type client_secret_type = ::String
      type client_vpn_association_id = ::String
      class ClientVpnAuthentication
        attr_accessor type_: client_vpn_authentication_type
        attr_accessor active_directory: DirectoryServiceAuthentication
        attr_accessor mutual_authentication: CertificateAuthentication
        attr_accessor federated_authentication: FederatedAuthentication
      end
      type client_vpn_authentication_list = ::Array[ClientVpnAuthentication]
      type client_vpn_authentication_request = { type: client_vpn_authentication_type?, active_directory: directory_service_authentication_request?, mutual_authentication: certificate_authentication_request?, federated_authentication: federated_authentication_request? }
      type client_vpn_authentication_request_list = ::Array[client_vpn_authentication_request]
      type client_vpn_authentication_type = ("certificate-authentication" | "directory-service-authentication" | "federated-authentication")
      class ClientVpnAuthorizationRuleStatus
        attr_accessor code: client_vpn_authorization_rule_status_code
        attr_accessor message: string
      end
      type client_vpn_authorization_rule_status_code = ("authorizing" | "active" | "failed" | "revoking")
      class ClientVpnConnection
        attr_accessor client_vpn_endpoint_id: string
        attr_accessor timestamp: string
        attr_accessor connection_id: string
        attr_accessor username: string
        attr_accessor connection_established_time: string
        attr_accessor ingress_bytes: string
        attr_accessor egress_bytes: string
        attr_accessor ingress_packets: string
        attr_accessor egress_packets: string
        attr_accessor client_ip: string
        attr_accessor common_name: string
        attr_accessor status: ClientVpnConnectionStatus
        attr_accessor connection_end_time: string
        attr_accessor posture_compliance_statuses: value_string_list
      end
      type client_vpn_connection_set = ::Array[ClientVpnConnection]
      class ClientVpnConnectionStatus
        attr_accessor code: client_vpn_connection_status_code
        attr_accessor message: string
      end
      type client_vpn_connection_status_code = ("active" | "failed-to-terminate" | "terminating" | "terminated")
      class ClientVpnEndpoint
        attr_accessor client_vpn_endpoint_id: string
        attr_accessor description: string
        attr_accessor status: ClientVpnEndpointStatus
        attr_accessor creation_time: string
        attr_accessor deletion_time: string
        attr_accessor dns_name: string
        attr_accessor client_cidr_block: string
        attr_accessor dns_servers: value_string_list
        attr_accessor split_tunnel: boolean
        attr_accessor vpn_protocol: vpn_protocol
        attr_accessor transport_protocol: transport_protocol
        attr_accessor vpn_port: integer
        attr_accessor associated_target_networks: associated_target_network_set
        attr_accessor server_certificate_arn: string
        attr_accessor authentication_options: client_vpn_authentication_list
        attr_accessor connection_log_options: ConnectionLogResponseOptions
        attr_accessor tags: tag_list_output
        attr_accessor security_group_ids: client_vpn_security_group_id_set
        attr_accessor vpc_id: vpc_id
        attr_accessor self_service_portal_url: string
        attr_accessor client_connect_options: ClientConnectResponseOptions
        attr_accessor session_timeout_hours: integer
        attr_accessor client_login_banner_options: ClientLoginBannerResponseOptions
      end
      class ClientVpnEndpointAttributeStatus
        attr_accessor code: client_vpn_endpoint_attribute_status_code
        attr_accessor message: string
      end
      type client_vpn_endpoint_attribute_status_code = ("applying" | "applied")
      type client_vpn_endpoint_id = ::String
      type client_vpn_endpoint_id_list = ::Array[client_vpn_endpoint_id]
      class ClientVpnEndpointStatus
        attr_accessor code: client_vpn_endpoint_status_code
        attr_accessor message: string
      end
      type client_vpn_endpoint_status_code = ("pending-associate" | "available" | "deleting" | "deleted")
      class ClientVpnRoute
        attr_accessor client_vpn_endpoint_id: string
        attr_accessor destination_cidr: string
        attr_accessor target_subnet: string
        attr_accessor type_: string
        attr_accessor origin: string
        attr_accessor status: ClientVpnRouteStatus
        attr_accessor description: string
      end
      type client_vpn_route_set = ::Array[ClientVpnRoute]
      class ClientVpnRouteStatus
        attr_accessor code: client_vpn_route_status_code
        attr_accessor message: string
      end
      type client_vpn_route_status_code = ("creating" | "active" | "failed" | "deleting")
      type client_vpn_security_group_id_set = ::Array[security_group_id]
      type cloud_watch_log_group_arn = ::String
      class CloudWatchLogOptions
        attr_accessor log_enabled: boolean
        attr_accessor log_group_arn: string
        attr_accessor log_output_format: string
      end
      type cloud_watch_log_options_specification = { log_enabled: boolean?, log_group_arn: cloud_watch_log_group_arn?, log_output_format: string? }
      class CoipAddressUsage
        attr_accessor allocation_id: string
        attr_accessor aws_account_id: string
        attr_accessor aws_service: string
        attr_accessor co_ip: string
      end
      type coip_address_usage_set = ::Array[CoipAddressUsage]
      class CoipCidr
        attr_accessor cidr: string
        attr_accessor coip_pool_id: ipv_4_pool_coip_id
        attr_accessor local_gateway_route_table_id: string
      end
      class CoipPool
        attr_accessor pool_id: ipv_4_pool_coip_id
        attr_accessor pool_cidrs: value_string_list
        attr_accessor local_gateway_route_table_id: local_gateway_routetable_id
        attr_accessor tags: tag_list_output
        attr_accessor pool_arn: resource_arn
      end
      type coip_pool_id = ::String
      type coip_pool_id_set = ::Array[ipv_4_pool_coip_id]
      type coip_pool_max_results = ::Integer
      type coip_pool_set_output = ::Array[CoipPool]
      type component_account = ::String
      type component_region = ::String
      type confirm_product_instance_request = { instance_id: instance_id, product_code: string, dry_run: boolean? }
      class ConfirmProductInstanceResult
        attr_accessor owner_id: string
        attr_accessor return: boolean
      end
      type connection_log_options = { enabled: boolean?, cloudwatch_log_group: string?, cloudwatch_log_stream: string? }
      class ConnectionLogResponseOptions
        attr_accessor enabled: boolean
        attr_accessor cloudwatch_log_group: string
        attr_accessor cloudwatch_log_stream: string
      end
      class ConnectionNotification
        attr_accessor connection_notification_id: string
        attr_accessor service_id: string
        attr_accessor vpc_endpoint_id: string
        attr_accessor connection_notification_type: connection_notification_type
        attr_accessor connection_notification_arn: string
        attr_accessor connection_events: value_string_list
        attr_accessor connection_notification_state: connection_notification_state
      end
      type connection_notification_id = ::String
      type connection_notification_ids_list = ::Array[connection_notification_id]
      type connection_notification_set_output = ::Array[ConnectionNotification]
      type connection_notification_state = ("Enabled" | "Disabled")
      type connection_notification_type = ("Topic")
      type connectivity_type = ("private" | "public")
      type container_format = ("ova")
      type conversion_id_string_list = ::Array[conversion_task_id]
      class ConversionTask
        attr_accessor conversion_task_id: string
        attr_accessor expiration_time: string
        attr_accessor import_instance: ImportInstanceTaskDetails
        attr_accessor import_volume: ImportVolumeTaskDetails
        attr_accessor state: conversion_task_state
        attr_accessor status_message: string
        attr_accessor tags: tag_list_output
      end
      type conversion_task_id = ::String
      type conversion_task_state = ("active" | "cancelling" | "cancelled" | "completed")
      type copy_fpga_image_request = { dry_run: boolean?, source_fpga_image_id: string, description: string?, name: string?, source_region: string, client_token: string? }
      class CopyFpgaImageResult
        attr_accessor fpga_image_id: string
      end
      type copy_image_request = { client_token: string?, description: string?, encrypted: boolean?, kms_key_id: kms_key_id?, name: string, source_image_id: string, source_region: string, destination_outpost_arn: string?, dry_run: boolean?, copy_image_tags: boolean? }
      class CopyImageResult
        attr_accessor image_id: string
      end
      type copy_snapshot_request = { description: string?, destination_outpost_arn: string?, destination_region: string?, encrypted: boolean?, kms_key_id: kms_key_id?, presigned_url: copy_snapshot_request_psu?, source_region: string, source_snapshot_id: string, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      type copy_snapshot_request_psu = ::String
      class CopySnapshotResult
        attr_accessor snapshot_id: string
        attr_accessor tags: tag_list_output
      end
      type copy_tags_from_source = ("volume")
      type core_count = ::Integer
      type core_count_list = ::Array[core_count]
      type core_network_arn = ::String
      type cpu_manufacturer = ("intel" | "amd" | "amazon-web-services")
      type cpu_manufacturer_set = ::Array[cpu_manufacturer]
      class CpuOptions
        attr_accessor core_count: integer
        attr_accessor threads_per_core: integer
        attr_accessor amd_sev_snp: amd_sev_snp_specification
      end
      type cpu_options_request = { core_count: integer?, threads_per_core: integer?, amd_sev_snp: amd_sev_snp_specification? }
      type create_capacity_reservation_fleet_request = { allocation_strategy: string?, client_token: string?, instance_type_specifications: reservation_fleet_instance_specification_list, tenancy: fleet_capacity_reservation_tenancy?, total_target_capacity: integer, end_date: millisecond_date_time?, instance_match_criteria: fleet_instance_match_criteria?, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateCapacityReservationFleetResult
        attr_accessor capacity_reservation_fleet_id: capacity_reservation_fleet_id
        attr_accessor state: capacity_reservation_fleet_state
        attr_accessor total_target_capacity: integer
        attr_accessor total_fulfilled_capacity: double
        attr_accessor instance_match_criteria: fleet_instance_match_criteria
        attr_accessor allocation_strategy: string
        attr_accessor create_time: millisecond_date_time
        attr_accessor end_date: millisecond_date_time
        attr_accessor tenancy: fleet_capacity_reservation_tenancy
        attr_accessor fleet_capacity_reservations: fleet_capacity_reservation_set
        attr_accessor tags: tag_list_output
      end
      type create_capacity_reservation_request = { client_token: string?, instance_type: string, instance_platform: capacity_reservation_instance_platform, availability_zone: string?, availability_zone_id: string?, tenancy: capacity_reservation_tenancy?, instance_count: integer, ebs_optimized: boolean?, ephemeral_storage: boolean?, end_date: date_time?, end_date_type: end_date_type?, instance_match_criteria: instance_match_criteria?, tag_specifications: tag_specification_list_input?, dry_run: boolean?, outpost_arn: outpost_arn?, placement_group_arn: placement_group_arn? }
      class CreateCapacityReservationResult
        attr_accessor capacity_reservation: CapacityReservation
      end
      type create_carrier_gateway_request = { vpc_id: vpc_id, tag_specifications: tag_specification_list_input?, dry_run: boolean?, client_token: string? }
      class CreateCarrierGatewayResult
        attr_accessor carrier_gateway: CarrierGateway
      end
      type create_client_vpn_endpoint_request = { client_cidr_block: string, server_certificate_arn: string, authentication_options: client_vpn_authentication_request_list, connection_log_options: connection_log_options, dns_servers: value_string_list?, transport_protocol: transport_protocol?, vpn_port: integer?, description: string?, split_tunnel: boolean?, dry_run: boolean?, client_token: string?, tag_specifications: tag_specification_list_input?, security_group_ids: client_vpn_security_group_id_set?, vpc_id: vpc_id?, self_service_portal: self_service_portal?, client_connect_options: client_connect_options?, session_timeout_hours: integer?, client_login_banner_options: client_login_banner_options? }
      class CreateClientVpnEndpointResult
        attr_accessor client_vpn_endpoint_id: string
        attr_accessor status: ClientVpnEndpointStatus
        attr_accessor dns_name: string
      end
      type create_client_vpn_route_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, destination_cidr_block: string, target_vpc_subnet_id: subnet_id, description: string?, client_token: string?, dry_run: boolean? }
      class CreateClientVpnRouteResult
        attr_accessor status: ClientVpnRouteStatus
      end
      type create_coip_cidr_request = { cidr: string, coip_pool_id: ipv_4_pool_coip_id, dry_run: boolean? }
      class CreateCoipCidrResult
        attr_accessor coip_cidr: CoipCidr
      end
      type create_coip_pool_request = { local_gateway_route_table_id: local_gateway_routetable_id, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateCoipPoolResult
        attr_accessor coip_pool: CoipPool
      end
      type create_customer_gateway_request = { bgp_asn: integer?, public_ip: string?, certificate_arn: string?, type: gateway_type, tag_specifications: tag_specification_list_input?, device_name: string?, ip_address: string?, dry_run: boolean? }
      class CreateCustomerGatewayResult
        attr_accessor customer_gateway: CustomerGateway
      end
      type create_default_subnet_request = { availability_zone: string, dry_run: boolean?, ipv_6_native: boolean? }
      class CreateDefaultSubnetResult
        attr_accessor subnet: Subnet
      end
      type create_default_vpc_request = { dry_run: boolean? }
      class CreateDefaultVpcResult
        attr_accessor vpc: Vpc
      end
      type create_dhcp_options_request = { dhcp_configurations: new_dhcp_configuration_list, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateDhcpOptionsResult
        attr_accessor dhcp_options: DhcpOptions
      end
      type create_egress_only_internet_gateway_request = { client_token: string?, dry_run: boolean?, vpc_id: vpc_id, tag_specifications: tag_specification_list_input? }
      class CreateEgressOnlyInternetGatewayResult
        attr_accessor client_token: string
        attr_accessor egress_only_internet_gateway: EgressOnlyInternetGateway
      end
      class CreateFleetError
        attr_accessor launch_template_and_overrides: LaunchTemplateAndOverridesResponse
        attr_accessor lifecycle: instance_lifecycle
        attr_accessor error_code: string
        attr_accessor error_message: string
      end
      type create_fleet_errors_set = ::Array[CreateFleetError]
      class CreateFleetInstance
        attr_accessor launch_template_and_overrides: LaunchTemplateAndOverridesResponse
        attr_accessor lifecycle: instance_lifecycle
        attr_accessor instance_ids: instance_ids_set
        attr_accessor instance_type: instance_type
        attr_accessor platform: platform_values
      end
      type create_fleet_instances_set = ::Array[CreateFleetInstance]
      type create_fleet_request = { dry_run: boolean?, client_token: string?, spot_options: spot_options_request?, on_demand_options: on_demand_options_request?, excess_capacity_termination_policy: fleet_excess_capacity_termination_policy?, launch_template_configs: fleet_launch_template_config_list_request, target_capacity_specification: target_capacity_specification_request, terminate_instances_with_expiration: boolean?, type: fleet_type?, valid_from: date_time?, valid_until: date_time?, replace_unhealthy_instances: boolean?, tag_specifications: tag_specification_list_input?, context: string? }
      class CreateFleetResult
        attr_accessor fleet_id: fleet_id
        attr_accessor errors: create_fleet_errors_set
        attr_accessor instances: create_fleet_instances_set
      end
      type create_flow_logs_request = { dry_run: boolean?, client_token: string?, deliver_logs_permission_arn: string?, deliver_cross_account_role: string?, log_group_name: string?, resource_ids: flow_log_resource_ids, resource_type: flow_logs_resource_type, traffic_type: traffic_type?, log_destination_type: log_destination_type?, log_destination: string?, log_format: string?, tag_specifications: tag_specification_list_input?, max_aggregation_interval: integer?, destination_options: destination_options_request? }
      class CreateFlowLogsResult
        attr_accessor client_token: string
        attr_accessor flow_log_ids: value_string_list
        attr_accessor unsuccessful: unsuccessful_item_set
      end
      type create_fpga_image_request = { dry_run: boolean?, input_storage_location: storage_location, logs_storage_location: storage_location?, description: string?, name: string?, client_token: string?, tag_specifications: tag_specification_list_input? }
      class CreateFpgaImageResult
        attr_accessor fpga_image_id: string
        attr_accessor fpga_image_global_id: string
      end
      type create_image_request = { block_device_mappings: block_device_mapping_request_list_input?, description: string?, dry_run: boolean?, instance_id: instance_id, name: string, no_reboot: boolean?, tag_specifications: tag_specification_list_input? }
      class CreateImageResult
        attr_accessor image_id: string
      end
      type create_instance_event_window_request = { dry_run: boolean?, name: string?, time_ranges: instance_event_window_time_range_request_set?, cron_expression: instance_event_window_cron_expression?, tag_specifications: tag_specification_list_input? }
      class CreateInstanceEventWindowResult
        attr_accessor instance_event_window: InstanceEventWindow
      end
      type create_instance_export_task_request = { description: string?, export_to_s3_task: export_to_s3_task_specification, instance_id: instance_id, target_environment: export_environment, tag_specifications: tag_specification_list_input? }
      class CreateInstanceExportTaskResult
        attr_accessor export_task: ExportTask
      end
      type create_internet_gateway_request = { tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateInternetGatewayResult
        attr_accessor internet_gateway: InternetGateway
      end
      type create_ipam_pool_request = { dry_run: boolean?, ipam_scope_id: ipam_scope_id, locale: string?, source_ipam_pool_id: ipam_pool_id?, description: string?, address_family: address_family, auto_import: boolean?, publicly_advertisable: boolean?, allocation_min_netmask_length: ipam_netmask_length?, allocation_max_netmask_length: ipam_netmask_length?, allocation_default_netmask_length: ipam_netmask_length?, allocation_resource_tags: request_ipam_resource_tag_list_input?, tag_specifications: tag_specification_list_input?, client_token: string?, aws_service: ipam_pool_aws_service?, public_ip_source: ipam_pool_public_ip_source? }
      class CreateIpamPoolResult
        attr_accessor ipam_pool: IpamPool
      end
      type create_ipam_request = { dry_run: boolean?, description: string?, operating_regions: add_ipam_operating_region_set?, tag_specifications: tag_specification_list_input?, client_token: string? }
      type create_ipam_resource_discovery_request = { dry_run: boolean?, description: string?, operating_regions: add_ipam_operating_region_set?, tag_specifications: tag_specification_list_input?, client_token: string? }
      class CreateIpamResourceDiscoveryResult
        attr_accessor ipam_resource_discovery: IpamResourceDiscovery
      end
      class CreateIpamResult
        attr_accessor ipam: Ipam
      end
      type create_ipam_scope_request = { dry_run: boolean?, ipam_id: ipam_id, description: string?, tag_specifications: tag_specification_list_input?, client_token: string? }
      class CreateIpamScopeResult
        attr_accessor ipam_scope: IpamScope
      end
      type create_key_pair_request = { key_name: string, dry_run: boolean?, key_type: key_type?, tag_specifications: tag_specification_list_input?, key_format: key_format? }
      type create_launch_template_request = { dry_run: boolean?, client_token: string?, launch_template_name: launch_template_name, version_description: version_description?, launch_template_data: request_launch_template_data, tag_specifications: tag_specification_list_input? }
      class CreateLaunchTemplateResult
        attr_accessor launch_template: LaunchTemplate
        attr_accessor warning: ValidationWarning
      end
      type create_launch_template_version_request = { dry_run: boolean?, client_token: string?, launch_template_id: launch_template_id?, launch_template_name: launch_template_name?, source_version: string?, version_description: version_description?, launch_template_data: request_launch_template_data, resolve_alias: boolean? }
      class CreateLaunchTemplateVersionResult
        attr_accessor launch_template_version: LaunchTemplateVersion
        attr_accessor warning: ValidationWarning
      end
      type create_local_gateway_route_request = { destination_cidr_block: string?, local_gateway_route_table_id: local_gateway_routetable_id, local_gateway_virtual_interface_group_id: local_gateway_virtual_interface_group_id?, dry_run: boolean?, network_interface_id: network_interface_id?, destination_prefix_list_id: prefix_list_resource_id? }
      class CreateLocalGatewayRouteResult
        attr_accessor route: LocalGatewayRoute
      end
      type create_local_gateway_route_table_request = { local_gateway_id: local_gateway_id, mode: local_gateway_route_table_mode?, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateLocalGatewayRouteTableResult
        attr_accessor local_gateway_route_table: LocalGatewayRouteTable
      end
      type create_local_gateway_route_table_virtual_interface_group_association_request = { local_gateway_route_table_id: local_gateway_routetable_id, local_gateway_virtual_interface_group_id: local_gateway_virtual_interface_group_id, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult
        attr_accessor local_gateway_route_table_virtual_interface_group_association: LocalGatewayRouteTableVirtualInterfaceGroupAssociation
      end
      type create_local_gateway_route_table_vpc_association_request = { local_gateway_route_table_id: local_gateway_routetable_id, vpc_id: vpc_id, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateLocalGatewayRouteTableVpcAssociationResult
        attr_accessor local_gateway_route_table_vpc_association: LocalGatewayRouteTableVpcAssociation
      end
      type create_managed_prefix_list_request = { dry_run: boolean?, prefix_list_name: string, entries: add_prefix_list_entries?, max_entries: integer, tag_specifications: tag_specification_list_input?, address_family: string, client_token: string? }
      class CreateManagedPrefixListResult
        attr_accessor prefix_list: ManagedPrefixList
      end
      type create_nat_gateway_request = { allocation_id: allocation_id?, client_token: string?, dry_run: boolean?, subnet_id: subnet_id, tag_specifications: tag_specification_list_input?, connectivity_type: connectivity_type?, private_ip_address: string?, secondary_allocation_ids: allocation_id_list?, secondary_private_ip_addresses: ip_list?, secondary_private_ip_address_count: private_ip_address_count? }
      class CreateNatGatewayResult
        attr_accessor client_token: string
        attr_accessor nat_gateway: NatGateway
      end
      type create_network_acl_entry_request = { cidr_block: string?, dry_run: boolean?, egress: boolean, icmp_type_code: icmp_type_code?, ipv_6_cidr_block: string?, network_acl_id: network_acl_id, port_range: port_range?, protocol: string, rule_action: rule_action, rule_number: integer }
      type create_network_acl_request = { dry_run: boolean?, vpc_id: vpc_id, tag_specifications: tag_specification_list_input? }
      class CreateNetworkAclResult
        attr_accessor network_acl: NetworkAcl
      end
      type create_network_insights_access_scope_request = { match_paths: access_scope_path_list_request?, exclude_paths: access_scope_path_list_request?, client_token: string, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateNetworkInsightsAccessScopeResult
        attr_accessor network_insights_access_scope: NetworkInsightsAccessScope
        attr_accessor network_insights_access_scope_content: NetworkInsightsAccessScopeContent
      end
      type create_network_insights_path_request = { source_ip: ip_address?, destination_ip: ip_address?, source: network_insights_resource_id, destination: network_insights_resource_id?, protocol: protocol, destination_port: port?, tag_specifications: tag_specification_list_input?, dry_run: boolean?, client_token: string, filter_at_source: path_request_filter?, filter_at_destination: path_request_filter? }
      class CreateNetworkInsightsPathResult
        attr_accessor network_insights_path: NetworkInsightsPath
      end
      type create_network_interface_permission_request = { network_interface_id: network_interface_id, aws_account_id: string?, aws_service: string?, permission: interface_permission_type, dry_run: boolean? }
      class CreateNetworkInterfacePermissionResult
        attr_accessor interface_permission: NetworkInterfacePermission
      end
      type create_network_interface_request = { description: string?, dry_run: boolean?, groups: security_group_id_string_list?, ipv_6_address_count: integer?, ipv_6_addresses: instance_ipv_6_address_list_input?, private_ip_address: string?, private_ip_addresses: private_ip_address_specification_list_input?, secondary_private_ip_address_count: integer?, ipv_4_prefixes: ipv_4_prefix_list_input?, ipv_4_prefix_count: integer?, ipv_6_prefixes: ipv_6_prefix_list_input?, ipv_6_prefix_count: integer?, interface_type: network_interface_creation_type?, subnet_id: subnet_id, tag_specifications: tag_specification_list_input?, client_token: string? }
      class CreateNetworkInterfaceResult
        attr_accessor network_interface: NetworkInterface
        attr_accessor client_token: string
      end
      type create_placement_group_request = { dry_run: boolean?, group_name: string?, strategy: placement_strategy?, partition_count: integer?, tag_specifications: tag_specification_list_input?, spread_level: spread_level? }
      class CreatePlacementGroupResult
        attr_accessor placement_group: PlacementGroup
      end
      type create_public_ipv_4_pool_request = { dry_run: boolean?, tag_specifications: tag_specification_list_input? }
      class CreatePublicIpv4PoolResult
        attr_accessor pool_id: ipv_4_pool_ec2_id
      end
      type create_replace_root_volume_task_request = { instance_id: instance_id, snapshot_id: snapshot_id?, client_token: string?, dry_run: boolean?, tag_specifications: tag_specification_list_input?, image_id: image_id?, delete_replaced_root_volume: boolean? }
      class CreateReplaceRootVolumeTaskResult
        attr_accessor replace_root_volume_task: ReplaceRootVolumeTask
      end
      type create_reserved_instances_listing_request = { client_token: string, instance_count: integer, price_schedules: price_schedule_specification_list, reserved_instances_id: reservation_id }
      class CreateReservedInstancesListingResult
        attr_accessor reserved_instances_listings: reserved_instances_listing_list
      end
      type create_restore_image_task_request = { bucket: string, object_key: string, name: string?, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateRestoreImageTaskResult
        attr_accessor image_id: string
      end
      type create_route_request = { destination_cidr_block: string?, destination_ipv_6_cidr_block: string?, destination_prefix_list_id: prefix_list_resource_id?, dry_run: boolean?, vpc_endpoint_id: vpc_endpoint_id?, egress_only_internet_gateway_id: egress_only_internet_gateway_id?, gateway_id: route_gateway_id?, instance_id: instance_id?, nat_gateway_id: nat_gateway_id?, transit_gateway_id: transit_gateway_id?, local_gateway_id: local_gateway_id?, carrier_gateway_id: carrier_gateway_id?, network_interface_id: network_interface_id?, route_table_id: route_table_id, vpc_peering_connection_id: vpc_peering_connection_id?, core_network_arn: core_network_arn? }
      class CreateRouteResult
        attr_accessor return: boolean
      end
      type create_route_table_request = { dry_run: boolean?, vpc_id: vpc_id, tag_specifications: tag_specification_list_input? }
      class CreateRouteTableResult
        attr_accessor route_table: RouteTable
      end
      type create_security_group_request = { description: string, group_name: string, vpc_id: vpc_id?, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateSecurityGroupResult
        attr_accessor group_id: string
        attr_accessor tags: tag_list_output
      end
      type create_snapshot_request = { description: string?, outpost_arn: string?, volume_id: volume_id, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      type create_snapshots_request = { description: string?, instance_specification: instance_specification, outpost_arn: string?, tag_specifications: tag_specification_list_input?, dry_run: boolean?, copy_tags_from_source: copy_tags_from_source? }
      class CreateSnapshotsResult
        attr_accessor snapshots: snapshot_set
      end
      type create_spot_datafeed_subscription_request = { bucket: string, dry_run: boolean?, prefix: string? }
      class CreateSpotDatafeedSubscriptionResult
        attr_accessor spot_datafeed_subscription: SpotDatafeedSubscription
      end
      type create_store_image_task_request = { image_id: image_id, bucket: string, s3_object_tags: s3_object_tag_list?, dry_run: boolean? }
      class CreateStoreImageTaskResult
        attr_accessor object_key: string
      end
      type create_subnet_cidr_reservation_request = { subnet_id: subnet_id, cidr: string, reservation_type: subnet_cidr_reservation_type, description: string?, dry_run: boolean?, tag_specifications: tag_specification_list_input? }
      class CreateSubnetCidrReservationResult
        attr_accessor subnet_cidr_reservation: SubnetCidrReservation
      end
      type create_subnet_request = { tag_specifications: tag_specification_list_input?, availability_zone: string?, availability_zone_id: string?, cidr_block: string?, ipv_6_cidr_block: string?, outpost_arn: string?, vpc_id: vpc_id, dry_run: boolean?, ipv_6_native: boolean? }
      class CreateSubnetResult
        attr_accessor subnet: Subnet
      end
      type create_tags_request = { dry_run: boolean?, resources: resource_id_list, tags: tag_list_input }
      type create_traffic_mirror_filter_request = { description: string?, tag_specifications: tag_specification_list_input?, dry_run: boolean?, client_token: string? }
      class CreateTrafficMirrorFilterResult
        attr_accessor traffic_mirror_filter: TrafficMirrorFilter
        attr_accessor client_token: string
      end
      type create_traffic_mirror_filter_rule_request = { traffic_mirror_filter_id: traffic_mirror_filter_id, traffic_direction: traffic_direction, rule_number: integer, rule_action: traffic_mirror_rule_action, destination_port_range: traffic_mirror_port_range_request?, source_port_range: traffic_mirror_port_range_request?, protocol: integer?, destination_cidr_block: string, source_cidr_block: string, description: string?, dry_run: boolean?, client_token: string? }
      class CreateTrafficMirrorFilterRuleResult
        attr_accessor traffic_mirror_filter_rule: TrafficMirrorFilterRule
        attr_accessor client_token: string
      end
      type create_traffic_mirror_session_request = { network_interface_id: network_interface_id, traffic_mirror_target_id: traffic_mirror_target_id, traffic_mirror_filter_id: traffic_mirror_filter_id, packet_length: integer?, session_number: integer, virtual_network_id: integer?, description: string?, tag_specifications: tag_specification_list_input?, dry_run: boolean?, client_token: string? }
      class CreateTrafficMirrorSessionResult
        attr_accessor traffic_mirror_session: TrafficMirrorSession
        attr_accessor client_token: string
      end
      type create_traffic_mirror_target_request = { network_interface_id: network_interface_id?, network_load_balancer_arn: string?, description: string?, tag_specifications: tag_specification_list_input?, dry_run: boolean?, client_token: string?, gateway_load_balancer_endpoint_id: vpc_endpoint_id? }
      class CreateTrafficMirrorTargetResult
        attr_accessor traffic_mirror_target: TrafficMirrorTarget
        attr_accessor client_token: string
      end
      type create_transit_gateway_connect_peer_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, transit_gateway_address: string?, peer_address: string, bgp_options: transit_gateway_connect_request_bgp_options?, inside_cidr_blocks: inside_cidr_blocks_string_list, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateTransitGatewayConnectPeerResult
        attr_accessor transit_gateway_connect_peer: TransitGatewayConnectPeer
      end
      type create_transit_gateway_connect_request = { transport_transit_gateway_attachment_id: transit_gateway_attachment_id, options: create_transit_gateway_connect_request_options, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      type create_transit_gateway_connect_request_options = { protocol: protocol_value }
      class CreateTransitGatewayConnectResult
        attr_accessor transit_gateway_connect: TransitGatewayConnect
      end
      type create_transit_gateway_multicast_domain_request = { transit_gateway_id: transit_gateway_id, options: create_transit_gateway_multicast_domain_request_options?, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      type create_transit_gateway_multicast_domain_request_options = { igmpv_2_support: igmpv_2_support_value?, static_sources_support: static_sources_support_value?, auto_accept_shared_associations: auto_accept_shared_associations_value? }
      class CreateTransitGatewayMulticastDomainResult
        attr_accessor transit_gateway_multicast_domain: TransitGatewayMulticastDomain
      end
      type create_transit_gateway_peering_attachment_request = { transit_gateway_id: transit_gateway_id, peer_transit_gateway_id: transit_association_gateway_id, peer_account_id: string, peer_region: string, options: create_transit_gateway_peering_attachment_request_options?, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      type create_transit_gateway_peering_attachment_request_options = { dynamic_routing: dynamic_routing_value? }
      class CreateTransitGatewayPeeringAttachmentResult
        attr_accessor transit_gateway_peering_attachment: TransitGatewayPeeringAttachment
      end
      type create_transit_gateway_policy_table_request = { transit_gateway_id: transit_gateway_id, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateTransitGatewayPolicyTableResult
        attr_accessor transit_gateway_policy_table: TransitGatewayPolicyTable
      end
      type create_transit_gateway_prefix_list_reference_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, prefix_list_id: prefix_list_resource_id, transit_gateway_attachment_id: transit_gateway_attachment_id?, blackhole: boolean?, dry_run: boolean? }
      class CreateTransitGatewayPrefixListReferenceResult
        attr_accessor transit_gateway_prefix_list_reference: TransitGatewayPrefixListReference
      end
      type create_transit_gateway_request = { description: string?, options: transit_gateway_request_options?, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateTransitGatewayResult
        attr_accessor transit_gateway: TransitGateway
      end
      type create_transit_gateway_route_request = { destination_cidr_block: string, transit_gateway_route_table_id: transit_gateway_route_table_id, transit_gateway_attachment_id: transit_gateway_attachment_id?, blackhole: boolean?, dry_run: boolean? }
      class CreateTransitGatewayRouteResult
        attr_accessor route: TransitGatewayRoute
      end
      type create_transit_gateway_route_table_announcement_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, peering_attachment_id: transit_gateway_attachment_id, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateTransitGatewayRouteTableAnnouncementResult
        attr_accessor transit_gateway_route_table_announcement: TransitGatewayRouteTableAnnouncement
      end
      type create_transit_gateway_route_table_request = { transit_gateway_id: transit_gateway_id, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      class CreateTransitGatewayRouteTableResult
        attr_accessor transit_gateway_route_table: TransitGatewayRouteTable
      end
      type create_transit_gateway_vpc_attachment_request = { transit_gateway_id: transit_gateway_id, vpc_id: vpc_id, subnet_ids: transit_gateway_subnet_id_list, options: create_transit_gateway_vpc_attachment_request_options?, tag_specifications: tag_specification_list_input?, dry_run: boolean? }
      type create_transit_gateway_vpc_attachment_request_options = { dns_support: dns_support_value?, ipv_6_support: ipv_6_support_value?, appliance_mode_support: appliance_mode_support_value? }
      class CreateTransitGatewayVpcAttachmentResult
        attr_accessor transit_gateway_vpc_attachment: TransitGatewayVpcAttachment
      end
      type create_verified_access_endpoint_eni_options = { network_interface_id: network_interface_id?, protocol: verified_access_endpoint_protocol?, port: verified_access_endpoint_port_number? }
      type create_verified_access_endpoint_load_balancer_options = { protocol: verified_access_endpoint_protocol?, port: verified_access_endpoint_port_number?, load_balancer_arn: load_balancer_arn?, subnet_ids: create_verified_access_endpoint_subnet_id_list? }
      type create_verified_access_endpoint_request = { verified_access_group_id: verified_access_group_id, endpoint_type: verified_access_endpoint_type, attachment_type: verified_access_endpoint_attachment_type, domain_certificate_arn: certificate_arn, application_domain: string, endpoint_domain_prefix: string, security_group_ids: security_group_id_list?, load_balancer_options: create_verified_access_endpoint_load_balancer_options?, network_interface_options: create_verified_access_endpoint_eni_options?, description: string?, policy_document: string?, tag_specifications: tag_specification_list_input?, client_token: string?, dry_run: boolean? }
      class CreateVerifiedAccessEndpointResult
        attr_accessor verified_access_endpoint: VerifiedAccessEndpoint
      end
      type create_verified_access_endpoint_subnet_id_list = ::Array[subnet_id]
      type create_verified_access_group_request = { verified_access_instance_id: verified_access_instance_id, description: string?, policy_document: string?, tag_specifications: tag_specification_list_input?, client_token: string?, dry_run: boolean? }
      class CreateVerifiedAccessGroupResult
        attr_accessor verified_access_group: VerifiedAccessGroup
      end
      type create_verified_access_instance_request = { description: string?, tag_specifications: tag_specification_list_input?, client_token: string?, dry_run: boolean? }
      class CreateVerifiedAccessInstanceResult
        attr_accessor verified_access_instance: VerifiedAccessInstance
      end
      type create_verified_access_trust_provider_device_options = { tenant_id: string? }
      type create_verified_access_trust_provider_oidc_options = { issuer: string?, authorization_endpoint: string?, token_endpoint: string?, user_info_endpoint: string?, client_id: string?, client_secret: client_secret_type?, scope: string? }
      type create_verified_access_trust_provider_request = { trust_provider_type: trust_provider_type, user_trust_provider_type: user_trust_provider_type?, device_trust_provider_type: device_trust_provider_type?, oidc_options: create_verified_access_trust_provider_oidc_options?, device_options: create_verified_access_trust_provider_device_options?, policy_reference_name: string, description: string?, tag_specifications: tag_specification_list_input?, client_token: string?, dry_run: boolean? }
      class CreateVerifiedAccessTrustProviderResult
        attr_accessor verified_access_trust_provider: VerifiedAccessTrustProvider
      end
      class CreateVolumePermission
        attr_accessor group: permission_group
        attr_accessor user_id: string
      end
      type create_volume_permission = { group: permission_group?, user_id: string? }
      type create_volume_permission_list_output = ::Array[CreateVolumePermission]
      type create_volume_permission_list_input = ::Array[create_volume_permission]
      type create_volume_permission_modifications = { add: create_volume_permission_list_input?, remove: create_volume_permission_list_input? }
      type create_volume_request = { availability_zone: availability_zone_name, encrypted: boolean?, iops: integer?, kms_key_id: kms_key_id?, outpost_arn: string?, size: integer?, snapshot_id: snapshot_id?, volume_type: volume_type?, dry_run: boolean?, tag_specifications: tag_specification_list_input?, multi_attach_enabled: boolean?, throughput: integer?, client_token: string? }
      type create_vpc_endpoint_connection_notification_request = { dry_run: boolean?, service_id: vpc_endpoint_service_id?, vpc_endpoint_id: vpc_endpoint_id?, connection_notification_arn: string, connection_events: value_string_list, client_token: string? }
      class CreateVpcEndpointConnectionNotificationResult
        attr_accessor connection_notification: ConnectionNotification
        attr_accessor client_token: string
      end
      type create_vpc_endpoint_request = { dry_run: boolean?, vpc_endpoint_type: vpc_endpoint_type?, vpc_id: vpc_id, service_name: string, policy_document: string?, route_table_ids: vpc_endpoint_route_table_id_list?, subnet_ids: vpc_endpoint_subnet_id_list?, security_group_ids: vpc_endpoint_security_group_id_list?, ip_address_type: ip_address_type?, dns_options: dns_options_specification?, client_token: string?, private_dns_enabled: boolean?, tag_specifications: tag_specification_list_input? }
      class CreateVpcEndpointResult
        attr_accessor vpc_endpoint: VpcEndpoint
        attr_accessor client_token: string
      end
      type create_vpc_endpoint_service_configuration_request = { dry_run: boolean?, acceptance_required: boolean?, private_dns_name: string?, network_load_balancer_arns: value_string_list?, gateway_load_balancer_arns: value_string_list?, supported_ip_address_types: value_string_list?, client_token: string?, tag_specifications: tag_specification_list_input? }
      class CreateVpcEndpointServiceConfigurationResult
        attr_accessor service_configuration: ServiceConfiguration
        attr_accessor client_token: string
      end
      type create_vpc_peering_connection_request = { dry_run: boolean?, peer_owner_id: string?, peer_vpc_id: string?, vpc_id: vpc_id, peer_region: string?, tag_specifications: tag_specification_list_input? }
      class CreateVpcPeeringConnectionResult
        attr_accessor vpc_peering_connection: VpcPeeringConnection
      end
      type create_vpc_request = { cidr_block: string?, amazon_provided_ipv_6_cidr_block: boolean?, ipv_6_pool: ipv_6_pool_ec2_id?, ipv_6_cidr_block: string?, ipv_4_ipam_pool_id: ipam_pool_id?, ipv_4_netmask_length: netmask_length?, ipv_6_ipam_pool_id: ipam_pool_id?, ipv_6_netmask_length: netmask_length?, dry_run: boolean?, instance_tenancy: tenancy?, ipv_6_cidr_block_network_border_group: string?, tag_specifications: tag_specification_list_input? }
      class CreateVpcResult
        attr_accessor vpc: Vpc
      end
      type create_vpn_connection_request = { customer_gateway_id: customer_gateway_id, type: string, vpn_gateway_id: vpn_gateway_id?, transit_gateway_id: transit_gateway_id?, dry_run: boolean?, options: vpn_connection_options_specification?, tag_specifications: tag_specification_list_input? }
      class CreateVpnConnectionResult
        attr_accessor vpn_connection: VpnConnection
      end
      type create_vpn_connection_route_request = { destination_cidr_block: string, vpn_connection_id: vpn_connection_id }
      type create_vpn_gateway_request = { availability_zone: string?, type: gateway_type, tag_specifications: tag_specification_list_input?, amazon_side_asn: long?, dry_run: boolean? }
      class CreateVpnGatewayResult
        attr_accessor vpn_gateway: VpnGateway
      end
      class CreditSpecification
        attr_accessor cpu_credits: string
      end
      type credit_specification_request = { cpu_credits: string }
      type currency_code_values = ("USD")
      type current_generation_flag = bool
      class CustomerGateway
        attr_accessor bgp_asn: string
        attr_accessor customer_gateway_id: string
        attr_accessor ip_address: string
        attr_accessor certificate_arn: string
        attr_accessor state: string
        attr_accessor type_: string
        attr_accessor device_name: string
        attr_accessor tags: tag_list_output
      end
      type customer_gateway_id = ::String
      type customer_gateway_id_string_list = ::Array[customer_gateway_id]
      type customer_gateway_list_output = ::Array[CustomerGateway]
      type dit_max_results = ::Integer
      type dito_max_results = ::Integer
      type data_queries = ::Array[data_query]
      type data_query = { id: string?, source: string?, destination: string?, metric: metric_type?, statistic: statistic_type?, period: period_type? }
      class DataResponse
        attr_accessor id: string
        attr_accessor source: string
        attr_accessor destination: string
        attr_accessor metric: metric_type
        attr_accessor statistic: statistic_type
        attr_accessor period: period_type
        attr_accessor metric_points: metric_points
      end
      type data_responses = ::Array[DataResponse]
      type datafeed_subscription_state = ("Active" | "Inactive")
      type date_time = ::Time
      type dedicated_host_flag = bool
      type dedicated_host_id = ::String
      type dedicated_host_id_list = ::Array[dedicated_host_id]
      type default_network_card_index = ::Integer
      type default_route_table_association_value = ("enable" | "disable")
      type default_route_table_propagation_value = ("enable" | "disable")
      type default_target_capacity_type = ("spot" | "on-demand")
      type defaulting_dhcp_options_id = ::String
      type delete_carrier_gateway_request = { carrier_gateway_id: carrier_gateway_id, dry_run: boolean? }
      class DeleteCarrierGatewayResult
        attr_accessor carrier_gateway: CarrierGateway
      end
      type delete_client_vpn_endpoint_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, dry_run: boolean? }
      class DeleteClientVpnEndpointResult
        attr_accessor status: ClientVpnEndpointStatus
      end
      type delete_client_vpn_route_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, target_vpc_subnet_id: subnet_id?, destination_cidr_block: string, dry_run: boolean? }
      class DeleteClientVpnRouteResult
        attr_accessor status: ClientVpnRouteStatus
      end
      type delete_coip_cidr_request = { cidr: string, coip_pool_id: ipv_4_pool_coip_id, dry_run: boolean? }
      class DeleteCoipCidrResult
        attr_accessor coip_cidr: CoipCidr
      end
      type delete_coip_pool_request = { coip_pool_id: ipv_4_pool_coip_id, dry_run: boolean? }
      class DeleteCoipPoolResult
        attr_accessor coip_pool: CoipPool
      end
      type delete_customer_gateway_request = { customer_gateway_id: customer_gateway_id, dry_run: boolean? }
      type delete_dhcp_options_request = { dhcp_options_id: dhcp_options_id, dry_run: boolean? }
      type delete_egress_only_internet_gateway_request = { dry_run: boolean?, egress_only_internet_gateway_id: egress_only_internet_gateway_id }
      class DeleteEgressOnlyInternetGatewayResult
        attr_accessor return_code: boolean
      end
      class DeleteFleetError
        attr_accessor code: delete_fleet_error_code
        attr_accessor message: string
      end
      type delete_fleet_error_code = ("fleetIdDoesNotExist" | "fleetIdMalformed" | "fleetNotInDeletableState" | "unexpectedError")
      class DeleteFleetErrorItem
        attr_accessor error: DeleteFleetError
        attr_accessor fleet_id: fleet_id
      end
      type delete_fleet_error_set = ::Array[DeleteFleetErrorItem]
      class DeleteFleetSuccessItem
        attr_accessor current_fleet_state: fleet_state_code
        attr_accessor previous_fleet_state: fleet_state_code
        attr_accessor fleet_id: fleet_id
      end
      type delete_fleet_success_set = ::Array[DeleteFleetSuccessItem]
      type delete_fleets_request = { dry_run: boolean?, fleet_ids: fleet_id_set, terminate_instances: boolean }
      class DeleteFleetsResult
        attr_accessor successful_fleet_deletions: delete_fleet_success_set
        attr_accessor unsuccessful_fleet_deletions: delete_fleet_error_set
      end
      type delete_flow_logs_request = { dry_run: boolean?, flow_log_ids: flow_log_id_list }
      class DeleteFlowLogsResult
        attr_accessor unsuccessful: unsuccessful_item_set
      end
      type delete_fpga_image_request = { dry_run: boolean?, fpga_image_id: fpga_image_id }
      class DeleteFpgaImageResult
        attr_accessor return: boolean
      end
      type delete_instance_event_window_request = { dry_run: boolean?, force_delete: boolean?, instance_event_window_id: instance_event_window_id }
      class DeleteInstanceEventWindowResult
        attr_accessor instance_event_window_state: InstanceEventWindowStateChange
      end
      type delete_internet_gateway_request = { dry_run: boolean?, internet_gateway_id: internet_gateway_id }
      type delete_ipam_pool_request = { dry_run: boolean?, ipam_pool_id: ipam_pool_id }
      class DeleteIpamPoolResult
        attr_accessor ipam_pool: IpamPool
      end
      type delete_ipam_request = { dry_run: boolean?, ipam_id: ipam_id, cascade: boolean? }
      type delete_ipam_resource_discovery_request = { dry_run: boolean?, ipam_resource_discovery_id: ipam_resource_discovery_id }
      class DeleteIpamResourceDiscoveryResult
        attr_accessor ipam_resource_discovery: IpamResourceDiscovery
      end
      class DeleteIpamResult
        attr_accessor ipam: Ipam
      end
      type delete_ipam_scope_request = { dry_run: boolean?, ipam_scope_id: ipam_scope_id }
      class DeleteIpamScopeResult
        attr_accessor ipam_scope: IpamScope
      end
      type delete_key_pair_request = { key_name: key_pair_name?, key_pair_id: key_pair_id?, dry_run: boolean? }
      type delete_launch_template_request = { dry_run: boolean?, launch_template_id: launch_template_id?, launch_template_name: launch_template_name? }
      class DeleteLaunchTemplateResult
        attr_accessor launch_template: LaunchTemplate
      end
      type delete_launch_template_versions_request = { dry_run: boolean?, launch_template_id: launch_template_id?, launch_template_name: launch_template_name?, versions: version_string_list }
      class DeleteLaunchTemplateVersionsResponseErrorItem
        attr_accessor launch_template_id: string
        attr_accessor launch_template_name: string
        attr_accessor version_number: long
        attr_accessor response_error: ResponseError
      end
      type delete_launch_template_versions_response_error_set = ::Array[DeleteLaunchTemplateVersionsResponseErrorItem]
      class DeleteLaunchTemplateVersionsResponseSuccessItem
        attr_accessor launch_template_id: string
        attr_accessor launch_template_name: string
        attr_accessor version_number: long
      end
      type delete_launch_template_versions_response_success_set = ::Array[DeleteLaunchTemplateVersionsResponseSuccessItem]
      class DeleteLaunchTemplateVersionsResult
        attr_accessor successfully_deleted_launch_template_versions: delete_launch_template_versions_response_success_set
        attr_accessor unsuccessfully_deleted_launch_template_versions: delete_launch_template_versions_response_error_set
      end
      type delete_local_gateway_route_request = { destination_cidr_block: string?, local_gateway_route_table_id: local_gateway_routetable_id, dry_run: boolean?, destination_prefix_list_id: prefix_list_resource_id? }
      class DeleteLocalGatewayRouteResult
        attr_accessor route: LocalGatewayRoute
      end
      type delete_local_gateway_route_table_request = { local_gateway_route_table_id: local_gateway_routetable_id, dry_run: boolean? }
      class DeleteLocalGatewayRouteTableResult
        attr_accessor local_gateway_route_table: LocalGatewayRouteTable
      end
      type delete_local_gateway_route_table_virtual_interface_group_association_request = { local_gateway_route_table_virtual_interface_group_association_id: local_gateway_route_table_virtual_interface_group_association_id, dry_run: boolean? }
      class DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult
        attr_accessor local_gateway_route_table_virtual_interface_group_association: LocalGatewayRouteTableVirtualInterfaceGroupAssociation
      end
      type delete_local_gateway_route_table_vpc_association_request = { local_gateway_route_table_vpc_association_id: local_gateway_route_table_vpc_association_id, dry_run: boolean? }
      class DeleteLocalGatewayRouteTableVpcAssociationResult
        attr_accessor local_gateway_route_table_vpc_association: LocalGatewayRouteTableVpcAssociation
      end
      type delete_managed_prefix_list_request = { dry_run: boolean?, prefix_list_id: prefix_list_resource_id }
      class DeleteManagedPrefixListResult
        attr_accessor prefix_list: ManagedPrefixList
      end
      type delete_nat_gateway_request = { dry_run: boolean?, nat_gateway_id: nat_gateway_id }
      class DeleteNatGatewayResult
        attr_accessor nat_gateway_id: string
      end
      type delete_network_acl_entry_request = { dry_run: boolean?, egress: boolean, network_acl_id: network_acl_id, rule_number: integer }
      type delete_network_acl_request = { dry_run: boolean?, network_acl_id: network_acl_id }
      type delete_network_insights_access_scope_analysis_request = { network_insights_access_scope_analysis_id: network_insights_access_scope_analysis_id, dry_run: boolean? }
      class DeleteNetworkInsightsAccessScopeAnalysisResult
        attr_accessor network_insights_access_scope_analysis_id: network_insights_access_scope_analysis_id
      end
      type delete_network_insights_access_scope_request = { dry_run: boolean?, network_insights_access_scope_id: network_insights_access_scope_id }
      class DeleteNetworkInsightsAccessScopeResult
        attr_accessor network_insights_access_scope_id: network_insights_access_scope_id
      end
      type delete_network_insights_analysis_request = { dry_run: boolean?, network_insights_analysis_id: network_insights_analysis_id }
      class DeleteNetworkInsightsAnalysisResult
        attr_accessor network_insights_analysis_id: network_insights_analysis_id
      end
      type delete_network_insights_path_request = { dry_run: boolean?, network_insights_path_id: network_insights_path_id }
      class DeleteNetworkInsightsPathResult
        attr_accessor network_insights_path_id: network_insights_path_id
      end
      type delete_network_interface_permission_request = { network_interface_permission_id: network_interface_permission_id, force: boolean?, dry_run: boolean? }
      class DeleteNetworkInterfacePermissionResult
        attr_accessor return: boolean
      end
      type delete_network_interface_request = { dry_run: boolean?, network_interface_id: network_interface_id }
      type delete_placement_group_request = { dry_run: boolean?, group_name: placement_group_name }
      type delete_public_ipv_4_pool_request = { dry_run: boolean?, pool_id: ipv_4_pool_ec2_id }
      class DeletePublicIpv4PoolResult
        attr_accessor return_value: boolean
      end
      class DeleteQueuedReservedInstancesError
        attr_accessor code: delete_queued_reserved_instances_error_code
        attr_accessor message: string
      end
      type delete_queued_reserved_instances_error_code = ("reserved-instances-id-invalid" | "reserved-instances-not-in-queued-state" | "unexpected-error")
      type delete_queued_reserved_instances_id_list = ::Array[reservation_id]
      type delete_queued_reserved_instances_request = { dry_run: boolean?, reserved_instances_ids: delete_queued_reserved_instances_id_list }
      class DeleteQueuedReservedInstancesResult
        attr_accessor successful_queued_purchase_deletions: successful_queued_purchase_deletion_set
        attr_accessor failed_queued_purchase_deletions: failed_queued_purchase_deletion_set
      end
      type delete_route_request = { destination_cidr_block: string?, destination_ipv_6_cidr_block: string?, destination_prefix_list_id: prefix_list_resource_id?, dry_run: boolean?, route_table_id: route_table_id }
      type delete_route_table_request = { dry_run: boolean?, route_table_id: route_table_id }
      type delete_security_group_request = { group_id: security_group_id?, group_name: security_group_name?, dry_run: boolean? }
      type delete_snapshot_request = { snapshot_id: snapshot_id, dry_run: boolean? }
      type delete_spot_datafeed_subscription_request = { dry_run: boolean? }
      type delete_subnet_cidr_reservation_request = { subnet_cidr_reservation_id: subnet_cidr_reservation_id, dry_run: boolean? }
      class DeleteSubnetCidrReservationResult
        attr_accessor deleted_subnet_cidr_reservation: SubnetCidrReservation
      end
      type delete_subnet_request = { subnet_id: subnet_id, dry_run: boolean? }
      type delete_tags_request = { dry_run: boolean?, resources: resource_id_list, tags: tag_list_input? }
      type delete_traffic_mirror_filter_request = { traffic_mirror_filter_id: traffic_mirror_filter_id, dry_run: boolean? }
      class DeleteTrafficMirrorFilterResult
        attr_accessor traffic_mirror_filter_id: string
      end
      type delete_traffic_mirror_filter_rule_request = { traffic_mirror_filter_rule_id: traffic_mirror_filter_rule_id_with_resolver, dry_run: boolean? }
      class DeleteTrafficMirrorFilterRuleResult
        attr_accessor traffic_mirror_filter_rule_id: string
      end
      type delete_traffic_mirror_session_request = { traffic_mirror_session_id: traffic_mirror_session_id, dry_run: boolean? }
      class DeleteTrafficMirrorSessionResult
        attr_accessor traffic_mirror_session_id: string
      end
      type delete_traffic_mirror_target_request = { traffic_mirror_target_id: traffic_mirror_target_id, dry_run: boolean? }
      class DeleteTrafficMirrorTargetResult
        attr_accessor traffic_mirror_target_id: string
      end
      type delete_transit_gateway_connect_peer_request = { transit_gateway_connect_peer_id: transit_gateway_connect_peer_id, dry_run: boolean? }
      class DeleteTransitGatewayConnectPeerResult
        attr_accessor transit_gateway_connect_peer: TransitGatewayConnectPeer
      end
      type delete_transit_gateway_connect_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class DeleteTransitGatewayConnectResult
        attr_accessor transit_gateway_connect: TransitGatewayConnect
      end
      type delete_transit_gateway_multicast_domain_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id, dry_run: boolean? }
      class DeleteTransitGatewayMulticastDomainResult
        attr_accessor transit_gateway_multicast_domain: TransitGatewayMulticastDomain
      end
      type delete_transit_gateway_peering_attachment_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class DeleteTransitGatewayPeeringAttachmentResult
        attr_accessor transit_gateway_peering_attachment: TransitGatewayPeeringAttachment
      end
      type delete_transit_gateway_policy_table_request = { transit_gateway_policy_table_id: transit_gateway_policy_table_id, dry_run: boolean? }
      class DeleteTransitGatewayPolicyTableResult
        attr_accessor transit_gateway_policy_table: TransitGatewayPolicyTable
      end
      type delete_transit_gateway_prefix_list_reference_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, prefix_list_id: prefix_list_resource_id, dry_run: boolean? }
      class DeleteTransitGatewayPrefixListReferenceResult
        attr_accessor transit_gateway_prefix_list_reference: TransitGatewayPrefixListReference
      end
      type delete_transit_gateway_request = { transit_gateway_id: transit_gateway_id, dry_run: boolean? }
      class DeleteTransitGatewayResult
        attr_accessor transit_gateway: TransitGateway
      end
      type delete_transit_gateway_route_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, destination_cidr_block: string, dry_run: boolean? }
      class DeleteTransitGatewayRouteResult
        attr_accessor route: TransitGatewayRoute
      end
      type delete_transit_gateway_route_table_announcement_request = { transit_gateway_route_table_announcement_id: transit_gateway_route_table_announcement_id, dry_run: boolean? }
      class DeleteTransitGatewayRouteTableAnnouncementResult
        attr_accessor transit_gateway_route_table_announcement: TransitGatewayRouteTableAnnouncement
      end
      type delete_transit_gateway_route_table_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, dry_run: boolean? }
      class DeleteTransitGatewayRouteTableResult
        attr_accessor transit_gateway_route_table: TransitGatewayRouteTable
      end
      type delete_transit_gateway_vpc_attachment_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class DeleteTransitGatewayVpcAttachmentResult
        attr_accessor transit_gateway_vpc_attachment: TransitGatewayVpcAttachment
      end
      type delete_verified_access_endpoint_request = { verified_access_endpoint_id: verified_access_endpoint_id, client_token: string?, dry_run: boolean? }
      class DeleteVerifiedAccessEndpointResult
        attr_accessor verified_access_endpoint: VerifiedAccessEndpoint
      end
      type delete_verified_access_group_request = { verified_access_group_id: verified_access_group_id, client_token: string?, dry_run: boolean? }
      class DeleteVerifiedAccessGroupResult
        attr_accessor verified_access_group: VerifiedAccessGroup
      end
      type delete_verified_access_instance_request = { verified_access_instance_id: verified_access_instance_id, dry_run: boolean?, client_token: string? }
      class DeleteVerifiedAccessInstanceResult
        attr_accessor verified_access_instance: VerifiedAccessInstance
      end
      type delete_verified_access_trust_provider_request = { verified_access_trust_provider_id: verified_access_trust_provider_id, dry_run: boolean?, client_token: string? }
      class DeleteVerifiedAccessTrustProviderResult
        attr_accessor verified_access_trust_provider: VerifiedAccessTrustProvider
      end
      type delete_volume_request = { volume_id: volume_id, dry_run: boolean? }
      type delete_vpc_endpoint_connection_notifications_request = { dry_run: boolean?, connection_notification_ids: connection_notification_ids_list }
      class DeleteVpcEndpointConnectionNotificationsResult
        attr_accessor unsuccessful: unsuccessful_item_set
      end
      type delete_vpc_endpoint_service_configurations_request = { dry_run: boolean?, service_ids: vpc_endpoint_service_id_list }
      class DeleteVpcEndpointServiceConfigurationsResult
        attr_accessor unsuccessful: unsuccessful_item_set
      end
      type delete_vpc_endpoints_request = { dry_run: boolean?, vpc_endpoint_ids: vpc_endpoint_id_list }
      class DeleteVpcEndpointsResult
        attr_accessor unsuccessful: unsuccessful_item_set
      end
      type delete_vpc_peering_connection_request = { dry_run: boolean?, vpc_peering_connection_id: vpc_peering_connection_id }
      class DeleteVpcPeeringConnectionResult
        attr_accessor return: boolean
      end
      type delete_vpc_request = { vpc_id: vpc_id, dry_run: boolean? }
      type delete_vpn_connection_request = { vpn_connection_id: vpn_connection_id, dry_run: boolean? }
      type delete_vpn_connection_route_request = { destination_cidr_block: string, vpn_connection_id: vpn_connection_id }
      type delete_vpn_gateway_request = { vpn_gateway_id: vpn_gateway_id, dry_run: boolean? }
      type deprovision_byoip_cidr_request = { cidr: string, dry_run: boolean? }
      class DeprovisionByoipCidrResult
        attr_accessor byoip_cidr: ByoipCidr
      end
      type deprovision_ipam_pool_cidr_request = { dry_run: boolean?, ipam_pool_id: ipam_pool_id, cidr: string? }
      class DeprovisionIpamPoolCidrResult
        attr_accessor ipam_pool_cidr: IpamPoolCidr
      end
      type deprovision_public_ipv_4_pool_cidr_request = { dry_run: boolean?, pool_id: ipv_4_pool_ec2_id, cidr: string }
      class DeprovisionPublicIpv4PoolCidrResult
        attr_accessor pool_id: ipv_4_pool_ec2_id
        attr_accessor deprovisioned_addresses: deprovisioned_address_set
      end
      type deprovisioned_address_set = ::Array[string]
      type deregister_image_request = { image_id: image_id, dry_run: boolean? }
      type deregister_instance_event_notification_attributes_request = { dry_run: boolean?, instance_tag_attribute: deregister_instance_tag_attribute_request? }
      class DeregisterInstanceEventNotificationAttributesResult
        attr_accessor instance_tag_attribute: InstanceTagNotificationAttribute
      end
      type deregister_instance_tag_attribute_request = { include_all_tags_of_instance: boolean?, instance_tag_keys: instance_tag_key_set? }
      type deregister_transit_gateway_multicast_group_members_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id?, group_ip_address: string?, network_interface_ids: transit_gateway_network_interface_id_list?, dry_run: boolean? }
      class DeregisterTransitGatewayMulticastGroupMembersResult
        attr_accessor deregistered_multicast_group_members: TransitGatewayMulticastDeregisteredGroupMembers
      end
      type deregister_transit_gateway_multicast_group_sources_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id?, group_ip_address: string?, network_interface_ids: transit_gateway_network_interface_id_list?, dry_run: boolean? }
      class DeregisterTransitGatewayMulticastGroupSourcesResult
        attr_accessor deregistered_multicast_group_sources: TransitGatewayMulticastDeregisteredGroupSources
      end
      type describe_account_attributes_request = { attribute_names: account_attribute_name_string_list?, dry_run: boolean? }
      class DescribeAccountAttributesResult
        attr_accessor account_attributes: account_attribute_list
      end
      type describe_address_transfers_max_results = ::Integer
      type describe_address_transfers_request = { allocation_ids: allocation_id_list?, next_token: string?, max_results: describe_address_transfers_max_results?, dry_run: boolean? }
      class DescribeAddressTransfersResult
        attr_accessor address_transfers: address_transfer_list_output
        attr_accessor next_token: string
      end
      type describe_addresses_attribute_request = { allocation_ids: allocation_ids?, attribute: address_attribute_name?, next_token: next_token?, max_results: address_max_results?, dry_run: boolean? }
      class DescribeAddressesAttributeResult
        attr_accessor addresses: address_set_output
        attr_accessor next_token: next_token
      end
      type describe_addresses_request = { filters: filter_list?, public_ips: public_ip_string_list?, allocation_ids: allocation_id_list?, dry_run: boolean? }
      class DescribeAddressesResult
        attr_accessor addresses: address_list
      end
      type describe_aggregate_id_format_request = { dry_run: boolean? }
      class DescribeAggregateIdFormatResult
        attr_accessor use_long_ids_aggregated: boolean
        attr_accessor statuses: id_format_list
      end
      type describe_availability_zones_request = { filters: filter_list?, zone_names: zone_name_string_list?, zone_ids: zone_id_string_list?, all_availability_zones: boolean?, dry_run: boolean? }
      class DescribeAvailabilityZonesResult
        attr_accessor availability_zones: availability_zone_list
      end
      type describe_aws_network_performance_metric_subscriptions_request = { max_results: max_results_param?, next_token: string?, filters: filter_list?, dry_run: boolean? }
      class DescribeAwsNetworkPerformanceMetricSubscriptionsResult
        attr_accessor next_token: string
        attr_accessor subscriptions: subscription_list
      end
      type describe_bundle_tasks_request = { bundle_ids: bundle_id_string_list?, filters: filter_list?, dry_run: boolean? }
      class DescribeBundleTasksResult
        attr_accessor bundle_tasks: bundle_task_list_output
      end
      type describe_byoip_cidrs_max_results = ::Integer
      type describe_byoip_cidrs_request = { dry_run: boolean?, max_results: describe_byoip_cidrs_max_results, next_token: next_token? }
      class DescribeByoipCidrsResult
        attr_accessor byoip_cidrs: byoip_cidr_set_output
        attr_accessor next_token: string
      end
      type describe_capacity_reservation_fleets_max_results = ::Integer
      type describe_capacity_reservation_fleets_request = { capacity_reservation_fleet_ids: capacity_reservation_fleet_id_set?, next_token: string?, max_results: describe_capacity_reservation_fleets_max_results?, filters: filter_list?, dry_run: boolean? }
      class DescribeCapacityReservationFleetsResult
        attr_accessor capacity_reservation_fleets: capacity_reservation_fleet_set
        attr_accessor next_token: string
      end
      type describe_capacity_reservations_max_results = ::Integer
      type describe_capacity_reservations_request = { capacity_reservation_ids: capacity_reservation_id_set?, next_token: string?, max_results: describe_capacity_reservations_max_results?, filters: filter_list?, dry_run: boolean? }
      class DescribeCapacityReservationsResult
        attr_accessor next_token: string
        attr_accessor capacity_reservations: capacity_reservation_set_output
      end
      type describe_carrier_gateways_request = { carrier_gateway_ids: carrier_gateway_id_set?, filters: filter_list?, max_results: carrier_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeCarrierGatewaysResult
        attr_accessor carrier_gateways: carrier_gateway_set_output
        attr_accessor next_token: string
      end
      type describe_classic_link_instances_max_results = ::Integer
      type describe_classic_link_instances_request = { filters: filter_list?, dry_run: boolean?, instance_ids: instance_id_string_list?, max_results: describe_classic_link_instances_max_results?, next_token: string? }
      class DescribeClassicLinkInstancesResult
        attr_accessor instances: classic_link_instance_list
        attr_accessor next_token: string
      end
      type describe_client_vpn_authorization_rules_max_results = ::Integer
      type describe_client_vpn_authorization_rules_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, dry_run: boolean?, next_token: next_token?, filters: filter_list?, max_results: describe_client_vpn_authorization_rules_max_results? }
      class DescribeClientVpnAuthorizationRulesResult
        attr_accessor authorization_rules: authorization_rule_set
        attr_accessor next_token: next_token
      end
      type describe_client_vpn_connections_max_results = ::Integer
      type describe_client_vpn_connections_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, filters: filter_list?, next_token: next_token?, max_results: describe_client_vpn_connections_max_results?, dry_run: boolean? }
      class DescribeClientVpnConnectionsResult
        attr_accessor connections: client_vpn_connection_set
        attr_accessor next_token: next_token
      end
      type describe_client_vpn_endpoint_max_results = ::Integer
      type describe_client_vpn_endpoints_request = { client_vpn_endpoint_ids: client_vpn_endpoint_id_list?, max_results: describe_client_vpn_endpoint_max_results?, next_token: next_token?, filters: filter_list?, dry_run: boolean? }
      class DescribeClientVpnEndpointsResult
        attr_accessor client_vpn_endpoints: endpoint_set
        attr_accessor next_token: next_token
      end
      type describe_client_vpn_routes_max_results = ::Integer
      type describe_client_vpn_routes_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, filters: filter_list?, max_results: describe_client_vpn_routes_max_results?, next_token: next_token?, dry_run: boolean? }
      class DescribeClientVpnRoutesResult
        attr_accessor routes: client_vpn_route_set
        attr_accessor next_token: next_token
      end
      type describe_client_vpn_target_networks_max_results = ::Integer
      type describe_client_vpn_target_networks_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, association_ids: value_string_list?, max_results: describe_client_vpn_target_networks_max_results?, next_token: next_token?, filters: filter_list?, dry_run: boolean? }
      class DescribeClientVpnTargetNetworksResult
        attr_accessor client_vpn_target_networks: target_network_set
        attr_accessor next_token: next_token
      end
      type describe_coip_pools_request = { pool_ids: coip_pool_id_set?, filters: filter_list?, max_results: coip_pool_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeCoipPoolsResult
        attr_accessor coip_pools: coip_pool_set_output
        attr_accessor next_token: string
      end
      type describe_conversion_task_list_output = ::Array[ConversionTask]
      type describe_conversion_tasks_request = { conversion_task_ids: conversion_id_string_list?, dry_run: boolean? }
      class DescribeConversionTasksResult
        attr_accessor conversion_tasks: describe_conversion_task_list_output
      end
      type describe_customer_gateways_request = { customer_gateway_ids: customer_gateway_id_string_list?, filters: filter_list?, dry_run: boolean? }
      class DescribeCustomerGatewaysResult
        attr_accessor customer_gateways: customer_gateway_list_output
      end
      type describe_dhcp_options_max_results = ::Integer
      type describe_dhcp_options_request = { dhcp_options_ids: dhcp_options_id_string_list?, filters: filter_list?, dry_run: boolean?, next_token: string?, max_results: describe_dhcp_options_max_results? }
      class DescribeDhcpOptionsResult
        attr_accessor dhcp_options: dhcp_options_list_output
        attr_accessor next_token: string
      end
      type describe_egress_only_internet_gateways_max_results = ::Integer
      type describe_egress_only_internet_gateways_request = { dry_run: boolean?, egress_only_internet_gateway_ids: egress_only_internet_gateway_id_list?, max_results: describe_egress_only_internet_gateways_max_results?, next_token: string?, filters: filter_list? }
      class DescribeEgressOnlyInternetGatewaysResult
        attr_accessor egress_only_internet_gateways: egress_only_internet_gateway_list_output
        attr_accessor next_token: string
      end
      type describe_elastic_gpus_max_results = ::Integer
      type describe_elastic_gpus_request = { elastic_gpu_ids: elastic_gpu_id_set?, dry_run: boolean?, filters: filter_list?, max_results: describe_elastic_gpus_max_results?, next_token: string? }
      class DescribeElasticGpusResult
        attr_accessor elastic_gpu_set: elastic_gpu_set
        attr_accessor max_results: integer
        attr_accessor next_token: string
      end
      type describe_export_image_tasks_max_results = ::Integer
      type describe_export_image_tasks_request = { dry_run: boolean?, filters: filter_list?, export_image_task_ids: export_image_task_id_list?, max_results: describe_export_image_tasks_max_results?, next_token: next_token? }
      class DescribeExportImageTasksResult
        attr_accessor export_image_tasks: export_image_task_list
        attr_accessor next_token: next_token
      end
      type describe_export_tasks_request = { export_task_ids: export_task_id_string_list?, filters: filter_list? }
      class DescribeExportTasksResult
        attr_accessor export_tasks: export_task_list_output
      end
      type describe_fast_launch_images_request = { image_ids: fast_launch_image_id_list?, filters: filter_list?, max_results: describe_fast_launch_images_request_max_results?, next_token: next_token?, dry_run: boolean? }
      type describe_fast_launch_images_request_max_results = ::Integer
      class DescribeFastLaunchImagesResult
        attr_accessor fast_launch_images: describe_fast_launch_images_success_set
        attr_accessor next_token: next_token
      end
      class DescribeFastLaunchImagesSuccessItem
        attr_accessor image_id: image_id
        attr_accessor resource_type: fast_launch_resource_type
        attr_accessor snapshot_configuration: FastLaunchSnapshotConfigurationResponse
        attr_accessor launch_template: FastLaunchLaunchTemplateSpecificationResponse
        attr_accessor max_parallel_launches: integer
        attr_accessor owner_id: string
        attr_accessor state: fast_launch_state_code
        attr_accessor state_transition_reason: string
        attr_accessor state_transition_time: millisecond_date_time
      end
      type describe_fast_launch_images_success_set = ::Array[DescribeFastLaunchImagesSuccessItem]
      class DescribeFastSnapshotRestoreSuccessItem
        attr_accessor snapshot_id: string
        attr_accessor availability_zone: string
        attr_accessor state: fast_snapshot_restore_state_code
        attr_accessor state_transition_reason: string
        attr_accessor owner_id: string
        attr_accessor owner_alias: string
        attr_accessor enabling_time: millisecond_date_time
        attr_accessor optimizing_time: millisecond_date_time
        attr_accessor enabled_time: millisecond_date_time
        attr_accessor disabling_time: millisecond_date_time
        attr_accessor disabled_time: millisecond_date_time
      end
      type describe_fast_snapshot_restore_success_set = ::Array[DescribeFastSnapshotRestoreSuccessItem]
      type describe_fast_snapshot_restores_max_results = ::Integer
      type describe_fast_snapshot_restores_request = { filters: filter_list?, max_results: describe_fast_snapshot_restores_max_results?, next_token: next_token?, dry_run: boolean? }
      class DescribeFastSnapshotRestoresResult
        attr_accessor fast_snapshot_restores: describe_fast_snapshot_restore_success_set
        attr_accessor next_token: next_token
      end
      class DescribeFleetError
        attr_accessor launch_template_and_overrides: LaunchTemplateAndOverridesResponse
        attr_accessor lifecycle: instance_lifecycle
        attr_accessor error_code: string
        attr_accessor error_message: string
      end
      type describe_fleet_history_request = { dry_run: boolean?, event_type: fleet_event_type?, max_results: integer?, next_token: string?, fleet_id: fleet_id, start_time: date_time }
      class DescribeFleetHistoryResult
        attr_accessor history_records: history_record_set
        attr_accessor last_evaluated_time: date_time
        attr_accessor next_token: string
        attr_accessor fleet_id: fleet_id
        attr_accessor start_time: date_time
      end
      type describe_fleet_instances_request = { dry_run: boolean?, max_results: integer?, next_token: string?, fleet_id: fleet_id, filters: filter_list? }
      class DescribeFleetInstancesResult
        attr_accessor active_instances: active_instance_set
        attr_accessor next_token: string
        attr_accessor fleet_id: fleet_id
      end
      type describe_fleets_error_set = ::Array[DescribeFleetError]
      class DescribeFleetsInstances
        attr_accessor launch_template_and_overrides: LaunchTemplateAndOverridesResponse
        attr_accessor lifecycle: instance_lifecycle
        attr_accessor instance_ids: instance_ids_set
        attr_accessor instance_type: instance_type
        attr_accessor platform: platform_values
      end
      type describe_fleets_instances_set = ::Array[DescribeFleetsInstances]
      type describe_fleets_request = { dry_run: boolean?, max_results: integer?, next_token: string?, fleet_ids: fleet_id_set?, filters: filter_list? }
      class DescribeFleetsResult
        attr_accessor next_token: string
        attr_accessor fleets: fleet_set
      end
      type describe_flow_logs_request = { dry_run: boolean?, filter: filter_list?, flow_log_ids: flow_log_id_list?, max_results: integer?, next_token: string? }
      class DescribeFlowLogsResult
        attr_accessor flow_logs: flow_log_set
        attr_accessor next_token: string
      end
      type describe_fpga_image_attribute_request = { dry_run: boolean?, fpga_image_id: fpga_image_id, attribute: fpga_image_attribute_name }
      class DescribeFpgaImageAttributeResult
        attr_accessor fpga_image_attribute: FpgaImageAttribute
      end
      type describe_fpga_images_max_results = ::Integer
      type describe_fpga_images_request = { dry_run: boolean?, fpga_image_ids: fpga_image_id_list?, owners: owner_string_list?, filters: filter_list?, next_token: next_token?, max_results: describe_fpga_images_max_results? }
      class DescribeFpgaImagesResult
        attr_accessor fpga_images: fpga_image_list
        attr_accessor next_token: next_token
      end
      type describe_host_reservation_offerings_request = { filter: filter_list?, max_duration: integer?, max_results: describe_host_reservations_max_results?, min_duration: integer?, next_token: string?, offering_id: offering_id? }
      class DescribeHostReservationOfferingsResult
        attr_accessor next_token: string
        attr_accessor offering_set: host_offering_set
      end
      type describe_host_reservations_max_results = ::Integer
      type describe_host_reservations_request = { filter: filter_list?, host_reservation_id_set: host_reservation_id_set?, max_results: integer?, next_token: string? }
      class DescribeHostReservationsResult
        attr_accessor host_reservation_set: host_reservation_set
        attr_accessor next_token: string
      end
      type describe_hosts_request = { filter: filter_list?, host_ids: request_host_id_list?, max_results: integer?, next_token: string? }
      class DescribeHostsResult
        attr_accessor hosts: host_list
        attr_accessor next_token: string
      end
      type describe_iam_instance_profile_associations_max_results = ::Integer
      type describe_iam_instance_profile_associations_request = { association_ids: association_id_list?, filters: filter_list?, max_results: describe_iam_instance_profile_associations_max_results?, next_token: next_token? }
      class DescribeIamInstanceProfileAssociationsResult
        attr_accessor iam_instance_profile_associations: iam_instance_profile_association_set_output
        attr_accessor next_token: next_token
      end
      type describe_id_format_request = { resource: string? }
      class DescribeIdFormatResult
        attr_accessor statuses: id_format_list
      end
      type describe_identity_id_format_request = { principal_arn: string, resource: string? }
      class DescribeIdentityIdFormatResult
        attr_accessor statuses: id_format_list
      end
      type describe_image_attribute_request = { attribute: image_attribute_name, image_id: image_id, dry_run: boolean? }
      type describe_images_request = { executable_users: executable_by_string_list?, filters: filter_list?, image_ids: image_id_string_list?, owners: owner_string_list?, include_deprecated: boolean?, dry_run: boolean?, max_results: integer?, next_token: string? }
      class DescribeImagesResult
        attr_accessor images: image_list
        attr_accessor next_token: string
      end
      type describe_import_image_tasks_request = { dry_run: boolean?, filters: filter_list?, import_task_ids: import_task_id_list?, max_results: integer?, next_token: string? }
      class DescribeImportImageTasksResult
        attr_accessor import_image_tasks: import_image_task_list
        attr_accessor next_token: string
      end
      type describe_import_snapshot_tasks_request = { dry_run: boolean?, filters: filter_list?, import_task_ids: import_snapshot_task_id_list?, max_results: integer?, next_token: string? }
      class DescribeImportSnapshotTasksResult
        attr_accessor import_snapshot_tasks: import_snapshot_task_list
        attr_accessor next_token: string
      end
      type describe_instance_attribute_request = { attribute: instance_attribute_name, dry_run: boolean?, instance_id: instance_id }
      type describe_instance_credit_specifications_max_results = ::Integer
      type describe_instance_credit_specifications_request = { dry_run: boolean?, filters: filter_list?, instance_ids: instance_id_string_list?, max_results: describe_instance_credit_specifications_max_results?, next_token: string? }
      class DescribeInstanceCreditSpecificationsResult
        attr_accessor instance_credit_specifications: instance_credit_specification_list
        attr_accessor next_token: string
      end
      type describe_instance_event_notification_attributes_request = { dry_run: boolean? }
      class DescribeInstanceEventNotificationAttributesResult
        attr_accessor instance_tag_attribute: InstanceTagNotificationAttribute
      end
      type describe_instance_event_windows_request = { dry_run: boolean?, instance_event_window_ids: instance_event_window_id_set?, filters: filter_list?, max_results: result_range?, next_token: string? }
      class DescribeInstanceEventWindowsResult
        attr_accessor instance_event_windows: instance_event_window_set_output
        attr_accessor next_token: string
      end
      type describe_instance_status_request = { filters: filter_list?, instance_ids: instance_id_string_list?, max_results: integer?, next_token: string?, dry_run: boolean?, include_all_instances: boolean? }
      class DescribeInstanceStatusResult
        attr_accessor instance_statuses: instance_status_list
        attr_accessor next_token: string
      end
      type describe_instance_type_offerings_request = { dry_run: boolean?, location_type: location_type?, filters: filter_list?, max_results: dito_max_results?, next_token: next_token? }
      class DescribeInstanceTypeOfferingsResult
        attr_accessor instance_type_offerings: instance_type_offerings_list
        attr_accessor next_token: next_token
      end
      type describe_instance_types_request = { dry_run: boolean?, instance_types: request_instance_type_list?, filters: filter_list?, max_results: dit_max_results?, next_token: next_token? }
      class DescribeInstanceTypesResult
        attr_accessor instance_types: instance_type_info_list
        attr_accessor next_token: next_token
      end
      type describe_instances_request = { filters: filter_list?, instance_ids: instance_id_string_list?, dry_run: boolean?, max_results: integer?, next_token: string? }
      class DescribeInstancesResult
        attr_accessor reservations: reservation_list_output
        attr_accessor next_token: string
      end
      type describe_internet_gateways_max_results = ::Integer
      type describe_internet_gateways_request = { filters: filter_list?, dry_run: boolean?, internet_gateway_ids: internet_gateway_id_list?, next_token: string?, max_results: describe_internet_gateways_max_results? }
      class DescribeInternetGatewaysResult
        attr_accessor internet_gateways: internet_gateway_list_output
        attr_accessor next_token: string
      end
      type describe_ipam_pools_request = { dry_run: boolean?, filters: filter_list?, max_results: ipam_max_results?, next_token: next_token?, ipam_pool_ids: value_string_list? }
      class DescribeIpamPoolsResult
        attr_accessor next_token: next_token
        attr_accessor ipam_pools: ipam_pool_set_output
      end
      type describe_ipam_resource_discoveries_request = { dry_run: boolean?, ipam_resource_discovery_ids: value_string_list?, next_token: next_token?, max_results: ipam_max_results?, filters: filter_list? }
      class DescribeIpamResourceDiscoveriesResult
        attr_accessor ipam_resource_discoveries: ipam_resource_discovery_set_output
        attr_accessor next_token: next_token
      end
      type describe_ipam_resource_discovery_associations_request = { dry_run: boolean?, ipam_resource_discovery_association_ids: value_string_list?, next_token: next_token?, max_results: ipam_max_results?, filters: filter_list? }
      class DescribeIpamResourceDiscoveryAssociationsResult
        attr_accessor ipam_resource_discovery_associations: ipam_resource_discovery_association_set_output
        attr_accessor next_token: next_token
      end
      type describe_ipam_scopes_request = { dry_run: boolean?, filters: filter_list?, max_results: ipam_max_results?, next_token: next_token?, ipam_scope_ids: value_string_list? }
      class DescribeIpamScopesResult
        attr_accessor next_token: next_token
        attr_accessor ipam_scopes: ipam_scope_set_output
      end
      type describe_ipams_request = { dry_run: boolean?, filters: filter_list?, max_results: ipam_max_results?, next_token: next_token?, ipam_ids: value_string_list? }
      class DescribeIpamsResult
        attr_accessor next_token: next_token
        attr_accessor ipams: ipam_set_output
      end
      type describe_ipv_6_pools_request = { pool_ids: ipv_6_pool_id_list?, next_token: next_token?, max_results: ipv_6_pool_max_results?, dry_run: boolean?, filters: filter_list? }
      class DescribeIpv6PoolsResult
        attr_accessor ipv_6_pools: ipv_6_pool_set
        attr_accessor next_token: next_token
      end
      type describe_key_pairs_request = { filters: filter_list?, key_names: key_name_string_list?, key_pair_ids: key_pair_id_string_list?, dry_run: boolean?, include_public_key: boolean? }
      class DescribeKeyPairsResult
        attr_accessor key_pairs: key_pair_list
      end
      type describe_launch_template_versions_request = { dry_run: boolean?, launch_template_id: launch_template_id?, launch_template_name: launch_template_name?, versions: version_string_list?, min_version: string?, max_version: string?, next_token: string?, max_results: integer?, filters: filter_list?, resolve_alias: boolean? }
      class DescribeLaunchTemplateVersionsResult
        attr_accessor launch_template_versions: launch_template_version_set_output
        attr_accessor next_token: string
      end
      type describe_launch_templates_max_results = ::Integer
      type describe_launch_templates_request = { dry_run: boolean?, launch_template_ids: launch_template_id_string_list?, launch_template_names: launch_template_name_string_list?, filters: filter_list?, next_token: string?, max_results: describe_launch_templates_max_results? }
      class DescribeLaunchTemplatesResult
        attr_accessor launch_templates: launch_template_set_output
        attr_accessor next_token: string
      end
      type describe_local_gateway_route_table_virtual_interface_group_associations_request = { local_gateway_route_table_virtual_interface_group_association_ids: local_gateway_route_table_virtual_interface_group_association_id_set?, filters: filter_list?, max_results: local_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult
        attr_accessor local_gateway_route_table_virtual_interface_group_associations: local_gateway_route_table_virtual_interface_group_association_set_output
        attr_accessor next_token: string
      end
      type describe_local_gateway_route_table_vpc_associations_request = { local_gateway_route_table_vpc_association_ids: local_gateway_route_table_vpc_association_id_set?, filters: filter_list?, max_results: local_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeLocalGatewayRouteTableVpcAssociationsResult
        attr_accessor local_gateway_route_table_vpc_associations: local_gateway_route_table_vpc_association_set_output
        attr_accessor next_token: string
      end
      type describe_local_gateway_route_tables_request = { local_gateway_route_table_ids: local_gateway_route_table_id_set?, filters: filter_list?, max_results: local_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeLocalGatewayRouteTablesResult
        attr_accessor local_gateway_route_tables: local_gateway_route_table_set_output
        attr_accessor next_token: string
      end
      type describe_local_gateway_virtual_interface_groups_request = { local_gateway_virtual_interface_group_ids: local_gateway_virtual_interface_group_id_set?, filters: filter_list?, max_results: local_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeLocalGatewayVirtualInterfaceGroupsResult
        attr_accessor local_gateway_virtual_interface_groups: local_gateway_virtual_interface_group_set
        attr_accessor next_token: string
      end
      type describe_local_gateway_virtual_interfaces_request = { local_gateway_virtual_interface_ids: local_gateway_virtual_interface_id_set?, filters: filter_list?, max_results: local_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeLocalGatewayVirtualInterfacesResult
        attr_accessor local_gateway_virtual_interfaces: local_gateway_virtual_interface_set
        attr_accessor next_token: string
      end
      type describe_local_gateways_request = { local_gateway_ids: local_gateway_id_set?, filters: filter_list?, max_results: local_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeLocalGatewaysResult
        attr_accessor local_gateways: local_gateway_set
        attr_accessor next_token: string
      end
      type describe_managed_prefix_lists_request = { dry_run: boolean?, filters: filter_list?, max_results: prefix_list_max_results?, next_token: next_token?, prefix_list_ids: value_string_list? }
      class DescribeManagedPrefixListsResult
        attr_accessor next_token: next_token
        attr_accessor prefix_lists: managed_prefix_list_set_output
      end
      type describe_moving_addresses_max_results = ::Integer
      type describe_moving_addresses_request = { filters: filter_list?, dry_run: boolean?, max_results: describe_moving_addresses_max_results?, next_token: string?, public_ips: value_string_list? }
      class DescribeMovingAddressesResult
        attr_accessor moving_address_statuses: moving_address_status_set
        attr_accessor next_token: string
      end
      type describe_nat_gateways_max_results = ::Integer
      type describe_nat_gateways_request = { dry_run: boolean?, filter: filter_list?, max_results: describe_nat_gateways_max_results?, nat_gateway_ids: nat_gateway_id_string_list?, next_token: string? }
      class DescribeNatGatewaysResult
        attr_accessor nat_gateways: nat_gateway_list_output
        attr_accessor next_token: string
      end
      type describe_network_acls_max_results = ::Integer
      type describe_network_acls_request = { filters: filter_list?, dry_run: boolean?, network_acl_ids: network_acl_id_string_list?, next_token: string?, max_results: describe_network_acls_max_results? }
      class DescribeNetworkAclsResult
        attr_accessor network_acls: network_acl_list_output
        attr_accessor next_token: string
      end
      type describe_network_insights_access_scope_analyses_request = { network_insights_access_scope_analysis_ids: network_insights_access_scope_analysis_id_list?, network_insights_access_scope_id: network_insights_access_scope_id?, analysis_start_time_begin: millisecond_date_time?, analysis_start_time_end: millisecond_date_time?, filters: filter_list?, max_results: network_insights_max_results?, dry_run: boolean?, next_token: next_token? }
      class DescribeNetworkInsightsAccessScopeAnalysesResult
        attr_accessor network_insights_access_scope_analyses: network_insights_access_scope_analysis_list_output
        attr_accessor next_token: string
      end
      type describe_network_insights_access_scopes_request = { network_insights_access_scope_ids: network_insights_access_scope_id_list?, filters: filter_list?, max_results: network_insights_max_results?, dry_run: boolean?, next_token: next_token? }
      class DescribeNetworkInsightsAccessScopesResult
        attr_accessor network_insights_access_scopes: network_insights_access_scope_list_output
        attr_accessor next_token: string
      end
      type describe_network_insights_analyses_request = { network_insights_analysis_ids: network_insights_analysis_id_list?, network_insights_path_id: network_insights_path_id?, analysis_start_time: millisecond_date_time?, analysis_end_time: millisecond_date_time?, filters: filter_list?, max_results: network_insights_max_results?, dry_run: boolean?, next_token: next_token? }
      class DescribeNetworkInsightsAnalysesResult
        attr_accessor network_insights_analyses: network_insights_analysis_list_output
        attr_accessor next_token: string
      end
      type describe_network_insights_paths_request = { network_insights_path_ids: network_insights_path_id_list?, filters: filter_list?, max_results: network_insights_max_results?, dry_run: boolean?, next_token: next_token? }
      class DescribeNetworkInsightsPathsResult
        attr_accessor network_insights_paths: network_insights_path_list_output
        attr_accessor next_token: string
      end
      type describe_network_interface_attribute_request = { attribute: network_interface_attribute?, dry_run: boolean?, network_interface_id: network_interface_id }
      class DescribeNetworkInterfaceAttributeResult
        attr_accessor attachment: NetworkInterfaceAttachment
        attr_accessor description: AttributeValue
        attr_accessor groups: group_identifier_list_output
        attr_accessor network_interface_id: string
        attr_accessor source_dest_check: AttributeBooleanValue
      end
      type describe_network_interface_permissions_max_results = ::Integer
      type describe_network_interface_permissions_request = { network_interface_permission_ids: network_interface_permission_id_list?, filters: filter_list?, next_token: string?, max_results: describe_network_interface_permissions_max_results? }
      class DescribeNetworkInterfacePermissionsResult
        attr_accessor network_interface_permissions: network_interface_permission_list_output
        attr_accessor next_token: string
      end
      type describe_network_interfaces_max_results = ::Integer
      type describe_network_interfaces_request = { filters: filter_list?, dry_run: boolean?, network_interface_ids: network_interface_id_list?, next_token: string?, max_results: describe_network_interfaces_max_results? }
      class DescribeNetworkInterfacesResult
        attr_accessor network_interfaces: network_interface_list_output
        attr_accessor next_token: string
      end
      type describe_placement_groups_request = { filters: filter_list?, dry_run: boolean?, group_names: placement_group_string_list?, group_ids: placement_group_id_string_list? }
      class DescribePlacementGroupsResult
        attr_accessor placement_groups: placement_group_list_output
      end
      type describe_prefix_lists_request = { dry_run: boolean?, filters: filter_list?, max_results: integer?, next_token: string?, prefix_list_ids: prefix_list_resource_id_string_list? }
      class DescribePrefixListsResult
        attr_accessor next_token: string
        attr_accessor prefix_lists: prefix_list_set
      end
      type describe_principal_id_format_max_results = ::Integer
      type describe_principal_id_format_request = { dry_run: boolean?, resources: resource_list?, max_results: describe_principal_id_format_max_results?, next_token: string? }
      class DescribePrincipalIdFormatResult
        attr_accessor principals: principal_id_format_list
        attr_accessor next_token: string
      end
      type describe_public_ipv_4_pools_request = { pool_ids: public_ipv_4_pool_id_string_list?, next_token: next_token?, max_results: pool_max_results?, filters: filter_list? }
      class DescribePublicIpv4PoolsResult
        attr_accessor public_ipv_4_pools: public_ipv_4_pool_set
        attr_accessor next_token: string
      end
      type describe_regions_request = { filters: filter_list?, region_names: region_name_string_list?, dry_run: boolean?, all_regions: boolean? }
      class DescribeRegionsResult
        attr_accessor regions: region_list
      end
      type describe_replace_root_volume_tasks_max_results = ::Integer
      type describe_replace_root_volume_tasks_request = { replace_root_volume_task_ids: replace_root_volume_task_ids?, filters: filter_list?, max_results: describe_replace_root_volume_tasks_max_results?, next_token: next_token?, dry_run: boolean? }
      class DescribeReplaceRootVolumeTasksResult
        attr_accessor replace_root_volume_tasks: replace_root_volume_tasks_output
        attr_accessor next_token: string
      end
      type describe_reserved_instances_listings_request = { filters: filter_list?, reserved_instances_id: reservation_id?, reserved_instances_listing_id: reserved_instances_listing_id? }
      class DescribeReservedInstancesListingsResult
        attr_accessor reserved_instances_listings: reserved_instances_listing_list
      end
      type describe_reserved_instances_modifications_request = { filters: filter_list?, reserved_instances_modification_ids: reserved_instances_modification_id_string_list?, next_token: string? }
      class DescribeReservedInstancesModificationsResult
        attr_accessor next_token: string
        attr_accessor reserved_instances_modifications: reserved_instances_modification_list
      end
      type describe_reserved_instances_offerings_request = { availability_zone: string?, filters: filter_list?, include_marketplace: boolean?, instance_type: instance_type?, max_duration: long?, max_instance_count: integer?, min_duration: long?, offering_class: offering_class_type?, product_description: ri_product_description?, reserved_instances_offering_ids: reserved_instances_offering_id_string_list?, dry_run: boolean?, instance_tenancy: tenancy?, max_results: integer?, next_token: string?, offering_type: offering_type_values? }
      class DescribeReservedInstancesOfferingsResult
        attr_accessor reserved_instances_offerings: reserved_instances_offering_list
        attr_accessor next_token: string
      end
      type describe_reserved_instances_request = { filters: filter_list?, offering_class: offering_class_type?, reserved_instances_ids: reserved_instances_id_string_list?, dry_run: boolean?, offering_type: offering_type_values? }
      class DescribeReservedInstancesResult
        attr_accessor reserved_instances: reserved_instances_list
      end
      type describe_route_tables_max_results = ::Integer
      type describe_route_tables_request = { filters: filter_list?, dry_run: boolean?, route_table_ids: route_table_id_string_list?, next_token: string?, max_results: describe_route_tables_max_results? }
      class DescribeRouteTablesResult
        attr_accessor route_tables: route_table_list_output
        attr_accessor next_token: string
      end
      type describe_scheduled_instance_availability_max_results = ::Integer
      type describe_scheduled_instance_availability_request = { dry_run: boolean?, filters: filter_list?, first_slot_start_time_range: slot_date_time_range_request, max_results: describe_scheduled_instance_availability_max_results?, max_slot_duration_in_hours: integer?, min_slot_duration_in_hours: integer?, next_token: string?, recurrence: scheduled_instance_recurrence_request }
      class DescribeScheduledInstanceAvailabilityResult
        attr_accessor next_token: string
        attr_accessor scheduled_instance_availability_set: scheduled_instance_availability_set
      end
      type describe_scheduled_instances_request = { dry_run: boolean?, filters: filter_list?, max_results: integer?, next_token: string?, scheduled_instance_ids: scheduled_instance_id_request_set?, slot_start_time_range: slot_start_time_range_request? }
      class DescribeScheduledInstancesResult
        attr_accessor next_token: string
        attr_accessor scheduled_instance_set: scheduled_instance_set
      end
      type describe_security_group_references_request = { dry_run: boolean?, group_id: group_ids }
      class DescribeSecurityGroupReferencesResult
        attr_accessor security_group_reference_set: security_group_references
      end
      type describe_security_group_rules_max_results = ::Integer
      type describe_security_group_rules_request = { filters: filter_list?, security_group_rule_ids: security_group_rule_id_list?, dry_run: boolean?, next_token: string?, max_results: describe_security_group_rules_max_results? }
      class DescribeSecurityGroupRulesResult
        attr_accessor security_group_rules: security_group_rule_list
        attr_accessor next_token: string
      end
      type describe_security_groups_max_results = ::Integer
      type describe_security_groups_request = { filters: filter_list?, group_ids: group_id_string_list?, group_names: group_name_string_list?, dry_run: boolean?, next_token: string?, max_results: describe_security_groups_max_results? }
      class DescribeSecurityGroupsResult
        attr_accessor security_groups: security_group_list
        attr_accessor next_token: string
      end
      type describe_snapshot_attribute_request = { attribute: snapshot_attribute_name, snapshot_id: snapshot_id, dry_run: boolean? }
      class DescribeSnapshotAttributeResult
        attr_accessor create_volume_permissions: create_volume_permission_list_output
        attr_accessor product_codes: product_code_list
        attr_accessor snapshot_id: string
      end
      type describe_snapshot_tier_status_max_results = ::Integer
      type describe_snapshot_tier_status_request = { filters: filter_list?, dry_run: boolean?, next_token: string?, max_results: describe_snapshot_tier_status_max_results? }
      class DescribeSnapshotTierStatusResult
        attr_accessor snapshot_tier_statuses: snapshot_tier_status_set
        attr_accessor next_token: string
      end
      type describe_snapshots_request = { filters: filter_list?, max_results: integer?, next_token: string?, owner_ids: owner_string_list?, restorable_by_user_ids: restorable_by_string_list?, snapshot_ids: snapshot_id_string_list?, dry_run: boolean? }
      class DescribeSnapshotsResult
        attr_accessor snapshots: snapshot_list_output
        attr_accessor next_token: string
      end
      type describe_spot_datafeed_subscription_request = { dry_run: boolean? }
      class DescribeSpotDatafeedSubscriptionResult
        attr_accessor spot_datafeed_subscription: SpotDatafeedSubscription
      end
      type describe_spot_fleet_instances_max_results = ::Integer
      type describe_spot_fleet_instances_request = { dry_run: boolean?, max_results: describe_spot_fleet_instances_max_results?, next_token: string?, spot_fleet_request_id: spot_fleet_request_id }
      class DescribeSpotFleetInstancesResponse
        attr_accessor active_instances: active_instance_set
        attr_accessor next_token: string
        attr_accessor spot_fleet_request_id: string
      end
      type describe_spot_fleet_request_history_max_results = ::Integer
      type describe_spot_fleet_request_history_request = { dry_run: boolean?, event_type: event_type?, max_results: describe_spot_fleet_request_history_max_results?, next_token: string?, spot_fleet_request_id: spot_fleet_request_id, start_time: date_time }
      class DescribeSpotFleetRequestHistoryResponse
        attr_accessor history_records: history_records
        attr_accessor last_evaluated_time: date_time
        attr_accessor next_token: string
        attr_accessor spot_fleet_request_id: string
        attr_accessor start_time: date_time
      end
      type describe_spot_fleet_requests_request = { dry_run: boolean?, max_results: integer?, next_token: string?, spot_fleet_request_ids: spot_fleet_request_id_list? }
      class DescribeSpotFleetRequestsResponse
        attr_accessor next_token: string
        attr_accessor spot_fleet_request_configs: spot_fleet_request_config_set
      end
      type describe_spot_instance_requests_request = { filters: filter_list?, dry_run: boolean?, spot_instance_request_ids: spot_instance_request_id_list?, next_token: string?, max_results: integer? }
      class DescribeSpotInstanceRequestsResult
        attr_accessor spot_instance_requests: spot_instance_request_list
        attr_accessor next_token: string
      end
      type describe_spot_price_history_request = { filters: filter_list?, availability_zone: string?, dry_run: boolean?, end_time: date_time?, instance_types: instance_type_list?, max_results: integer?, next_token: string?, product_descriptions: product_description_list?, start_time: date_time? }
      class DescribeSpotPriceHistoryResult
        attr_accessor next_token: string
        attr_accessor spot_price_history: spot_price_history_list
      end
      type describe_stale_security_groups_max_results = ::Integer
      type describe_stale_security_groups_next_token = ::String
      type describe_stale_security_groups_request = { dry_run: boolean?, max_results: describe_stale_security_groups_max_results?, next_token: describe_stale_security_groups_next_token?, vpc_id: vpc_id }
      class DescribeStaleSecurityGroupsResult
        attr_accessor next_token: string
        attr_accessor stale_security_group_set: stale_security_group_set
      end
      type describe_store_image_tasks_request = { image_ids: image_id_list?, dry_run: boolean?, filters: filter_list?, next_token: string?, max_results: describe_store_image_tasks_request_max_results? }
      type describe_store_image_tasks_request_max_results = ::Integer
      class DescribeStoreImageTasksResult
        attr_accessor store_image_task_results: store_image_task_result_set
        attr_accessor next_token: string
      end
      type describe_subnets_max_results = ::Integer
      type describe_subnets_request = { filters: filter_list?, subnet_ids: subnet_id_string_list?, dry_run: boolean?, next_token: string?, max_results: describe_subnets_max_results? }
      class DescribeSubnetsResult
        attr_accessor subnets: subnet_list_output
        attr_accessor next_token: string
      end
      type describe_tags_request = { dry_run: boolean?, filters: filter_list?, max_results: integer?, next_token: string? }
      class DescribeTagsResult
        attr_accessor next_token: string
        attr_accessor tags: tag_description_list
      end
      type describe_traffic_mirror_filters_request = { traffic_mirror_filter_ids: traffic_mirror_filter_id_list?, dry_run: boolean?, filters: filter_list?, max_results: traffic_mirroring_max_results?, next_token: next_token? }
      class DescribeTrafficMirrorFiltersResult
        attr_accessor traffic_mirror_filters: traffic_mirror_filter_set_output
        attr_accessor next_token: string
      end
      type describe_traffic_mirror_sessions_request = { traffic_mirror_session_ids: traffic_mirror_session_id_list?, dry_run: boolean?, filters: filter_list?, max_results: traffic_mirroring_max_results?, next_token: next_token? }
      class DescribeTrafficMirrorSessionsResult
        attr_accessor traffic_mirror_sessions: traffic_mirror_session_set_output
        attr_accessor next_token: string
      end
      type describe_traffic_mirror_targets_request = { traffic_mirror_target_ids: traffic_mirror_target_id_list?, dry_run: boolean?, filters: filter_list?, max_results: traffic_mirroring_max_results?, next_token: next_token? }
      class DescribeTrafficMirrorTargetsResult
        attr_accessor traffic_mirror_targets: traffic_mirror_target_set_output
        attr_accessor next_token: string
      end
      type describe_transit_gateway_attachments_request = { transit_gateway_attachment_ids: transit_gateway_attachment_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewayAttachmentsResult
        attr_accessor transit_gateway_attachments: transit_gateway_attachment_list
        attr_accessor next_token: string
      end
      type describe_transit_gateway_connect_peers_request = { transit_gateway_connect_peer_ids: transit_gateway_connect_peer_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewayConnectPeersResult
        attr_accessor transit_gateway_connect_peers: transit_gateway_connect_peer_list_output
        attr_accessor next_token: string
      end
      type describe_transit_gateway_connects_request = { transit_gateway_attachment_ids: transit_gateway_attachment_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewayConnectsResult
        attr_accessor transit_gateway_connects: transit_gateway_connect_list_output
        attr_accessor next_token: string
      end
      type describe_transit_gateway_multicast_domains_request = { transit_gateway_multicast_domain_ids: transit_gateway_multicast_domain_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewayMulticastDomainsResult
        attr_accessor transit_gateway_multicast_domains: transit_gateway_multicast_domain_list_output
        attr_accessor next_token: string
      end
      type describe_transit_gateway_peering_attachments_request = { transit_gateway_attachment_ids: transit_gateway_attachment_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewayPeeringAttachmentsResult
        attr_accessor transit_gateway_peering_attachments: transit_gateway_peering_attachment_list_output
        attr_accessor next_token: string
      end
      type describe_transit_gateway_policy_tables_request = { transit_gateway_policy_table_ids: transit_gateway_policy_table_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewayPolicyTablesResult
        attr_accessor transit_gateway_policy_tables: transit_gateway_policy_table_list_output
        attr_accessor next_token: string
      end
      type describe_transit_gateway_route_table_announcements_request = { transit_gateway_route_table_announcement_ids: transit_gateway_route_table_announcement_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewayRouteTableAnnouncementsResult
        attr_accessor transit_gateway_route_table_announcements: transit_gateway_route_table_announcement_list_output
        attr_accessor next_token: string
      end
      type describe_transit_gateway_route_tables_request = { transit_gateway_route_table_ids: transit_gateway_route_table_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewayRouteTablesResult
        attr_accessor transit_gateway_route_tables: transit_gateway_route_table_list_output
        attr_accessor next_token: string
      end
      type describe_transit_gateway_vpc_attachments_request = { transit_gateway_attachment_ids: transit_gateway_attachment_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewayVpcAttachmentsResult
        attr_accessor transit_gateway_vpc_attachments: transit_gateway_vpc_attachment_list_output
        attr_accessor next_token: string
      end
      type describe_transit_gateways_request = { transit_gateway_ids: transit_gateway_id_string_list?, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class DescribeTransitGatewaysResult
        attr_accessor transit_gateways: transit_gateway_list_output
        attr_accessor next_token: string
      end
      type describe_trunk_interface_associations_max_results = ::Integer
      type describe_trunk_interface_associations_request = { association_ids: trunk_interface_association_id_list?, dry_run: boolean?, filters: filter_list?, next_token: string?, max_results: describe_trunk_interface_associations_max_results? }
      class DescribeTrunkInterfaceAssociationsResult
        attr_accessor interface_associations: trunk_interface_association_list_output
        attr_accessor next_token: string
      end
      type describe_verified_access_endpoints_max_results = ::Integer
      type describe_verified_access_endpoints_request = { verified_access_endpoint_ids: verified_access_endpoint_id_list?, verified_access_instance_id: verified_access_instance_id?, verified_access_group_id: verified_access_group_id?, max_results: describe_verified_access_endpoints_max_results?, next_token: next_token?, filters: filter_list?, dry_run: boolean? }
      class DescribeVerifiedAccessEndpointsResult
        attr_accessor verified_access_endpoints: verified_access_endpoint_list_output
        attr_accessor next_token: next_token
      end
      type describe_verified_access_group_max_results = ::Integer
      type describe_verified_access_groups_request = { verified_access_group_ids: verified_access_group_id_list?, verified_access_instance_id: verified_access_instance_id?, max_results: describe_verified_access_group_max_results?, next_token: next_token?, filters: filter_list?, dry_run: boolean? }
      class DescribeVerifiedAccessGroupsResult
        attr_accessor verified_access_groups: verified_access_group_list_output
        attr_accessor next_token: next_token
      end
      type describe_verified_access_instance_logging_configurations_max_results = ::Integer
      type describe_verified_access_instance_logging_configurations_request = { verified_access_instance_ids: verified_access_instance_id_list?, max_results: describe_verified_access_instance_logging_configurations_max_results?, next_token: next_token?, filters: filter_list?, dry_run: boolean? }
      class DescribeVerifiedAccessInstanceLoggingConfigurationsResult
        attr_accessor logging_configurations: verified_access_instance_logging_configuration_list_output
        attr_accessor next_token: next_token
      end
      type describe_verified_access_instances_max_results = ::Integer
      type describe_verified_access_instances_request = { verified_access_instance_ids: verified_access_instance_id_list?, max_results: describe_verified_access_instances_max_results?, next_token: next_token?, filters: filter_list?, dry_run: boolean? }
      class DescribeVerifiedAccessInstancesResult
        attr_accessor verified_access_instances: verified_access_instance_list_output
        attr_accessor next_token: next_token
      end
      type describe_verified_access_trust_providers_max_results = ::Integer
      type describe_verified_access_trust_providers_request = { verified_access_trust_provider_ids: verified_access_trust_provider_id_list?, max_results: describe_verified_access_trust_providers_max_results?, next_token: next_token?, filters: filter_list?, dry_run: boolean? }
      class DescribeVerifiedAccessTrustProvidersResult
        attr_accessor verified_access_trust_providers: verified_access_trust_provider_list_output
        attr_accessor next_token: next_token
      end
      type describe_volume_attribute_request = { attribute: volume_attribute_name, volume_id: volume_id, dry_run: boolean? }
      class DescribeVolumeAttributeResult
        attr_accessor auto_enable_io: AttributeBooleanValue
        attr_accessor product_codes: product_code_list
        attr_accessor volume_id: string
      end
      type describe_volume_status_request = { filters: filter_list?, max_results: integer?, next_token: string?, volume_ids: volume_id_string_list?, dry_run: boolean? }
      class DescribeVolumeStatusResult
        attr_accessor next_token: string
        attr_accessor volume_statuses: volume_status_list
      end
      type describe_volumes_modifications_request = { dry_run: boolean?, volume_ids: volume_id_string_list?, filters: filter_list?, next_token: string?, max_results: integer? }
      class DescribeVolumesModificationsResult
        attr_accessor volumes_modifications: volume_modification_list_output
        attr_accessor next_token: string
      end
      type describe_volumes_request = { filters: filter_list?, volume_ids: volume_id_string_list?, dry_run: boolean?, max_results: integer?, next_token: string? }
      class DescribeVolumesResult
        attr_accessor volumes: volume_list_output
        attr_accessor next_token: string
      end
      type describe_vpc_attribute_request = { attribute: vpc_attribute_name, vpc_id: vpc_id, dry_run: boolean? }
      class DescribeVpcAttributeResult
        attr_accessor vpc_id: string
        attr_accessor enable_dns_hostnames: AttributeBooleanValue
        attr_accessor enable_dns_support: AttributeBooleanValue
        attr_accessor enable_network_address_usage_metrics: AttributeBooleanValue
      end
      type describe_vpc_classic_link_dns_support_max_results = ::Integer
      type describe_vpc_classic_link_dns_support_next_token = ::String
      type describe_vpc_classic_link_dns_support_request = { max_results: describe_vpc_classic_link_dns_support_max_results?, next_token: describe_vpc_classic_link_dns_support_next_token?, vpc_ids: vpc_classic_link_id_list? }
      class DescribeVpcClassicLinkDnsSupportResult
        attr_accessor next_token: describe_vpc_classic_link_dns_support_next_token
        attr_accessor vpcs: classic_link_dns_support_list
      end
      type describe_vpc_classic_link_request = { filters: filter_list?, dry_run: boolean?, vpc_ids: vpc_classic_link_id_list? }
      class DescribeVpcClassicLinkResult
        attr_accessor vpcs: vpc_classic_link_list
      end
      type describe_vpc_endpoint_connection_notifications_request = { dry_run: boolean?, connection_notification_id: connection_notification_id?, filters: filter_list?, max_results: integer?, next_token: string? }
      class DescribeVpcEndpointConnectionNotificationsResult
        attr_accessor connection_notification_set: connection_notification_set_output
        attr_accessor next_token: string
      end
      type describe_vpc_endpoint_connections_request = { dry_run: boolean?, filters: filter_list?, max_results: integer?, next_token: string? }
      class DescribeVpcEndpointConnectionsResult
        attr_accessor vpc_endpoint_connections: vpc_endpoint_connection_set
        attr_accessor next_token: string
      end
      type describe_vpc_endpoint_service_configurations_request = { dry_run: boolean?, service_ids: vpc_endpoint_service_id_list?, filters: filter_list?, max_results: integer?, next_token: string? }
      class DescribeVpcEndpointServiceConfigurationsResult
        attr_accessor service_configurations: service_configuration_set_output
        attr_accessor next_token: string
      end
      type describe_vpc_endpoint_service_permissions_request = { dry_run: boolean?, service_id: vpc_endpoint_service_id, filters: filter_list?, max_results: integer?, next_token: string? }
      class DescribeVpcEndpointServicePermissionsResult
        attr_accessor allowed_principals: allowed_principal_set
        attr_accessor next_token: string
      end
      type describe_vpc_endpoint_services_request = { dry_run: boolean?, service_names: value_string_list?, filters: filter_list?, max_results: integer?, next_token: string? }
      class DescribeVpcEndpointServicesResult
        attr_accessor service_names: value_string_list
        attr_accessor service_details: service_detail_set
        attr_accessor next_token: string
      end
      type describe_vpc_endpoints_request = { dry_run: boolean?, vpc_endpoint_ids: vpc_endpoint_id_list?, filters: filter_list?, max_results: integer?, next_token: string? }
      class DescribeVpcEndpointsResult
        attr_accessor vpc_endpoints: vpc_endpoint_set_output
        attr_accessor next_token: string
      end
      type describe_vpc_peering_connections_max_results = ::Integer
      type describe_vpc_peering_connections_request = { filters: filter_list?, dry_run: boolean?, vpc_peering_connection_ids: vpc_peering_connection_id_list?, next_token: string?, max_results: describe_vpc_peering_connections_max_results? }
      class DescribeVpcPeeringConnectionsResult
        attr_accessor vpc_peering_connections: vpc_peering_connection_list_output
        attr_accessor next_token: string
      end
      type describe_vpcs_max_results = ::Integer
      type describe_vpcs_request = { filters: filter_list?, vpc_ids: vpc_id_string_list?, dry_run: boolean?, next_token: string?, max_results: describe_vpcs_max_results? }
      class DescribeVpcsResult
        attr_accessor vpcs: vpc_list_output
        attr_accessor next_token: string
      end
      type describe_vpn_connections_request = { filters: filter_list?, vpn_connection_ids: vpn_connection_id_string_list?, dry_run: boolean? }
      class DescribeVpnConnectionsResult
        attr_accessor vpn_connections: vpn_connection_list_output
      end
      type describe_vpn_gateways_request = { filters: filter_list?, vpn_gateway_ids: vpn_gateway_id_string_list?, dry_run: boolean? }
      class DescribeVpnGatewaysResult
        attr_accessor vpn_gateways: vpn_gateway_list_output
      end
      type destination_file_format = ("plain-text" | "parquet")
      type destination_options_request = { file_format: destination_file_format?, hive_compatible_partitions: boolean?, per_hour_partition: boolean? }
      class DestinationOptionsResponse
        attr_accessor file_format: destination_file_format
        attr_accessor hive_compatible_partitions: boolean
        attr_accessor per_hour_partition: boolean
      end
      type detach_classic_link_vpc_request = { dry_run: boolean?, instance_id: instance_id, vpc_id: vpc_id }
      class DetachClassicLinkVpcResult
        attr_accessor return: boolean
      end
      type detach_internet_gateway_request = { dry_run: boolean?, internet_gateway_id: internet_gateway_id, vpc_id: vpc_id }
      type detach_network_interface_request = { attachment_id: network_interface_attachment_id, dry_run: boolean?, force: boolean? }
      type detach_verified_access_trust_provider_request = { verified_access_instance_id: verified_access_instance_id, verified_access_trust_provider_id: verified_access_trust_provider_id, client_token: string?, dry_run: boolean? }
      class DetachVerifiedAccessTrustProviderResult
        attr_accessor verified_access_trust_provider: VerifiedAccessTrustProvider
        attr_accessor verified_access_instance: VerifiedAccessInstance
      end
      type detach_volume_request = { device: string?, force: boolean?, instance_id: instance_id_for_resolver?, volume_id: volume_id_with_resolver, dry_run: boolean? }
      type detach_vpn_gateway_request = { vpc_id: vpc_id, vpn_gateway_id: vpn_gateway_id, dry_run: boolean? }
      class DeviceOptions
        attr_accessor tenant_id: string
      end
      type device_trust_provider_type = ("jamf" | "crowdstrike")
      type device_type = ("ebs" | "instance-store")
      class DhcpConfiguration
        attr_accessor key: string
        attr_accessor values: dhcp_configuration_value_list_output
      end
      type dhcp_configuration_list = ::Array[DhcpConfiguration]
      type dhcp_configuration_value_list_output = ::Array[AttributeValue]
      class DhcpOptions
        attr_accessor dhcp_configurations: dhcp_configuration_list
        attr_accessor dhcp_options_id: string
        attr_accessor owner_id: string
        attr_accessor tags: tag_list_output
      end
      type dhcp_options_id = ::String
      type dhcp_options_id_string_list = ::Array[dhcp_options_id]
      type dhcp_options_list_output = ::Array[DhcpOptions]
      class DirectoryServiceAuthentication
        attr_accessor directory_id: string
      end
      type directory_service_authentication_request = { directory_id: string? }
      type disable_address_transfer_request = { allocation_id: allocation_id, dry_run: boolean? }
      class DisableAddressTransferResult
        attr_accessor address_transfer: AddressTransfer
      end
      type disable_aws_network_performance_metric_subscription_request = { source: string?, destination: string?, metric: metric_type?, statistic: statistic_type?, dry_run: boolean? }
      class DisableAwsNetworkPerformanceMetricSubscriptionResult
        attr_accessor output: boolean
      end
      type disable_ebs_encryption_by_default_request = { dry_run: boolean? }
      class DisableEbsEncryptionByDefaultResult
        attr_accessor ebs_encryption_by_default: boolean
      end
      type disable_fast_launch_request = { image_id: image_id, force: boolean?, dry_run: boolean? }
      class DisableFastLaunchResult
        attr_accessor image_id: image_id
        attr_accessor resource_type: fast_launch_resource_type
        attr_accessor snapshot_configuration: FastLaunchSnapshotConfigurationResponse
        attr_accessor launch_template: FastLaunchLaunchTemplateSpecificationResponse
        attr_accessor max_parallel_launches: integer
        attr_accessor owner_id: string
        attr_accessor state: fast_launch_state_code
        attr_accessor state_transition_reason: string
        attr_accessor state_transition_time: millisecond_date_time
      end
      class DisableFastSnapshotRestoreErrorItem
        attr_accessor snapshot_id: string
        attr_accessor fast_snapshot_restore_state_errors: disable_fast_snapshot_restore_state_error_set
      end
      type disable_fast_snapshot_restore_error_set = ::Array[DisableFastSnapshotRestoreErrorItem]
      class DisableFastSnapshotRestoreStateError
        attr_accessor code: string
        attr_accessor message: string
      end
      class DisableFastSnapshotRestoreStateErrorItem
        attr_accessor availability_zone: string
        attr_accessor error: DisableFastSnapshotRestoreStateError
      end
      type disable_fast_snapshot_restore_state_error_set = ::Array[DisableFastSnapshotRestoreStateErrorItem]
      class DisableFastSnapshotRestoreSuccessItem
        attr_accessor snapshot_id: string
        attr_accessor availability_zone: string
        attr_accessor state: fast_snapshot_restore_state_code
        attr_accessor state_transition_reason: string
        attr_accessor owner_id: string
        attr_accessor owner_alias: string
        attr_accessor enabling_time: millisecond_date_time
        attr_accessor optimizing_time: millisecond_date_time
        attr_accessor enabled_time: millisecond_date_time
        attr_accessor disabling_time: millisecond_date_time
        attr_accessor disabled_time: millisecond_date_time
      end
      type disable_fast_snapshot_restore_success_set = ::Array[DisableFastSnapshotRestoreSuccessItem]
      type disable_fast_snapshot_restores_request = { availability_zones: availability_zone_string_list, source_snapshot_ids: snapshot_id_string_list, dry_run: boolean? }
      class DisableFastSnapshotRestoresResult
        attr_accessor successful: disable_fast_snapshot_restore_success_set
        attr_accessor unsuccessful: disable_fast_snapshot_restore_error_set
      end
      type disable_image_deprecation_request = { image_id: image_id, dry_run: boolean? }
      class DisableImageDeprecationResult
        attr_accessor return: boolean
      end
      type disable_ipam_organization_admin_account_request = { dry_run: boolean?, delegated_admin_account_id: string }
      class DisableIpamOrganizationAdminAccountResult
        attr_accessor success: boolean
      end
      type disable_serial_console_access_request = { dry_run: boolean? }
      class DisableSerialConsoleAccessResult
        attr_accessor serial_console_access_enabled: boolean
      end
      type disable_transit_gateway_route_table_propagation_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, transit_gateway_attachment_id: transit_gateway_attachment_id?, dry_run: boolean?, transit_gateway_route_table_announcement_id: transit_gateway_route_table_announcement_id? }
      class DisableTransitGatewayRouteTablePropagationResult
        attr_accessor propagation: TransitGatewayPropagation
      end
      type disable_vgw_route_propagation_request = { gateway_id: vpn_gateway_id, route_table_id: route_table_id, dry_run: boolean? }
      type disable_vpc_classic_link_dns_support_request = { vpc_id: vpc_id? }
      class DisableVpcClassicLinkDnsSupportResult
        attr_accessor return: boolean
      end
      type disable_vpc_classic_link_request = { dry_run: boolean?, vpc_id: vpc_id }
      class DisableVpcClassicLinkResult
        attr_accessor return: boolean
      end
      type disassociate_address_request = { association_id: elastic_ip_association_id?, public_ip: eip_allocation_public_ip?, dry_run: boolean? }
      type disassociate_client_vpn_target_network_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, association_id: client_vpn_association_id, dry_run: boolean? }
      class DisassociateClientVpnTargetNetworkResult
        attr_accessor association_id: string
        attr_accessor status: AssociationStatus
      end
      type disassociate_enclave_certificate_iam_role_request = { certificate_arn: certificate_id, role_arn: role_id, dry_run: boolean? }
      class DisassociateEnclaveCertificateIamRoleResult
        attr_accessor return: boolean
      end
      type disassociate_iam_instance_profile_request = { association_id: iam_instance_profile_association_id }
      class DisassociateIamInstanceProfileResult
        attr_accessor iam_instance_profile_association: IamInstanceProfileAssociation
      end
      type disassociate_instance_event_window_request = { dry_run: boolean?, instance_event_window_id: instance_event_window_id, association_target: instance_event_window_disassociation_request }
      class DisassociateInstanceEventWindowResult
        attr_accessor instance_event_window: InstanceEventWindow
      end
      type disassociate_ipam_resource_discovery_request = { dry_run: boolean?, ipam_resource_discovery_association_id: ipam_resource_discovery_association_id }
      class DisassociateIpamResourceDiscoveryResult
        attr_accessor ipam_resource_discovery_association: IpamResourceDiscoveryAssociation
      end
      type disassociate_nat_gateway_address_request = { nat_gateway_id: nat_gateway_id, association_ids: eip_association_id_list, max_drain_duration_seconds: drain_seconds?, dry_run: boolean? }
      class DisassociateNatGatewayAddressResult
        attr_accessor nat_gateway_id: nat_gateway_id
        attr_accessor nat_gateway_addresses: nat_gateway_address_list
      end
      type disassociate_route_table_request = { association_id: route_table_association_id, dry_run: boolean? }
      type disassociate_subnet_cidr_block_request = { association_id: subnet_cidr_association_id }
      class DisassociateSubnetCidrBlockResult
        attr_accessor ipv_6_cidr_block_association: SubnetIpv6CidrBlockAssociation
        attr_accessor subnet_id: string
      end
      type disassociate_transit_gateway_multicast_domain_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id, transit_gateway_attachment_id: transit_gateway_attachment_id, subnet_ids: transit_gateway_subnet_id_list, dry_run: boolean? }
      class DisassociateTransitGatewayMulticastDomainResult
        attr_accessor associations: TransitGatewayMulticastDomainAssociations
      end
      type disassociate_transit_gateway_policy_table_request = { transit_gateway_policy_table_id: transit_gateway_policy_table_id, transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class DisassociateTransitGatewayPolicyTableResult
        attr_accessor association: TransitGatewayPolicyTableAssociation
      end
      type disassociate_transit_gateway_route_table_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class DisassociateTransitGatewayRouteTableResult
        attr_accessor association: TransitGatewayAssociation
      end
      type disassociate_trunk_interface_request = { association_id: trunk_interface_association_id, client_token: string?, dry_run: boolean? }
      class DisassociateTrunkInterfaceResult
        attr_accessor return: boolean
        attr_accessor client_token: string
      end
      type disassociate_vpc_cidr_block_request = { association_id: vpc_cidr_association_id }
      class DisassociateVpcCidrBlockResult
        attr_accessor ipv_6_cidr_block_association: VpcIpv6CidrBlockAssociation
        attr_accessor cidr_block_association: VpcCidrBlockAssociation
        attr_accessor vpc_id: string
      end
      type disk_count = ::Integer
      type disk_image = { description: string?, image: disk_image_detail?, volume: volume_detail? }
      class DiskImageDescription
        attr_accessor checksum: string
        attr_accessor format: disk_image_format
        attr_accessor import_manifest_url: import_manifest_url
        attr_accessor size: long
      end
      type disk_image_detail = { bytes: long, format: disk_image_format, import_manifest_url: import_manifest_url }
      type disk_image_format = ("VMDK" | "RAW" | "VHD")
      type disk_image_list = ::Array[disk_image]
      class DiskImageVolumeDescription
        attr_accessor id: string
        attr_accessor size: long
      end
      class DiskInfo
        attr_accessor size_in_gb: disk_size
        attr_accessor count: disk_count
        attr_accessor type_: disk_type
      end
      type disk_info_list = ::Array[DiskInfo]
      type disk_size = ::Integer
      type disk_type = ("hdd" | "ssd")
      class DnsEntry
        attr_accessor dns_name: string
        attr_accessor hosted_zone_id: string
      end
      type dns_entry_set = ::Array[DnsEntry]
      type dns_name_state = ("pendingVerification" | "verified" | "failed")
      class DnsOptions
        attr_accessor dns_record_ip_type: dns_record_ip_type
        attr_accessor private_dns_only_for_inbound_resolver_endpoint: boolean
      end
      type dns_options_specification = { dns_record_ip_type: dns_record_ip_type?, private_dns_only_for_inbound_resolver_endpoint: boolean? }
      type dns_record_ip_type = ("ipv4" | "dualstack" | "ipv6" | "service-defined")
      type dns_servers_options_modify_structure = { custom_dns_servers: value_string_list?, enabled: boolean? }
      type dns_support_value = ("enable" | "disable")
      type domain_type = ("vpc" | "standard")
      type double = ::Float
      type double_with_constraints = ::Float
      type drain_seconds = ::Integer
      type dynamic_routing_value = ("enable" | "disable")
      type ebs_block_device = { delete_on_termination: boolean?, iops: integer?, snapshot_id: snapshot_id?, volume_size: integer?, volume_type: volume_type?, kms_key_id: string?, throughput: integer?, outpost_arn: string?, encrypted: boolean? }
      class EbsBlockDevice
        attr_accessor delete_on_termination: boolean
        attr_accessor iops: integer
        attr_accessor snapshot_id: snapshot_id
        attr_accessor volume_size: integer
        attr_accessor volume_type: volume_type
        attr_accessor kms_key_id: string
        attr_accessor throughput: integer
        attr_accessor outpost_arn: string
        attr_accessor encrypted: boolean
      end
      type ebs_encryption_support = ("unsupported" | "supported")
      class EbsInfo
        attr_accessor ebs_optimized_support: ebs_optimized_support
        attr_accessor encryption_support: ebs_encryption_support
        attr_accessor ebs_optimized_info: EbsOptimizedInfo
        attr_accessor nvme_support: ebs_nvme_support
      end
      class EbsInstanceBlockDevice
        attr_accessor attach_time: date_time
        attr_accessor delete_on_termination: boolean
        attr_accessor status: attachment_status
        attr_accessor volume_id: string
      end
      type ebs_instance_block_device_specification = { delete_on_termination: boolean?, volume_id: volume_id? }
      type ebs_nvme_support = ("unsupported" | "supported" | "required")
      class EbsOptimizedInfo
        attr_accessor baseline_bandwidth_in_mbps: baseline_bandwidth_in_mbps
        attr_accessor baseline_throughput_in_m_bps: baseline_throughput_in_m_bps
        attr_accessor baseline_iops: baseline_iops
        attr_accessor maximum_bandwidth_in_mbps: maximum_bandwidth_in_mbps
        attr_accessor maximum_throughput_in_m_bps: maximum_throughput_in_m_bps
        attr_accessor maximum_iops: maximum_iops
      end
      type ebs_optimized_support = ("unsupported" | "supported" | "default")
      class EfaInfo
        attr_accessor maximum_efa_interfaces: maximum_efa_interfaces
      end
      type efa_supported_flag = bool
      class EgressOnlyInternetGateway
        attr_accessor attachments: internet_gateway_attachment_list
        attr_accessor egress_only_internet_gateway_id: egress_only_internet_gateway_id
        attr_accessor tags: tag_list_output
      end
      type egress_only_internet_gateway_id = ::String
      type egress_only_internet_gateway_id_list = ::Array[egress_only_internet_gateway_id]
      type egress_only_internet_gateway_list_output = ::Array[EgressOnlyInternetGateway]
      type eip_allocation_public_ip = ::String
      type eip_association_id_list = ::Array[elastic_ip_association_id]
      class ElasticGpuAssociation
        attr_accessor elastic_gpu_id: elastic_gpu_id
        attr_accessor elastic_gpu_association_id: string
        attr_accessor elastic_gpu_association_state: string
        attr_accessor elastic_gpu_association_time: string
      end
      type elastic_gpu_association_list = ::Array[ElasticGpuAssociation]
      class ElasticGpuHealth
        attr_accessor status: elastic_gpu_status
      end
      type elastic_gpu_id = ::String
      type elastic_gpu_id_set = ::Array[elastic_gpu_id]
      type elastic_gpu_set = ::Array[ElasticGpus]
      type elastic_gpu_specification = { type: string }
      type elastic_gpu_specification_list_input = ::Array[elastic_gpu_specification]
      class ElasticGpuSpecificationResponse
        attr_accessor type_: string
      end
      type elastic_gpu_specification_response_list = ::Array[ElasticGpuSpecificationResponse]
      type elastic_gpu_specifications_input = ::Array[elastic_gpu_specification]
      type elastic_gpu_state = ("ATTACHED")
      type elastic_gpu_status = ("OK" | "IMPAIRED")
      class ElasticGpus
        attr_accessor elastic_gpu_id: string
        attr_accessor availability_zone: string
        attr_accessor elastic_gpu_type: string
        attr_accessor elastic_gpu_health: ElasticGpuHealth
        attr_accessor elastic_gpu_state: elastic_gpu_state
        attr_accessor instance_id: string
        attr_accessor tags: tag_list_output
      end
      type elastic_inference_accelerator = { type: string, count: elastic_inference_accelerator_count? }
      class ElasticInferenceAcceleratorAssociation
        attr_accessor elastic_inference_accelerator_arn: string
        attr_accessor elastic_inference_accelerator_association_id: string
        attr_accessor elastic_inference_accelerator_association_state: string
        attr_accessor elastic_inference_accelerator_association_time: date_time
      end
      type elastic_inference_accelerator_association_list = ::Array[ElasticInferenceAcceleratorAssociation]
      type elastic_inference_accelerator_count = ::Integer
      type elastic_inference_accelerators = ::Array[elastic_inference_accelerator]
      type elastic_ip_association_id = ::String
      type ena_srd_specification = { ena_srd_enabled: boolean?, ena_srd_udp_specification: ena_srd_udp_specification? }
      type ena_srd_supported = bool
      type ena_srd_udp_specification = { ena_srd_udp_enabled: boolean? }
      type ena_support = ("unsupported" | "supported" | "required")
      type enable_address_transfer_request = { allocation_id: allocation_id, transfer_account_id: string, dry_run: boolean? }
      class EnableAddressTransferResult
        attr_accessor address_transfer: AddressTransfer
      end
      type enable_aws_network_performance_metric_subscription_request = { source: string?, destination: string?, metric: metric_type?, statistic: statistic_type?, dry_run: boolean? }
      class EnableAwsNetworkPerformanceMetricSubscriptionResult
        attr_accessor output: boolean
      end
      type enable_ebs_encryption_by_default_request = { dry_run: boolean? }
      class EnableEbsEncryptionByDefaultResult
        attr_accessor ebs_encryption_by_default: boolean
      end
      type enable_fast_launch_request = { image_id: image_id, resource_type: string?, snapshot_configuration: fast_launch_snapshot_configuration_request?, launch_template: fast_launch_launch_template_specification_request?, max_parallel_launches: integer?, dry_run: boolean? }
      class EnableFastLaunchResult
        attr_accessor image_id: image_id
        attr_accessor resource_type: fast_launch_resource_type
        attr_accessor snapshot_configuration: FastLaunchSnapshotConfigurationResponse
        attr_accessor launch_template: FastLaunchLaunchTemplateSpecificationResponse
        attr_accessor max_parallel_launches: integer
        attr_accessor owner_id: string
        attr_accessor state: fast_launch_state_code
        attr_accessor state_transition_reason: string
        attr_accessor state_transition_time: millisecond_date_time
      end
      class EnableFastSnapshotRestoreErrorItem
        attr_accessor snapshot_id: string
        attr_accessor fast_snapshot_restore_state_errors: enable_fast_snapshot_restore_state_error_set
      end
      type enable_fast_snapshot_restore_error_set = ::Array[EnableFastSnapshotRestoreErrorItem]
      class EnableFastSnapshotRestoreStateError
        attr_accessor code: string
        attr_accessor message: string
      end
      class EnableFastSnapshotRestoreStateErrorItem
        attr_accessor availability_zone: string
        attr_accessor error: EnableFastSnapshotRestoreStateError
      end
      type enable_fast_snapshot_restore_state_error_set = ::Array[EnableFastSnapshotRestoreStateErrorItem]
      class EnableFastSnapshotRestoreSuccessItem
        attr_accessor snapshot_id: string
        attr_accessor availability_zone: string
        attr_accessor state: fast_snapshot_restore_state_code
        attr_accessor state_transition_reason: string
        attr_accessor owner_id: string
        attr_accessor owner_alias: string
        attr_accessor enabling_time: millisecond_date_time
        attr_accessor optimizing_time: millisecond_date_time
        attr_accessor enabled_time: millisecond_date_time
        attr_accessor disabling_time: millisecond_date_time
        attr_accessor disabled_time: millisecond_date_time
      end
      type enable_fast_snapshot_restore_success_set = ::Array[EnableFastSnapshotRestoreSuccessItem]
      type enable_fast_snapshot_restores_request = { availability_zones: availability_zone_string_list, source_snapshot_ids: snapshot_id_string_list, dry_run: boolean? }
      class EnableFastSnapshotRestoresResult
        attr_accessor successful: enable_fast_snapshot_restore_success_set
        attr_accessor unsuccessful: enable_fast_snapshot_restore_error_set
      end
      type enable_image_deprecation_request = { image_id: image_id, deprecate_at: millisecond_date_time, dry_run: boolean? }
      class EnableImageDeprecationResult
        attr_accessor return: boolean
      end
      type enable_ipam_organization_admin_account_request = { dry_run: boolean?, delegated_admin_account_id: string }
      class EnableIpamOrganizationAdminAccountResult
        attr_accessor success: boolean
      end
      type enable_reachability_analyzer_organization_sharing_request = { dry_run: boolean? }
      class EnableReachabilityAnalyzerOrganizationSharingResult
        attr_accessor return_value: boolean
      end
      type enable_serial_console_access_request = { dry_run: boolean? }
      class EnableSerialConsoleAccessResult
        attr_accessor serial_console_access_enabled: boolean
      end
      type enable_transit_gateway_route_table_propagation_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, transit_gateway_attachment_id: transit_gateway_attachment_id?, dry_run: boolean?, transit_gateway_route_table_announcement_id: transit_gateway_route_table_announcement_id? }
      class EnableTransitGatewayRouteTablePropagationResult
        attr_accessor propagation: TransitGatewayPropagation
      end
      type enable_vgw_route_propagation_request = { gateway_id: vpn_gateway_id, route_table_id: route_table_id, dry_run: boolean? }
      type enable_volume_io_request = { dry_run: boolean?, volume_id: volume_id }
      type enable_vpc_classic_link_dns_support_request = { vpc_id: vpc_id? }
      class EnableVpcClassicLinkDnsSupportResult
        attr_accessor return: boolean
      end
      type enable_vpc_classic_link_request = { dry_run: boolean?, vpc_id: vpc_id }
      class EnableVpcClassicLinkResult
        attr_accessor return: boolean
      end
      class EnclaveOptions
        attr_accessor enabled: boolean
      end
      type enclave_options_request = { enabled: boolean? }
      type encryption_in_transit_supported = bool
      type end_date_type = ("unlimited" | "limited")
      type endpoint_set = ::Array[ClientVpnEndpoint]
      type ephemeral_nvme_support = ("unsupported" | "supported" | "required")
      type error_set = ::Array[ValidationError]
      type event_code = ("instance-reboot" | "system-reboot" | "system-maintenance" | "instance-retirement" | "instance-stop")
      class EventInformation
        attr_accessor event_description: string
        attr_accessor event_sub_type: string
        attr_accessor instance_id: string
      end
      type event_type = ("instanceChange" | "fleetRequestChange" | "error" | "information")
      type excess_capacity_termination_policy = ("noTermination" | "default")
      type excluded_instance_type = ::String
      type excluded_instance_type_set = ::Array[excluded_instance_type]
      type executable_by_string_list = ::Array[string]
      class Explanation
        attr_accessor acl: AnalysisComponent
        attr_accessor acl_rule: AnalysisAclRule
        attr_accessor address: ip_address
        attr_accessor addresses: ip_address_list
        attr_accessor attached_to: AnalysisComponent
        attr_accessor availability_zones: value_string_list
        attr_accessor cidrs: value_string_list
        attr_accessor component: AnalysisComponent
        attr_accessor customer_gateway: AnalysisComponent
        attr_accessor destination: AnalysisComponent
        attr_accessor destination_vpc: AnalysisComponent
        attr_accessor direction: string
        attr_accessor explanation_code: string
        attr_accessor ingress_route_table: AnalysisComponent
        attr_accessor internet_gateway: AnalysisComponent
        attr_accessor load_balancer_arn: resource_arn
        attr_accessor classic_load_balancer_listener: AnalysisLoadBalancerListener
        attr_accessor load_balancer_listener_port: port
        attr_accessor load_balancer_target: AnalysisLoadBalancerTarget
        attr_accessor load_balancer_target_group: AnalysisComponent
        attr_accessor load_balancer_target_groups: analysis_component_list_output
        attr_accessor load_balancer_target_port: port
        attr_accessor elastic_load_balancer_listener: AnalysisComponent
        attr_accessor missing_component: string
        attr_accessor nat_gateway: AnalysisComponent
        attr_accessor network_interface: AnalysisComponent
        attr_accessor packet_field: string
        attr_accessor vpc_peering_connection: AnalysisComponent
        attr_accessor port: port
        attr_accessor port_ranges: port_range_list_output
        attr_accessor prefix_list: AnalysisComponent
        attr_accessor protocols: string_list
        attr_accessor route_table_route: AnalysisRouteTableRoute
        attr_accessor route_table: AnalysisComponent
        attr_accessor security_group: AnalysisComponent
        attr_accessor security_group_rule: AnalysisSecurityGroupRule
        attr_accessor security_groups: analysis_component_list_output
        attr_accessor source_vpc: AnalysisComponent
        attr_accessor state: string
        attr_accessor subnet: AnalysisComponent
        attr_accessor subnet_route_table: AnalysisComponent
        attr_accessor vpc: AnalysisComponent
        attr_accessor vpc_endpoint: AnalysisComponent
        attr_accessor vpn_connection: AnalysisComponent
        attr_accessor vpn_gateway: AnalysisComponent
        attr_accessor transit_gateway: AnalysisComponent
        attr_accessor transit_gateway_route_table: AnalysisComponent
        attr_accessor transit_gateway_route_table_route: TransitGatewayRouteTableRoute
        attr_accessor transit_gateway_attachment: AnalysisComponent
        attr_accessor component_account: component_account
        attr_accessor component_region: component_region
        attr_accessor firewall_stateless_rule: FirewallStatelessRule
        attr_accessor firewall_stateful_rule: FirewallStatefulRule
      end
      type explanation_list = ::Array[Explanation]
      type export_client_vpn_client_certificate_revocation_list_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, dry_run: boolean? }
      class ExportClientVpnClientCertificateRevocationListResult
        attr_accessor certificate_revocation_list: string
        attr_accessor status: ClientCertificateRevocationListStatus
      end
      type export_client_vpn_client_configuration_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, dry_run: boolean? }
      class ExportClientVpnClientConfigurationResult
        attr_accessor client_configuration: string
      end
      type export_environment = ("citrix" | "vmware" | "microsoft")
      type export_image_request = { client_token: string?, description: string?, disk_image_format: disk_image_format, dry_run: boolean?, image_id: image_id, s3_export_location: export_task_s3_location_request, role_name: string?, tag_specifications: tag_specification_list_input? }
      class ExportImageResult
        attr_accessor description: string
        attr_accessor disk_image_format: disk_image_format
        attr_accessor export_image_task_id: string
        attr_accessor image_id: string
        attr_accessor role_name: string
        attr_accessor progress: string
        attr_accessor s3_export_location: ExportTaskS3Location
        attr_accessor status: string
        attr_accessor status_message: string
        attr_accessor tags: tag_list_output
      end
      class ExportImageTask
        attr_accessor description: string
        attr_accessor export_image_task_id: string
        attr_accessor image_id: string
        attr_accessor progress: string
        attr_accessor s3_export_location: ExportTaskS3Location
        attr_accessor status: string
        attr_accessor status_message: string
        attr_accessor tags: tag_list_output
      end
      type export_image_task_id = ::String
      type export_image_task_id_list = ::Array[export_image_task_id]
      type export_image_task_list = ::Array[ExportImageTask]
      class ExportTask
        attr_accessor description: string
        attr_accessor export_task_id: string
        attr_accessor export_to_s3_task: ExportToS3Task
        attr_accessor instance_export_details: InstanceExportDetails
        attr_accessor state: export_task_state
        attr_accessor status_message: string
        attr_accessor tags: tag_list_output
      end
      type export_task_id = ::String
      type export_task_id_string_list = ::Array[export_task_id]
      type export_task_list_output = ::Array[ExportTask]
      class ExportTaskS3Location
        attr_accessor s3_bucket: string
        attr_accessor s3_prefix: string
      end
      type export_task_s3_location_request = { s3_bucket: string, s3_prefix: string? }
      type export_task_state = ("active" | "cancelling" | "cancelled" | "completed")
      class ExportToS3Task
        attr_accessor container_format: container_format
        attr_accessor disk_image_format: disk_image_format
        attr_accessor s3_bucket: string
        attr_accessor s3_key: string
      end
      type export_to_s3_task_specification = { container_format: container_format?, disk_image_format: disk_image_format?, s3_bucket: string?, s3_prefix: string? }
      type export_transit_gateway_routes_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, filters: filter_list?, s3_bucket: string, dry_run: boolean? }
      class ExportTransitGatewayRoutesResult
        attr_accessor s3_location: string
      end
      type export_vm_task_id = ::String
      class FailedCapacityReservationFleetCancellationResult
        attr_accessor capacity_reservation_fleet_id: capacity_reservation_fleet_id
        attr_accessor cancel_capacity_reservation_fleet_error: CancelCapacityReservationFleetError
      end
      type failed_capacity_reservation_fleet_cancellation_result_set = ::Array[FailedCapacityReservationFleetCancellationResult]
      class FailedQueuedPurchaseDeletion
        attr_accessor error: DeleteQueuedReservedInstancesError
        attr_accessor reserved_instances_id: string
      end
      type failed_queued_purchase_deletion_set = ::Array[FailedQueuedPurchaseDeletion]
      type fast_launch_image_id_list = ::Array[image_id]
      type fast_launch_launch_template_specification_request = { launch_template_id: launch_template_id?, launch_template_name: string?, version: string }
      class FastLaunchLaunchTemplateSpecificationResponse
        attr_accessor launch_template_id: launch_template_id
        attr_accessor launch_template_name: string
        attr_accessor version: string
      end
      type fast_launch_resource_type = ("snapshot")
      type fast_launch_snapshot_configuration_request = { target_resource_count: integer? }
      class FastLaunchSnapshotConfigurationResponse
        attr_accessor target_resource_count: integer
      end
      type fast_launch_state_code = ("enabling" | "enabling-failed" | "enabled" | "enabled-failed" | "disabling" | "disabling-failed")
      type fast_snapshot_restore_state_code = ("enabling" | "optimizing" | "enabled" | "disabling" | "disabled")
      class FederatedAuthentication
        attr_accessor saml_provider_arn: string
        attr_accessor self_service_saml_provider_arn: string
      end
      type federated_authentication_request = { saml_provider_arn: string?, self_service_saml_provider_arn: string? }
      type filter = { name: string?, values: value_string_list? }
      type filter_list = ::Array[filter]
      class FilterPortRange
        attr_accessor from_port: port
        attr_accessor to_port: port
      end
      type findings_found = ("true" | "false" | "unknown")
      class FirewallStatefulRule
        attr_accessor rule_group_arn: resource_arn
        attr_accessor sources: value_string_list
        attr_accessor destinations: value_string_list
        attr_accessor source_ports: port_range_list_output
        attr_accessor destination_ports: port_range_list_output
        attr_accessor protocol: string
        attr_accessor rule_action: string
        attr_accessor direction: string
      end
      class FirewallStatelessRule
        attr_accessor rule_group_arn: resource_arn
        attr_accessor sources: value_string_list
        attr_accessor destinations: value_string_list
        attr_accessor source_ports: port_range_list_output
        attr_accessor destination_ports: port_range_list_output
        attr_accessor protocols: protocol_int_list
        attr_accessor rule_action: string
        attr_accessor priority: priority
      end
      type fleet_activity_status = ("error" | "pending_fulfillment" | "pending_termination" | "fulfilled")
      class FleetCapacityReservation
        attr_accessor capacity_reservation_id: capacity_reservation_id
        attr_accessor availability_zone_id: string
        attr_accessor instance_type: instance_type
        attr_accessor instance_platform: capacity_reservation_instance_platform
        attr_accessor availability_zone: string
        attr_accessor total_instance_count: integer
        attr_accessor fulfilled_capacity: double
        attr_accessor ebs_optimized: boolean
        attr_accessor create_date: millisecond_date_time
        attr_accessor weight: double_with_constraints
        attr_accessor priority: integer_with_constraints
      end
      type fleet_capacity_reservation_set = ::Array[FleetCapacityReservation]
      type fleet_capacity_reservation_tenancy = ("default")
      type fleet_capacity_reservation_usage_strategy = ("use-capacity-reservations-first")
      class FleetData
        attr_accessor activity_status: fleet_activity_status
        attr_accessor create_time: date_time
        attr_accessor fleet_id: fleet_id
        attr_accessor fleet_state: fleet_state_code
        attr_accessor client_token: string
        attr_accessor excess_capacity_termination_policy: fleet_excess_capacity_termination_policy
        attr_accessor fulfilled_capacity: double
        attr_accessor fulfilled_on_demand_capacity: double
        attr_accessor launch_template_configs: fleet_launch_template_config_list
        attr_accessor target_capacity_specification: TargetCapacitySpecification
        attr_accessor terminate_instances_with_expiration: boolean
        attr_accessor type_: fleet_type
        attr_accessor valid_from: date_time
        attr_accessor valid_until: date_time
        attr_accessor replace_unhealthy_instances: boolean
        attr_accessor spot_options: SpotOptions
        attr_accessor on_demand_options: OnDemandOptions
        attr_accessor tags: tag_list_output
        attr_accessor errors: describe_fleets_error_set
        attr_accessor instances: describe_fleets_instances_set
        attr_accessor context: string
      end
      type fleet_event_type = ("instance-change" | "fleet-change" | "service-error")
      type fleet_excess_capacity_termination_policy = ("no-termination" | "termination")
      type fleet_id = ::String
      type fleet_id_set = ::Array[fleet_id]
      type fleet_instance_match_criteria = ("open")
      class FleetLaunchTemplateConfig
        attr_accessor launch_template_specification: FleetLaunchTemplateSpecification
        attr_accessor overrides: fleet_launch_template_overrides_list_output
      end
      type fleet_launch_template_config_list = ::Array[FleetLaunchTemplateConfig]
      type fleet_launch_template_config_list_request = ::Array[fleet_launch_template_config_request]
      type fleet_launch_template_config_request = { launch_template_specification: fleet_launch_template_specification_request?, overrides: fleet_launch_template_overrides_list_request? }
      class FleetLaunchTemplateOverrides
        attr_accessor instance_type: instance_type
        attr_accessor max_price: string
        attr_accessor subnet_id: string
        attr_accessor availability_zone: string
        attr_accessor weighted_capacity: double
        attr_accessor priority: double
        attr_accessor placement: PlacementResponse
        attr_accessor instance_requirements: InstanceRequirements
        attr_accessor image_id: image_id
      end
      type fleet_launch_template_overrides_list_output = ::Array[FleetLaunchTemplateOverrides]
      type fleet_launch_template_overrides_list_request = ::Array[fleet_launch_template_overrides_request]
      type fleet_launch_template_overrides_request = { instance_type: instance_type?, max_price: string?, subnet_id: subnet_id?, availability_zone: string?, weighted_capacity: double?, priority: double?, placement: placement?, instance_requirements: instance_requirements_request?, image_id: image_id? }
      class FleetLaunchTemplateSpecification
        attr_accessor launch_template_id: string
        attr_accessor launch_template_name: launch_template_name
        attr_accessor version: string
      end
      type fleet_launch_template_specification = { launch_template_id: string?, launch_template_name: launch_template_name?, version: string? }
      type fleet_launch_template_specification_request = { launch_template_id: launch_template_id?, launch_template_name: launch_template_name?, version: string? }
      type fleet_on_demand_allocation_strategy = ("lowest-price" | "prioritized")
      type fleet_replacement_strategy = ("launch" | "launch-before-terminate")
      type fleet_set = ::Array[FleetData]
      class FleetSpotCapacityRebalance
        attr_accessor replacement_strategy: fleet_replacement_strategy
        attr_accessor termination_delay: integer
      end
      type fleet_spot_capacity_rebalance_request = { replacement_strategy: fleet_replacement_strategy?, termination_delay: integer? }
      class FleetSpotMaintenanceStrategies
        attr_accessor capacity_rebalance: FleetSpotCapacityRebalance
      end
      type fleet_spot_maintenance_strategies_request = { capacity_rebalance: fleet_spot_capacity_rebalance_request? }
      type fleet_state_code = ("submitted" | "active" | "deleted" | "failed" | "deleted_running" | "deleted_terminating" | "modifying")
      type fleet_type = ("request" | "maintain" | "instant")
      type float = ::Float
      class FlowLog
        attr_accessor creation_time: millisecond_date_time
        attr_accessor deliver_logs_error_message: string
        attr_accessor deliver_logs_permission_arn: string
        attr_accessor deliver_cross_account_role: string
        attr_accessor deliver_logs_status: string
        attr_accessor flow_log_id: string
        attr_accessor flow_log_status: string
        attr_accessor log_group_name: string
        attr_accessor resource_id: string
        attr_accessor traffic_type: traffic_type
        attr_accessor log_destination_type: log_destination_type
        attr_accessor log_destination: string
        attr_accessor log_format: string
        attr_accessor tags: tag_list_output
        attr_accessor max_aggregation_interval: integer
        attr_accessor destination_options: DestinationOptionsResponse
      end
      type flow_log_id_list = ::Array[vpc_flow_log_id]
      type flow_log_resource_id = ::String
      type flow_log_resource_ids = ::Array[flow_log_resource_id]
      type flow_log_set = ::Array[FlowLog]
      type flow_logs_resource_type = ("VPC" | "Subnet" | "NetworkInterface" | "TransitGateway" | "TransitGatewayAttachment")
      type fpga_device_count = ::Integer
      class FpgaDeviceInfo
        attr_accessor name: fpga_device_name
        attr_accessor manufacturer: fpga_device_manufacturer_name
        attr_accessor count: fpga_device_count
        attr_accessor memory_info: FpgaDeviceMemoryInfo
      end
      type fpga_device_info_list = ::Array[FpgaDeviceInfo]
      type fpga_device_manufacturer_name = ::String
      class FpgaDeviceMemoryInfo
        attr_accessor size_in_mi_b: fpga_device_memory_size
      end
      type fpga_device_memory_size = ::Integer
      type fpga_device_name = ::String
      class FpgaImage
        attr_accessor fpga_image_id: string
        attr_accessor fpga_image_global_id: string
        attr_accessor name: string
        attr_accessor description: string
        attr_accessor shell_version: string
        attr_accessor pci_id: PciId
        attr_accessor state: FpgaImageState
        attr_accessor create_time: date_time
        attr_accessor update_time: date_time
        attr_accessor owner_id: string
        attr_accessor owner_alias: string
        attr_accessor product_codes: product_code_list
        attr_accessor tags: tag_list_output
        attr_accessor public_: boolean
        attr_accessor data_retention_support: boolean
        attr_accessor instance_types: instance_types_list
      end
      class FpgaImageAttribute
        attr_accessor fpga_image_id: string
        attr_accessor name: string
        attr_accessor description: string
        attr_accessor load_permissions: load_permission_list
        attr_accessor product_codes: product_code_list
      end
      type fpga_image_attribute_name = ("description" | "name" | "loadPermission" | "productCodes")
      type fpga_image_id = ::String
      type fpga_image_id_list = ::Array[fpga_image_id]
      type fpga_image_list = ::Array[FpgaImage]
      class FpgaImageState
        attr_accessor code: fpga_image_state_code
        attr_accessor message: string
      end
      type fpga_image_state_code = ("pending" | "failed" | "available" | "unavailable")
      class FpgaInfo
        attr_accessor fpgas: fpga_device_info_list
        attr_accessor total_fpga_memory_in_mi_b: total_fpga_memory
      end
      type free_tier_eligible_flag = bool
      type gvcd_max_results = ::Integer
      type gateway_association_state = ("associated" | "not-associated" | "associating" | "disassociating")
      type gateway_type = ("ipsec.1")
      type get_associated_enclave_certificate_iam_roles_request = { certificate_arn: certificate_id, dry_run: boolean? }
      class GetAssociatedEnclaveCertificateIamRolesResult
        attr_accessor associated_roles: associated_roles_list
      end
      type get_associated_ipv_6_pool_cidrs_request = { pool_id: ipv_6_pool_ec2_id, next_token: next_token?, max_results: ipv_6_pool_max_results?, dry_run: boolean? }
      class GetAssociatedIpv6PoolCidrsResult
        attr_accessor ipv_6_cidr_associations: ipv_6_cidr_association_set
        attr_accessor next_token: string
      end
      type get_aws_network_performance_data_request = { data_queries: data_queries?, start_time: millisecond_date_time?, end_time: millisecond_date_time?, max_results: integer?, next_token: string?, dry_run: boolean? }
      class GetAwsNetworkPerformanceDataResult
        attr_accessor data_responses: data_responses
        attr_accessor next_token: string
      end
      type get_capacity_reservation_usage_request = { capacity_reservation_id: capacity_reservation_id, next_token: string?, max_results: get_capacity_reservation_usage_request_max_results?, dry_run: boolean? }
      type get_capacity_reservation_usage_request_max_results = ::Integer
      class GetCapacityReservationUsageResult
        attr_accessor next_token: string
        attr_accessor capacity_reservation_id: string
        attr_accessor instance_type: string
        attr_accessor total_instance_count: integer
        attr_accessor available_instance_count: integer
        attr_accessor state: capacity_reservation_state
        attr_accessor instance_usages: instance_usage_set
      end
      type get_coip_pool_usage_request = { pool_id: ipv_4_pool_coip_id, filters: filter_list?, max_results: coip_pool_max_results?, next_token: string?, dry_run: boolean? }
      class GetCoipPoolUsageResult
        attr_accessor coip_pool_id: string
        attr_accessor coip_address_usages: coip_address_usage_set
        attr_accessor local_gateway_route_table_id: string
      end
      type get_console_output_request = { instance_id: instance_id, dry_run: boolean?, latest: boolean? }
      class GetConsoleOutputResult
        attr_accessor instance_id: string
        attr_accessor output: string
        attr_accessor timestamp: date_time
      end
      type get_console_screenshot_request = { dry_run: boolean?, instance_id: instance_id, wake_up: boolean? }
      class GetConsoleScreenshotResult
        attr_accessor image_data: string
        attr_accessor instance_id: string
      end
      type get_default_credit_specification_request = { dry_run: boolean?, instance_family: unlimited_supported_instance_family }
      class GetDefaultCreditSpecificationResult
        attr_accessor instance_family_credit_specification: InstanceFamilyCreditSpecification
      end
      type get_ebs_default_kms_key_id_request = { dry_run: boolean? }
      class GetEbsDefaultKmsKeyIdResult
        attr_accessor kms_key_id: string
      end
      type get_ebs_encryption_by_default_request = { dry_run: boolean? }
      class GetEbsEncryptionByDefaultResult
        attr_accessor ebs_encryption_by_default: boolean
      end
      type get_flow_logs_integration_template_request = { dry_run: boolean?, flow_log_id: vpc_flow_log_id, config_delivery_s3_destination_arn: string, integrate_services: integrate_services }
      class GetFlowLogsIntegrationTemplateResult
        attr_accessor result: string
      end
      type get_groups_for_capacity_reservation_request = { capacity_reservation_id: capacity_reservation_id, next_token: string?, max_results: get_groups_for_capacity_reservation_request_max_results?, dry_run: boolean? }
      type get_groups_for_capacity_reservation_request_max_results = ::Integer
      class GetGroupsForCapacityReservationResult
        attr_accessor next_token: string
        attr_accessor capacity_reservation_groups: capacity_reservation_group_set
      end
      type get_host_reservation_purchase_preview_request = { host_id_set: request_host_id_set, offering_id: offering_id }
      class GetHostReservationPurchasePreviewResult
        attr_accessor currency_code: currency_code_values
        attr_accessor purchase: purchase_set
        attr_accessor total_hourly_price: string
        attr_accessor total_upfront_price: string
      end
      type get_instance_types_from_instance_requirements_request = { dry_run: boolean?, architecture_types: architecture_type_set, virtualization_types: virtualization_type_set, instance_requirements: instance_requirements_request, max_results: integer?, next_token: string? }
      class GetInstanceTypesFromInstanceRequirementsResult
        attr_accessor instance_types: instance_type_info_from_instance_requirements_set
        attr_accessor next_token: string
      end
      type get_instance_uefi_data_request = { instance_id: instance_id, dry_run: boolean? }
      class GetInstanceUefiDataResult
        attr_accessor instance_id: instance_id
        attr_accessor uefi_data: string
      end
      type get_ipam_address_history_request = { dry_run: boolean?, cidr: string, ipam_scope_id: ipam_scope_id, vpc_id: string?, start_time: millisecond_date_time?, end_time: millisecond_date_time?, max_results: ipam_address_history_max_results?, next_token: next_token? }
      class GetIpamAddressHistoryResult
        attr_accessor history_records: ipam_address_history_record_set
        attr_accessor next_token: next_token
      end
      type get_ipam_discovered_accounts_request = { dry_run: boolean?, ipam_resource_discovery_id: ipam_resource_discovery_id, discovery_region: string, filters: filter_list?, next_token: next_token?, max_results: ipam_max_results? }
      class GetIpamDiscoveredAccountsResult
        attr_accessor ipam_discovered_accounts: ipam_discovered_account_set
        attr_accessor next_token: next_token
      end
      type get_ipam_discovered_resource_cidrs_request = { dry_run: boolean?, ipam_resource_discovery_id: ipam_resource_discovery_id, resource_region: string, filters: filter_list?, next_token: next_token?, max_results: ipam_max_results? }
      class GetIpamDiscoveredResourceCidrsResult
        attr_accessor ipam_discovered_resource_cidrs: ipam_discovered_resource_cidr_set
        attr_accessor next_token: next_token
      end
      type get_ipam_pool_allocations_max_results = ::Integer
      type get_ipam_pool_allocations_request = { dry_run: boolean?, ipam_pool_id: ipam_pool_id, ipam_pool_allocation_id: ipam_pool_allocation_id?, filters: filter_list?, max_results: get_ipam_pool_allocations_max_results?, next_token: next_token? }
      class GetIpamPoolAllocationsResult
        attr_accessor ipam_pool_allocations: ipam_pool_allocation_set_output
        attr_accessor next_token: next_token
      end
      type get_ipam_pool_cidrs_request = { dry_run: boolean?, ipam_pool_id: ipam_pool_id, filters: filter_list?, max_results: ipam_max_results?, next_token: next_token? }
      class GetIpamPoolCidrsResult
        attr_accessor ipam_pool_cidrs: ipam_pool_cidr_set_output
        attr_accessor next_token: next_token
      end
      type get_ipam_resource_cidrs_request = { dry_run: boolean?, filters: filter_list?, max_results: ipam_max_results?, next_token: next_token?, ipam_scope_id: ipam_scope_id, ipam_pool_id: ipam_pool_id?, resource_id: string?, resource_type: ipam_resource_type?, resource_tag: request_ipam_resource_tag?, resource_owner: string? }
      class GetIpamResourceCidrsResult
        attr_accessor next_token: next_token
        attr_accessor ipam_resource_cidrs: ipam_resource_cidr_set_output
      end
      type get_launch_template_data_request = { dry_run: boolean?, instance_id: instance_id }
      class GetLaunchTemplateDataResult
        attr_accessor launch_template_data: ResponseLaunchTemplateData
      end
      type get_managed_prefix_list_associations_max_results = ::Integer
      type get_managed_prefix_list_associations_request = { dry_run: boolean?, prefix_list_id: prefix_list_resource_id, max_results: get_managed_prefix_list_associations_max_results?, next_token: next_token? }
      class GetManagedPrefixListAssociationsResult
        attr_accessor prefix_list_associations: prefix_list_association_set
        attr_accessor next_token: string
      end
      type get_managed_prefix_list_entries_request = { dry_run: boolean?, prefix_list_id: prefix_list_resource_id, target_version: long?, max_results: prefix_list_max_results?, next_token: next_token? }
      class GetManagedPrefixListEntriesResult
        attr_accessor entries: prefix_list_entry_set
        attr_accessor next_token: next_token
      end
      type get_network_insights_access_scope_analysis_findings_request = { network_insights_access_scope_analysis_id: network_insights_access_scope_analysis_id, max_results: network_insights_max_results?, next_token: next_token?, dry_run: boolean? }
      class GetNetworkInsightsAccessScopeAnalysisFindingsResult
        attr_accessor network_insights_access_scope_analysis_id: network_insights_access_scope_analysis_id
        attr_accessor analysis_status: analysis_status
        attr_accessor analysis_findings: access_scope_analysis_finding_list
        attr_accessor next_token: string
      end
      type get_network_insights_access_scope_content_request = { network_insights_access_scope_id: network_insights_access_scope_id, dry_run: boolean? }
      class GetNetworkInsightsAccessScopeContentResult
        attr_accessor network_insights_access_scope_content: NetworkInsightsAccessScopeContent
      end
      type get_password_data_request = { instance_id: instance_id, dry_run: boolean? }
      class GetPasswordDataResult
        attr_accessor instance_id: string
        attr_accessor password_data: string
        attr_accessor timestamp: date_time
      end
      type get_reserved_instances_exchange_quote_request = { dry_run: boolean?, reserved_instance_ids: reserved_instance_id_set, target_configurations: target_configuration_request_set? }
      class GetReservedInstancesExchangeQuoteResult
        attr_accessor currency_code: string
        attr_accessor is_valid_exchange: boolean
        attr_accessor output_reserved_instances_will_expire_at: date_time
        attr_accessor payment_due: string
        attr_accessor reserved_instance_value_rollup: ReservationValue
        attr_accessor reserved_instance_value_set: reserved_instance_reservation_value_set
        attr_accessor target_configuration_value_rollup: ReservationValue
        attr_accessor target_configuration_value_set: target_reservation_value_set
        attr_accessor validation_failure_reason: string
      end
      type get_serial_console_access_status_request = { dry_run: boolean? }
      class GetSerialConsoleAccessStatusResult
        attr_accessor serial_console_access_enabled: boolean
      end
      type get_spot_placement_scores_request = { instance_types: instance_types?, target_capacity: spot_placement_scores_target_capacity, target_capacity_unit_type: target_capacity_unit_type?, single_availability_zone: boolean?, region_names: region_names?, instance_requirements_with_metadata: instance_requirements_with_metadata_request?, dry_run: boolean?, max_results: spot_placement_scores_max_results?, next_token: string? }
      class GetSpotPlacementScoresResult
        attr_accessor spot_placement_scores: spot_placement_scores
        attr_accessor next_token: string
      end
      type get_subnet_cidr_reservations_max_results = ::Integer
      type get_subnet_cidr_reservations_request = { filters: filter_list?, subnet_id: subnet_id, dry_run: boolean?, next_token: string?, max_results: get_subnet_cidr_reservations_max_results? }
      class GetSubnetCidrReservationsResult
        attr_accessor subnet_ipv_4_cidr_reservations: subnet_cidr_reservation_list_output
        attr_accessor subnet_ipv_6_cidr_reservations: subnet_cidr_reservation_list_output
        attr_accessor next_token: string
      end
      type get_transit_gateway_attachment_propagations_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class GetTransitGatewayAttachmentPropagationsResult
        attr_accessor transit_gateway_attachment_propagations: transit_gateway_attachment_propagation_list
        attr_accessor next_token: string
      end
      type get_transit_gateway_multicast_domain_associations_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class GetTransitGatewayMulticastDomainAssociationsResult
        attr_accessor multicast_domain_associations: transit_gateway_multicast_domain_association_list
        attr_accessor next_token: string
      end
      type get_transit_gateway_policy_table_associations_request = { transit_gateway_policy_table_id: transit_gateway_policy_table_id, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class GetTransitGatewayPolicyTableAssociationsResult
        attr_accessor associations: transit_gateway_policy_table_association_list_output
        attr_accessor next_token: string
      end
      type get_transit_gateway_policy_table_entries_request = { transit_gateway_policy_table_id: transit_gateway_policy_table_id, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class GetTransitGatewayPolicyTableEntriesResult
        attr_accessor transit_gateway_policy_table_entries: transit_gateway_policy_table_entry_list
      end
      type get_transit_gateway_prefix_list_references_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class GetTransitGatewayPrefixListReferencesResult
        attr_accessor transit_gateway_prefix_list_references: transit_gateway_prefix_list_reference_set_output
        attr_accessor next_token: string
      end
      type get_transit_gateway_route_table_associations_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class GetTransitGatewayRouteTableAssociationsResult
        attr_accessor associations: transit_gateway_route_table_association_list
        attr_accessor next_token: string
      end
      type get_transit_gateway_route_table_propagations_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class GetTransitGatewayRouteTablePropagationsResult
        attr_accessor transit_gateway_route_table_propagations: transit_gateway_route_table_propagation_list
        attr_accessor next_token: string
      end
      type get_verified_access_endpoint_policy_request = { verified_access_endpoint_id: verified_access_endpoint_id, dry_run: boolean? }
      class GetVerifiedAccessEndpointPolicyResult
        attr_accessor policy_enabled: boolean
        attr_accessor policy_document: string
      end
      type get_verified_access_group_policy_request = { verified_access_group_id: verified_access_group_id, dry_run: boolean? }
      class GetVerifiedAccessGroupPolicyResult
        attr_accessor policy_enabled: boolean
        attr_accessor policy_document: string
      end
      type get_vpn_connection_device_sample_configuration_request = { vpn_connection_id: vpn_connection_id, vpn_connection_device_type_id: vpn_connection_device_type_id, internet_key_exchange_version: string?, dry_run: boolean? }
      class GetVpnConnectionDeviceSampleConfigurationResult
        attr_accessor vpn_connection_device_sample_configuration: vpn_connection_device_sample_configuration
      end
      type get_vpn_connection_device_types_request = { max_results: gvcd_max_results?, next_token: next_token?, dry_run: boolean? }
      class GetVpnConnectionDeviceTypesResult
        attr_accessor vpn_connection_device_types: vpn_connection_device_type_list
        attr_accessor next_token: next_token
      end
      type get_vpn_tunnel_replacement_status_request = { vpn_connection_id: vpn_connection_id, vpn_tunnel_outside_ip_address: string, dry_run: boolean? }
      class GetVpnTunnelReplacementStatusResult
        attr_accessor vpn_connection_id: vpn_connection_id
        attr_accessor transit_gateway_id: transit_gateway_id
        attr_accessor customer_gateway_id: customer_gateway_id
        attr_accessor vpn_gateway_id: vpn_gateway_id
        attr_accessor vpn_tunnel_outside_ip_address: string
        attr_accessor maintenance_details: MaintenanceDetails
      end
      type gpu_device_count = ::Integer
      class GpuDeviceInfo
        attr_accessor name: gpu_device_name
        attr_accessor manufacturer: gpu_device_manufacturer_name
        attr_accessor count: gpu_device_count
        attr_accessor memory_info: GpuDeviceMemoryInfo
      end
      type gpu_device_info_list = ::Array[GpuDeviceInfo]
      type gpu_device_manufacturer_name = ::String
      class GpuDeviceMemoryInfo
        attr_accessor size_in_mi_b: gpu_device_memory_size
      end
      type gpu_device_memory_size = ::Integer
      type gpu_device_name = ::String
      class GpuInfo
        attr_accessor gpus: gpu_device_info_list
        attr_accessor total_gpu_memory_in_mi_b: total_gpu_memory
      end
      type group_id_string_list = ::Array[security_group_id]
      class GroupIdentifier
        attr_accessor group_name: string
        attr_accessor group_id: string
      end
      type group_identifier = { group_name: string?, group_id: string? }
      type group_identifier_list_output = ::Array[GroupIdentifier]
      type group_identifier_list_input = ::Array[group_identifier]
      type group_identifier_set = ::Array[SecurityGroupIdentifier]
      type group_ids = ::Array[security_group_id]
      type group_name_string_list = ::Array[security_group_name]
      type hibernation_flag = bool
      class HibernationOptions
        attr_accessor configured: boolean
      end
      type hibernation_options_request = { configured: boolean? }
      class HistoryRecord
        attr_accessor event_information: EventInformation
        attr_accessor event_type: event_type
        attr_accessor timestamp: date_time
      end
      class HistoryRecordEntry
        attr_accessor event_information: EventInformation
        attr_accessor event_type: fleet_event_type
        attr_accessor timestamp: date_time
      end
      type history_record_set = ::Array[HistoryRecordEntry]
      type history_records = ::Array[HistoryRecord]
      class Host
        attr_accessor auto_placement: auto_placement
        attr_accessor availability_zone: string
        attr_accessor available_capacity: AvailableCapacity
        attr_accessor client_token: string
        attr_accessor host_id: string
        attr_accessor host_properties: HostProperties
        attr_accessor host_reservation_id: string
        attr_accessor instances: host_instance_list
        attr_accessor state: allocation_state
        attr_accessor allocation_time: date_time
        attr_accessor release_time: date_time
        attr_accessor tags: tag_list_output
        attr_accessor host_recovery: host_recovery
        attr_accessor allows_multiple_instance_types: allows_multiple_instance_types
        attr_accessor owner_id: string
        attr_accessor availability_zone_id: string
        attr_accessor member_of_service_linked_resource_group: boolean
        attr_accessor outpost_arn: string
        attr_accessor host_maintenance: host_maintenance
      end
      class HostInstance
        attr_accessor instance_id: string
        attr_accessor instance_type: string
        attr_accessor owner_id: string
      end
      type host_instance_list = ::Array[HostInstance]
      type host_list = ::Array[Host]
      type host_maintenance = ("on" | "off")
      class HostOffering
        attr_accessor currency_code: currency_code_values
        attr_accessor duration: integer
        attr_accessor hourly_price: string
        attr_accessor instance_family: string
        attr_accessor offering_id: offering_id
        attr_accessor payment_option: payment_option
        attr_accessor upfront_price: string
      end
      type host_offering_set = ::Array[HostOffering]
      class HostProperties
        attr_accessor cores: integer
        attr_accessor instance_type: string
        attr_accessor instance_family: string
        attr_accessor sockets: integer
        attr_accessor total_v_cpus: integer
      end
      type host_recovery = ("on" | "off")
      class HostReservation
        attr_accessor count: integer
        attr_accessor currency_code: currency_code_values
        attr_accessor duration: integer
        attr_accessor end_: date_time
        attr_accessor host_id_set: response_host_id_set
        attr_accessor host_reservation_id: host_reservation_id
        attr_accessor hourly_price: string
        attr_accessor instance_family: string
        attr_accessor offering_id: offering_id
        attr_accessor payment_option: payment_option
        attr_accessor start: date_time
        attr_accessor state: reservation_state
        attr_accessor upfront_price: string
        attr_accessor tags: tag_list_output
      end
      type host_reservation_id = ::String
      type host_reservation_id_set = ::Array[host_reservation_id]
      type host_reservation_set = ::Array[HostReservation]
      type host_tenancy = ("dedicated" | "host")
      type hostname_type = ("ip-name" | "resource-name")
      type hour = ::Integer
      type http_tokens_state = ("optional" | "required")
      type hypervisor_type = ("ovm" | "xen")
      type ike_versions_list = ::Array[IKEVersionsListValue]
      class IKEVersionsListValue
        attr_accessor value: string
      end
      type ike_versions_request_list = ::Array[ike_versions_request_list_value]
      type ike_versions_request_list_value = { value: string? }
      class IamInstanceProfile
        attr_accessor arn: string
        attr_accessor id: string
      end
      class IamInstanceProfileAssociation
        attr_accessor association_id: string
        attr_accessor instance_id: string
        attr_accessor iam_instance_profile: IamInstanceProfile
        attr_accessor state: iam_instance_profile_association_state
        attr_accessor timestamp: date_time
      end
      type iam_instance_profile_association_id = ::String
      type iam_instance_profile_association_set_output = ::Array[IamInstanceProfileAssociation]
      type iam_instance_profile_association_state = ("associating" | "associated" | "disassociating" | "disassociated")
      type iam_instance_profile_specification = { arn: string?, name: string? }
      class IamInstanceProfileSpecification
        attr_accessor arn: string
        attr_accessor name: string
      end
      class IcmpTypeCode
        attr_accessor code: integer
        attr_accessor type_: integer
      end
      type icmp_type_code = { code: integer?, type: integer? }
      class IdFormat
        attr_accessor deadline: date_time
        attr_accessor resource: string
        attr_accessor use_long_ids: boolean
      end
      type id_format_list = ::Array[IdFormat]
      type igmpv_2_support_value = ("enable" | "disable")
      class Image
        attr_accessor architecture: architecture_values
        attr_accessor creation_date: string
        attr_accessor image_id: string
        attr_accessor image_location: string
        attr_accessor image_type: image_type_values
        attr_accessor public_: boolean
        attr_accessor kernel_id: string
        attr_accessor owner_id: string
        attr_accessor platform: platform_values
        attr_accessor platform_details: string
        attr_accessor usage_operation: string
        attr_accessor product_codes: product_code_list
        attr_accessor ramdisk_id: string
        attr_accessor state: image_state
        attr_accessor block_device_mappings: block_device_mapping_list_output
        attr_accessor description: string
        attr_accessor ena_support: boolean
        attr_accessor hypervisor: hypervisor_type
        attr_accessor image_owner_alias: string
        attr_accessor name: string
        attr_accessor root_device_name: string
        attr_accessor root_device_type: device_type
        attr_accessor sriov_net_support: string
        attr_accessor state_reason: StateReason
        attr_accessor tags: tag_list_output
        attr_accessor virtualization_type: virtualization_type
        attr_accessor boot_mode: boot_mode_values
        attr_accessor tpm_support: tpm_support_values
        attr_accessor deprecation_time: string
        attr_accessor imds_support: imds_support_values
      end
      class ImageAttribute
        attr_accessor block_device_mappings: block_device_mapping_list_output
        attr_accessor image_id: string
        attr_accessor launch_permissions: launch_permission_list_output
        attr_accessor product_codes: product_code_list
        attr_accessor description: AttributeValue
        attr_accessor kernel_id: AttributeValue
        attr_accessor ramdisk_id: AttributeValue
        attr_accessor sriov_net_support: AttributeValue
        attr_accessor boot_mode: AttributeValue
        attr_accessor tpm_support: AttributeValue
        attr_accessor uefi_data: AttributeValue
        attr_accessor last_launched_time: AttributeValue
        attr_accessor imds_support: AttributeValue
      end
      type image_attribute_name = ("description" | "kernel" | "ramdisk" | "launchPermission" | "productCodes" | "blockDeviceMapping" | "sriovNetSupport" | "bootMode" | "tpmSupport" | "uefiData" | "lastLaunchedTime" | "imdsSupport")
      type image_disk_container = { description: string?, device_name: string?, format: string?, snapshot_id: snapshot_id?, url: sensitive_url?, user_bucket: user_bucket? }
      type image_disk_container_list = ::Array[image_disk_container]
      type image_id = ::String
      type image_id_list = ::Array[image_id]
      type image_id_string_list = ::Array[image_id]
      type image_list = ::Array[Image]
      class ImageRecycleBinInfo
        attr_accessor image_id: string
        attr_accessor name: string
        attr_accessor description: string
        attr_accessor recycle_bin_enter_time: millisecond_date_time
        attr_accessor recycle_bin_exit_time: millisecond_date_time
      end
      type image_recycle_bin_info_list = ::Array[ImageRecycleBinInfo]
      type image_state = ("pending" | "available" | "invalid" | "deregistered" | "transient" | "failed" | "error")
      type image_type_values = ("machine" | "kernel" | "ramdisk")
      type imds_support_values = ("v2.0")
      type import_client_vpn_client_certificate_revocation_list_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, certificate_revocation_list: string, dry_run: boolean? }
      class ImportClientVpnClientCertificateRevocationListResult
        attr_accessor return: boolean
      end
      type import_image_license_configuration_request = { license_configuration_arn: string? }
      class ImportImageLicenseConfigurationResponse
        attr_accessor license_configuration_arn: string
      end
      type import_image_license_specification_list_request = ::Array[import_image_license_configuration_request]
      type import_image_license_specification_list_response = ::Array[ImportImageLicenseConfigurationResponse]
      type import_image_request = { architecture: string?, client_data: client_data?, client_token: string?, description: string?, disk_containers: image_disk_container_list?, dry_run: boolean?, encrypted: boolean?, hypervisor: string?, kms_key_id: kms_key_id?, license_type: string?, platform: string?, role_name: string?, license_specifications: import_image_license_specification_list_request?, tag_specifications: tag_specification_list_input?, usage_operation: string?, boot_mode: boot_mode_values? }
      class ImportImageResult
        attr_accessor architecture: string
        attr_accessor description: string
        attr_accessor encrypted: boolean
        attr_accessor hypervisor: string
        attr_accessor image_id: string
        attr_accessor import_task_id: import_image_task_id
        attr_accessor kms_key_id: kms_key_id
        attr_accessor license_type: string
        attr_accessor platform: string
        attr_accessor progress: string
        attr_accessor snapshot_details: snapshot_detail_list
        attr_accessor status: string
        attr_accessor status_message: string
        attr_accessor license_specifications: import_image_license_specification_list_response
        attr_accessor tags: tag_list_output
        attr_accessor usage_operation: string
      end
      class ImportImageTask
        attr_accessor architecture: string
        attr_accessor description: string
        attr_accessor encrypted: boolean
        attr_accessor hypervisor: string
        attr_accessor image_id: string
        attr_accessor import_task_id: string
        attr_accessor kms_key_id: string
        attr_accessor license_type: string
        attr_accessor platform: string
        attr_accessor progress: string
        attr_accessor snapshot_details: snapshot_detail_list
        attr_accessor status: string
        attr_accessor status_message: string
        attr_accessor tags: tag_list_output
        attr_accessor license_specifications: import_image_license_specification_list_response
        attr_accessor usage_operation: string
        attr_accessor boot_mode: boot_mode_values
      end
      type import_image_task_id = ::String
      type import_image_task_list = ::Array[ImportImageTask]
      type import_instance_launch_specification = { additional_info: string?, architecture: architecture_values?, group_ids: security_group_id_string_list?, group_names: security_group_string_list?, instance_initiated_shutdown_behavior: shutdown_behavior?, instance_type: instance_type?, monitoring: boolean?, placement: placement?, private_ip_address: string?, subnet_id: subnet_id?, user_data: user_data? }
      type import_instance_request = { description: string?, disk_images: disk_image_list?, dry_run: boolean?, launch_specification: import_instance_launch_specification?, platform: platform_values }
      class ImportInstanceResult
        attr_accessor conversion_task: ConversionTask
      end
      class ImportInstanceTaskDetails
        attr_accessor description: string
        attr_accessor instance_id: string
        attr_accessor platform: platform_values
        attr_accessor volumes: import_instance_volume_detail_set
      end
      class ImportInstanceVolumeDetailItem
        attr_accessor availability_zone: string
        attr_accessor bytes_converted: long
        attr_accessor description: string
        attr_accessor image: DiskImageDescription
        attr_accessor status: string
        attr_accessor status_message: string
        attr_accessor volume: DiskImageVolumeDescription
      end
      type import_instance_volume_detail_set = ::Array[ImportInstanceVolumeDetailItem]
      type import_key_pair_request = { dry_run: boolean?, key_name: string, public_key_material: blob, tag_specifications: tag_specification_list_input? }
      class ImportKeyPairResult
        attr_accessor key_fingerprint: string
        attr_accessor key_name: string
        attr_accessor key_pair_id: string
        attr_accessor tags: tag_list_output
      end
      type import_manifest_url = ::String
      type import_snapshot_request = { client_data: client_data?, client_token: string?, description: string?, disk_container: snapshot_disk_container?, dry_run: boolean?, encrypted: boolean?, kms_key_id: kms_key_id?, role_name: string?, tag_specifications: tag_specification_list_input? }
      class ImportSnapshotResult
        attr_accessor description: string
        attr_accessor import_task_id: string
        attr_accessor snapshot_task_detail: SnapshotTaskDetail
        attr_accessor tags: tag_list_output
      end
      class ImportSnapshotTask
        attr_accessor description: string
        attr_accessor import_task_id: string
        attr_accessor snapshot_task_detail: SnapshotTaskDetail
        attr_accessor tags: tag_list_output
      end
      type import_snapshot_task_id = ::String
      type import_snapshot_task_id_list = ::Array[import_snapshot_task_id]
      type import_snapshot_task_list = ::Array[ImportSnapshotTask]
      type import_task_id = ::String
      type import_task_id_list = ::Array[import_image_task_id]
      type import_volume_request = { availability_zone: string, description: string?, dry_run: boolean?, image: disk_image_detail, volume: volume_detail }
      class ImportVolumeResult
        attr_accessor conversion_task: ConversionTask
      end
      class ImportVolumeTaskDetails
        attr_accessor availability_zone: string
        attr_accessor bytes_converted: long
        attr_accessor description: string
        attr_accessor image: DiskImageDescription
        attr_accessor volume: DiskImageVolumeDescription
      end
      class InferenceAcceleratorInfo
        attr_accessor accelerators: inference_device_info_list
      end
      type inference_device_count = ::Integer
      class InferenceDeviceInfo
        attr_accessor count: inference_device_count
        attr_accessor name: inference_device_name
        attr_accessor manufacturer: inference_device_manufacturer_name
      end
      type inference_device_info_list = ::Array[InferenceDeviceInfo]
      type inference_device_manufacturer_name = ::String
      type inference_device_name = ::String
      type inside_cidr_blocks_string_list = ::Array[string]
      class Instance
        attr_accessor ami_launch_index: integer
        attr_accessor image_id: string
        attr_accessor instance_id: string
        attr_accessor instance_type: instance_type
        attr_accessor kernel_id: string
        attr_accessor key_name: string
        attr_accessor launch_time: date_time
        attr_accessor monitoring: Monitoring
        attr_accessor placement: Placement
        attr_accessor platform: platform_values
        attr_accessor private_dns_name: string
        attr_accessor private_ip_address: string
        attr_accessor product_codes: product_code_list
        attr_accessor public_dns_name: string
        attr_accessor public_ip_address: string
        attr_accessor ramdisk_id: string
        attr_accessor state: InstanceState
        attr_accessor state_transition_reason: string
        attr_accessor subnet_id: string
        attr_accessor vpc_id: string
        attr_accessor architecture: architecture_values
        attr_accessor block_device_mappings: instance_block_device_mapping_list
        attr_accessor client_token: string
        attr_accessor ebs_optimized: boolean
        attr_accessor ena_support: boolean
        attr_accessor hypervisor: hypervisor_type
        attr_accessor iam_instance_profile: IamInstanceProfile
        attr_accessor instance_lifecycle: instance_lifecycle_type
        attr_accessor elastic_gpu_associations: elastic_gpu_association_list
        attr_accessor elastic_inference_accelerator_associations: elastic_inference_accelerator_association_list
        attr_accessor network_interfaces: instance_network_interface_list
        attr_accessor outpost_arn: string
        attr_accessor root_device_name: string
        attr_accessor root_device_type: device_type
        attr_accessor security_groups: group_identifier_list_output
        attr_accessor source_dest_check: boolean
        attr_accessor spot_instance_request_id: string
        attr_accessor sriov_net_support: string
        attr_accessor state_reason: StateReason
        attr_accessor tags: tag_list_output
        attr_accessor virtualization_type: virtualization_type
        attr_accessor cpu_options: CpuOptions
        attr_accessor capacity_reservation_id: string
        attr_accessor capacity_reservation_specification: CapacityReservationSpecificationResponse
        attr_accessor hibernation_options: HibernationOptions
        attr_accessor licenses: license_list
        attr_accessor metadata_options: InstanceMetadataOptionsResponse
        attr_accessor enclave_options: EnclaveOptions
        attr_accessor boot_mode: boot_mode_values
        attr_accessor platform_details: string
        attr_accessor usage_operation: string
        attr_accessor usage_operation_update_time: millisecond_date_time
        attr_accessor private_dns_name_options: PrivateDnsNameOptionsResponse
        attr_accessor ipv_6_address: string
        attr_accessor tpm_support: string
        attr_accessor maintenance_options: InstanceMaintenanceOptions
        attr_accessor current_instance_boot_mode: instance_boot_mode_values
      end
      class InstanceAttribute
        attr_accessor groups: group_identifier_list_output
        attr_accessor block_device_mappings: instance_block_device_mapping_list
        attr_accessor disable_api_termination: AttributeBooleanValue
        attr_accessor ena_support: AttributeBooleanValue
        attr_accessor enclave_options: EnclaveOptions
        attr_accessor ebs_optimized: AttributeBooleanValue
        attr_accessor instance_id: string
        attr_accessor instance_initiated_shutdown_behavior: AttributeValue
        attr_accessor instance_type: AttributeValue
        attr_accessor kernel_id: AttributeValue
        attr_accessor product_codes: product_code_list
        attr_accessor ramdisk_id: AttributeValue
        attr_accessor root_device_name: AttributeValue
        attr_accessor source_dest_check: AttributeBooleanValue
        attr_accessor sriov_net_support: AttributeValue
        attr_accessor user_data: AttributeValue
        attr_accessor disable_api_stop: AttributeBooleanValue
      end
      type instance_attribute_name = ("instanceType" | "kernel" | "ramdisk" | "userData" | "disableApiTermination" | "instanceInitiatedShutdownBehavior" | "rootDeviceName" | "blockDeviceMapping" | "productCodes" | "sourceDestCheck" | "groupSet" | "ebsOptimized" | "sriovNetSupport" | "enaSupport" | "enclaveOptions" | "disableApiStop")
      type instance_auto_recovery_state = ("disabled" | "default")
      class InstanceBlockDeviceMapping
        attr_accessor device_name: string
        attr_accessor ebs: EbsInstanceBlockDevice
      end
      type instance_block_device_mapping_list = ::Array[InstanceBlockDeviceMapping]
      type instance_block_device_mapping_specification = { device_name: string?, ebs: ebs_instance_block_device_specification?, no_device: string?, virtual_name: string? }
      type instance_block_device_mapping_specification_list = ::Array[instance_block_device_mapping_specification]
      type instance_boot_mode_values = ("legacy-bios" | "uefi")
      class InstanceCapacity
        attr_accessor available_capacity: integer
        attr_accessor instance_type: string
        attr_accessor total_capacity: integer
      end
      class InstanceCount
        attr_accessor instance_count: integer
        attr_accessor state: listing_state
      end
      type instance_count_list = ::Array[InstanceCount]
      class InstanceCreditSpecification
        attr_accessor instance_id: string
        attr_accessor cpu_credits: string
      end
      type instance_credit_specification_list = ::Array[InstanceCreditSpecification]
      type instance_credit_specification_list_request = ::Array[instance_credit_specification_request]
      type instance_credit_specification_request = { instance_id: instance_id, cpu_credits: string? }
      type instance_event_id = ::String
      class InstanceEventWindow
        attr_accessor instance_event_window_id: instance_event_window_id
        attr_accessor time_ranges: instance_event_window_time_range_list
        attr_accessor name: string
        attr_accessor cron_expression: instance_event_window_cron_expression
        attr_accessor association_target: InstanceEventWindowAssociationTarget
        attr_accessor state: instance_event_window_state
        attr_accessor tags: tag_list_output
      end
      type instance_event_window_association_request = { instance_ids: instance_id_list?, instance_tags: tag_list_input?, dedicated_host_ids: dedicated_host_id_list? }
      class InstanceEventWindowAssociationTarget
        attr_accessor instance_ids: instance_id_list
        attr_accessor tags: tag_list_output
        attr_accessor dedicated_host_ids: dedicated_host_id_list
      end
      type instance_event_window_cron_expression = ::String
      type instance_event_window_disassociation_request = { instance_ids: instance_id_list?, instance_tags: tag_list_input?, dedicated_host_ids: dedicated_host_id_list? }
      type instance_event_window_id = ::String
      type instance_event_window_id_set = ::Array[instance_event_window_id]
      type instance_event_window_set_output = ::Array[InstanceEventWindow]
      type instance_event_window_state = ("creating" | "deleting" | "active" | "deleted")
      class InstanceEventWindowStateChange
        attr_accessor instance_event_window_id: instance_event_window_id
        attr_accessor state: instance_event_window_state
      end
      class InstanceEventWindowTimeRange
        attr_accessor start_week_day: week_day
        attr_accessor start_hour: hour
        attr_accessor end_week_day: week_day
        attr_accessor end_hour: hour
      end
      type instance_event_window_time_range_list = ::Array[InstanceEventWindowTimeRange]
      type instance_event_window_time_range_request = { start_week_day: week_day?, start_hour: hour?, end_week_day: week_day?, end_hour: hour? }
      type instance_event_window_time_range_request_set = ::Array[instance_event_window_time_range_request]
      class InstanceExportDetails
        attr_accessor instance_id: string
        attr_accessor target_environment: export_environment
      end
      class InstanceFamilyCreditSpecification
        attr_accessor instance_family: unlimited_supported_instance_family
        attr_accessor cpu_credits: string
      end
      type instance_generation = ("current" | "previous")
      type instance_generation_set = ::Array[instance_generation]
      type instance_health_status = ("healthy" | "unhealthy")
      type instance_id = ::String
      type instance_id_for_resolver = ::String
      type instance_id_list = ::Array[instance_id]
      type instance_id_set = ::Array[instance_id]
      type instance_id_string_list = ::Array[instance_id]
      type instance_id_with_volume_resolver = ::String
      type instance_ids_set = ::Array[instance_id]
      type instance_interruption_behavior = ("hibernate" | "stop" | "terminate")
      class InstanceIpv4Prefix
        attr_accessor ipv_4_prefix: string
      end
      type instance_ipv_4_prefix_list = ::Array[InstanceIpv4Prefix]
      class InstanceIpv6Address
        attr_accessor ipv_6_address: string
      end
      type instance_ipv_6_address = { ipv_6_address: string? }
      type instance_ipv_6_address_list_output = ::Array[InstanceIpv6Address]
      type instance_ipv_6_address_list_input = ::Array[instance_ipv_6_address]
      type instance_ipv_6_address_list_request = ::Array[instance_ipv_6_address_request]
      type instance_ipv_6_address_request = { ipv_6_address: string? }
      class InstanceIpv6Prefix
        attr_accessor ipv_6_prefix: string
      end
      type instance_ipv_6_prefix_list = ::Array[InstanceIpv6Prefix]
      type instance_lifecycle = ("spot" | "on-demand")
      type instance_lifecycle_type = ("spot" | "scheduled")
      type instance_list = ::Array[Instance]
      class InstanceMaintenanceOptions
        attr_accessor auto_recovery: instance_auto_recovery_state
      end
      type instance_maintenance_options_request = { auto_recovery: instance_auto_recovery_state? }
      type instance_market_options_request = { market_type: market_type?, spot_options: spot_market_options? }
      type instance_match_criteria = ("open" | "targeted")
      type instance_metadata_endpoint_state = ("disabled" | "enabled")
      type instance_metadata_options_request = { http_tokens: http_tokens_state?, http_put_response_hop_limit: integer?, http_endpoint: instance_metadata_endpoint_state?, http_protocol_ipv_6: instance_metadata_protocol_state?, instance_metadata_tags: instance_metadata_tags_state? }
      class InstanceMetadataOptionsResponse
        attr_accessor state: instance_metadata_options_state
        attr_accessor http_tokens: http_tokens_state
        attr_accessor http_put_response_hop_limit: integer
        attr_accessor http_endpoint: instance_metadata_endpoint_state
        attr_accessor http_protocol_ipv_6: instance_metadata_protocol_state
        attr_accessor instance_metadata_tags: instance_metadata_tags_state
      end
      type instance_metadata_options_state = ("pending" | "applied")
      type instance_metadata_protocol_state = ("disabled" | "enabled")
      type instance_metadata_tags_state = ("disabled" | "enabled")
      class InstanceMonitoring
        attr_accessor instance_id: string
        attr_accessor monitoring: Monitoring
      end
      type instance_monitoring_list = ::Array[InstanceMonitoring]
      class InstanceNetworkInterface
        attr_accessor association: InstanceNetworkInterfaceAssociation
        attr_accessor attachment: InstanceNetworkInterfaceAttachment
        attr_accessor description: string
        attr_accessor groups: group_identifier_list_output
        attr_accessor ipv_6_addresses: instance_ipv_6_address_list_output
        attr_accessor mac_address: string
        attr_accessor network_interface_id: string
        attr_accessor owner_id: string
        attr_accessor private_dns_name: string
        attr_accessor private_ip_address: string
        attr_accessor private_ip_addresses: instance_private_ip_address_list
        attr_accessor source_dest_check: boolean
        attr_accessor status: network_interface_status
        attr_accessor subnet_id: string
        attr_accessor vpc_id: string
        attr_accessor interface_type: string
        attr_accessor ipv_4_prefixes: instance_ipv_4_prefix_list
        attr_accessor ipv_6_prefixes: instance_ipv_6_prefix_list
      end
      class InstanceNetworkInterfaceAssociation
        attr_accessor carrier_ip: string
        attr_accessor customer_owned_ip: string
        attr_accessor ip_owner_id: string
        attr_accessor public_dns_name: string
        attr_accessor public_ip: string
      end
      class InstanceNetworkInterfaceAttachment
        attr_accessor attach_time: date_time
        attr_accessor attachment_id: string
        attr_accessor delete_on_termination: boolean
        attr_accessor device_index: integer
        attr_accessor status: attachment_status
        attr_accessor network_card_index: integer
      end
      type instance_network_interface_list = ::Array[InstanceNetworkInterface]
      class InstanceNetworkInterfaceSpecification
        attr_accessor associate_public_ip_address: boolean
        attr_accessor delete_on_termination: boolean
        attr_accessor description: string
        attr_accessor device_index: integer
        attr_accessor groups: security_group_id_string_list
        attr_accessor ipv_6_address_count: integer
        attr_accessor ipv_6_addresses: instance_ipv_6_address_list_output
        attr_accessor network_interface_id: network_interface_id
        attr_accessor private_ip_address: string
        attr_accessor private_ip_addresses: private_ip_address_specification_list_output
        attr_accessor secondary_private_ip_address_count: integer
        attr_accessor subnet_id: string
        attr_accessor associate_carrier_ip_address: boolean
        attr_accessor interface_type: string
        attr_accessor network_card_index: integer
        attr_accessor ipv_4_prefixes: ipv_4_prefix_list_output
        attr_accessor ipv_4_prefix_count: integer
        attr_accessor ipv_6_prefixes: ipv_6_prefix_list_output
        attr_accessor ipv_6_prefix_count: integer
      end
      type instance_network_interface_specification = { associate_public_ip_address: boolean?, delete_on_termination: boolean?, description: string?, device_index: integer?, groups: security_group_id_string_list?, ipv_6_address_count: integer?, ipv_6_addresses: instance_ipv_6_address_list_input?, network_interface_id: network_interface_id?, private_ip_address: string?, private_ip_addresses: private_ip_address_specification_list_input?, secondary_private_ip_address_count: integer?, subnet_id: string?, associate_carrier_ip_address: boolean?, interface_type: string?, network_card_index: integer?, ipv_4_prefixes: ipv_4_prefix_list_input?, ipv_4_prefix_count: integer?, ipv_6_prefixes: ipv_6_prefix_list_input?, ipv_6_prefix_count: integer? }
      type instance_network_interface_specification_list_output = ::Array[InstanceNetworkInterfaceSpecification]
      type instance_network_interface_specification_list_input = ::Array[instance_network_interface_specification]
      class InstancePrivateIpAddress
        attr_accessor association: InstanceNetworkInterfaceAssociation
        attr_accessor primary: boolean
        attr_accessor private_dns_name: string
        attr_accessor private_ip_address: string
      end
      type instance_private_ip_address_list = ::Array[InstancePrivateIpAddress]
      class InstanceRequirements
        attr_accessor v_cpu_count: VCpuCountRange
        attr_accessor memory_mi_b: MemoryMiB
        attr_accessor cpu_manufacturers: cpu_manufacturer_set
        attr_accessor memory_gi_b_per_v_cpu: MemoryGiBPerVCpu
        attr_accessor excluded_instance_types: excluded_instance_type_set
        attr_accessor instance_generations: instance_generation_set
        attr_accessor spot_max_price_percentage_over_lowest_price: integer
        attr_accessor on_demand_max_price_percentage_over_lowest_price: integer
        attr_accessor bare_metal: bare_metal
        attr_accessor burstable_performance: burstable_performance
        attr_accessor require_hibernate_support: boolean
        attr_accessor network_interface_count: NetworkInterfaceCount
        attr_accessor local_storage: local_storage
        attr_accessor local_storage_types: local_storage_type_set
        attr_accessor total_local_storage_gb: TotalLocalStorageGB
        attr_accessor baseline_ebs_bandwidth_mbps: BaselineEbsBandwidthMbps
        attr_accessor accelerator_types: accelerator_type_set
        attr_accessor accelerator_count: AcceleratorCount
        attr_accessor accelerator_manufacturers: accelerator_manufacturer_set
        attr_accessor accelerator_names: accelerator_name_set
        attr_accessor accelerator_total_memory_mi_b: AcceleratorTotalMemoryMiB
        attr_accessor network_bandwidth_gbps: NetworkBandwidthGbps
        attr_accessor allowed_instance_types: allowed_instance_type_set
      end
      type instance_requirements = { v_cpu_count: v_cpu_count_range?, memory_mi_b: memory_mi_b?, cpu_manufacturers: cpu_manufacturer_set?, memory_gi_b_per_v_cpu: memory_gi_b_per_v_cpu?, excluded_instance_types: excluded_instance_type_set?, instance_generations: instance_generation_set?, spot_max_price_percentage_over_lowest_price: integer?, on_demand_max_price_percentage_over_lowest_price: integer?, bare_metal: bare_metal?, burstable_performance: burstable_performance?, require_hibernate_support: boolean?, network_interface_count: network_interface_count?, local_storage: local_storage?, local_storage_types: local_storage_type_set?, total_local_storage_gb: total_local_storage_gb?, baseline_ebs_bandwidth_mbps: baseline_ebs_bandwidth_mbps?, accelerator_types: accelerator_type_set?, accelerator_count: accelerator_count?, accelerator_manufacturers: accelerator_manufacturer_set?, accelerator_names: accelerator_name_set?, accelerator_total_memory_mi_b: accelerator_total_memory_mi_b?, network_bandwidth_gbps: network_bandwidth_gbps?, allowed_instance_types: allowed_instance_type_set? }
      type instance_requirements_request = { v_cpu_count: v_cpu_count_range_request, memory_mi_b: memory_mi_b_request, cpu_manufacturers: cpu_manufacturer_set?, memory_gi_b_per_v_cpu: memory_gi_b_per_v_cpu_request?, excluded_instance_types: excluded_instance_type_set?, instance_generations: instance_generation_set?, spot_max_price_percentage_over_lowest_price: integer?, on_demand_max_price_percentage_over_lowest_price: integer?, bare_metal: bare_metal?, burstable_performance: burstable_performance?, require_hibernate_support: boolean?, network_interface_count: network_interface_count_request?, local_storage: local_storage?, local_storage_types: local_storage_type_set?, total_local_storage_gb: total_local_storage_gb_request?, baseline_ebs_bandwidth_mbps: baseline_ebs_bandwidth_mbps_request?, accelerator_types: accelerator_type_set?, accelerator_count: accelerator_count_request?, accelerator_manufacturers: accelerator_manufacturer_set?, accelerator_names: accelerator_name_set?, accelerator_total_memory_mi_b: accelerator_total_memory_mi_b_request?, network_bandwidth_gbps: network_bandwidth_gbps_request?, allowed_instance_types: allowed_instance_type_set? }
      type instance_requirements_with_metadata_request = { architecture_types: architecture_type_set?, virtualization_types: virtualization_type_set?, instance_requirements: instance_requirements_request? }
      type instance_specification = { instance_id: instance_id_with_volume_resolver, exclude_boot_volume: boolean?, exclude_data_volume_ids: volume_id_string_list? }
      class InstanceState
        attr_accessor code: integer
        attr_accessor name: instance_state_name
      end
      class InstanceStateChange
        attr_accessor current_state: InstanceState
        attr_accessor instance_id: string
        attr_accessor previous_state: InstanceState
      end
      type instance_state_change_list = ::Array[InstanceStateChange]
      type instance_state_name = ("pending" | "running" | "shutting-down" | "terminated" | "stopping" | "stopped")
      class InstanceStatus
        attr_accessor availability_zone: string
        attr_accessor outpost_arn: string
        attr_accessor events: instance_status_event_list_output
        attr_accessor instance_id: string
        attr_accessor instance_state: InstanceState
        attr_accessor instance_status: InstanceStatusSummary
        attr_accessor system_status: InstanceStatusSummary
      end
      class InstanceStatusDetails
        attr_accessor impaired_since: date_time
        attr_accessor name: status_name
        attr_accessor status: status_type
      end
      type instance_status_details_list = ::Array[InstanceStatusDetails]
      class InstanceStatusEvent
        attr_accessor instance_event_id: instance_event_id
        attr_accessor code: event_code
        attr_accessor description: string
        attr_accessor not_after: date_time
        attr_accessor not_before: date_time
        attr_accessor not_before_deadline: date_time
      end
      type instance_status_event_list_output = ::Array[InstanceStatusEvent]
      type instance_status_list = ::Array[InstanceStatus]
      class InstanceStatusSummary
        attr_accessor details: instance_status_details_list
        attr_accessor status: summary_status
      end
      type instance_storage_encryption_support = ("unsupported" | "required")
      type instance_storage_flag = bool
      class InstanceStorageInfo
        attr_accessor total_size_in_gb: disk_size
        attr_accessor disks: disk_info_list
        attr_accessor nvme_support: ephemeral_nvme_support
        attr_accessor encryption_support: instance_storage_encryption_support
      end
      type instance_tag_key_set = ::Array[string]
      class InstanceTagNotificationAttribute
        attr_accessor instance_tag_keys: instance_tag_key_set
        attr_accessor include_all_tags_of_instance: boolean
      end
      type instance_type = ("a1.medium" | "a1.large" | "a1.xlarge" | "a1.2xlarge" | "a1.4xlarge" | "a1.metal" | "c1.medium" | "c1.xlarge" | "c3.large" | "c3.xlarge" | "c3.2xlarge" | "c3.4xlarge" | "c3.8xlarge" | "c4.large" | "c4.xlarge" | "c4.2xlarge" | "c4.4xlarge" | "c4.8xlarge" | "c5.large" | "c5.xlarge" | "c5.2xlarge" | "c5.4xlarge" | "c5.9xlarge" | "c5.12xlarge" | "c5.18xlarge" | "c5.24xlarge" | "c5.metal" | "c5a.large" | "c5a.xlarge" | "c5a.2xlarge" | "c5a.4xlarge" | "c5a.8xlarge" | "c5a.12xlarge" | "c5a.16xlarge" | "c5a.24xlarge" | "c5ad.large" | "c5ad.xlarge" | "c5ad.2xlarge" | "c5ad.4xlarge" | "c5ad.8xlarge" | "c5ad.12xlarge" | "c5ad.16xlarge" | "c5ad.24xlarge" | "c5d.large" | "c5d.xlarge" | "c5d.2xlarge" | "c5d.4xlarge" | "c5d.9xlarge" | "c5d.12xlarge" | "c5d.18xlarge" | "c5d.24xlarge" | "c5d.metal" | "c5n.large" | "c5n.xlarge" | "c5n.2xlarge" | "c5n.4xlarge" | "c5n.9xlarge" | "c5n.18xlarge" | "c5n.metal" | "c6g.medium" | "c6g.large" | "c6g.xlarge" | "c6g.2xlarge" | "c6g.4xlarge" | "c6g.8xlarge" | "c6g.12xlarge" | "c6g.16xlarge" | "c6g.metal" | "c6gd.medium" | "c6gd.large" | "c6gd.xlarge" | "c6gd.2xlarge" | "c6gd.4xlarge" | "c6gd.8xlarge" | "c6gd.12xlarge" | "c6gd.16xlarge" | "c6gd.metal" | "c6gn.medium" | "c6gn.large" | "c6gn.xlarge" | "c6gn.2xlarge" | "c6gn.4xlarge" | "c6gn.8xlarge" | "c6gn.12xlarge" | "c6gn.16xlarge" | "c6i.large" | "c6i.xlarge" | "c6i.2xlarge" | "c6i.4xlarge" | "c6i.8xlarge" | "c6i.12xlarge" | "c6i.16xlarge" | "c6i.24xlarge" | "c6i.32xlarge" | "c6i.metal" | "cc1.4xlarge" | "cc2.8xlarge" | "cg1.4xlarge" | "cr1.8xlarge" | "d2.xlarge" | "d2.2xlarge" | "d2.4xlarge" | "d2.8xlarge" | "d3.xlarge" | "d3.2xlarge" | "d3.4xlarge" | "d3.8xlarge" | "d3en.xlarge" | "d3en.2xlarge" | "d3en.4xlarge" | "d3en.6xlarge" | "d3en.8xlarge" | "d3en.12xlarge" | "dl1.24xlarge" | "f1.2xlarge" | "f1.4xlarge" | "f1.16xlarge" | "g2.2xlarge" | "g2.8xlarge" | "g3.4xlarge" | "g3.8xlarge" | "g3.16xlarge" | "g3s.xlarge" | "g4ad.xlarge" | "g4ad.2xlarge" | "g4ad.4xlarge" | "g4ad.8xlarge" | "g4ad.16xlarge" | "g4dn.xlarge" | "g4dn.2xlarge" | "g4dn.4xlarge" | "g4dn.8xlarge" | "g4dn.12xlarge" | "g4dn.16xlarge" | "g4dn.metal" | "g5.xlarge" | "g5.2xlarge" | "g5.4xlarge" | "g5.8xlarge" | "g5.12xlarge" | "g5.16xlarge" | "g5.24xlarge" | "g5.48xlarge" | "g5g.xlarge" | "g5g.2xlarge" | "g5g.4xlarge" | "g5g.8xlarge" | "g5g.16xlarge" | "g5g.metal" | "hi1.4xlarge" | "hpc6a.48xlarge" | "hs1.8xlarge" | "h1.2xlarge" | "h1.4xlarge" | "h1.8xlarge" | "h1.16xlarge" | "i2.xlarge" | "i2.2xlarge" | "i2.4xlarge" | "i2.8xlarge" | "i3.large" | "i3.xlarge" | "i3.2xlarge" | "i3.4xlarge" | "i3.8xlarge" | "i3.16xlarge" | "i3.metal" | "i3en.large" | "i3en.xlarge" | "i3en.2xlarge" | "i3en.3xlarge" | "i3en.6xlarge" | "i3en.12xlarge" | "i3en.24xlarge" | "i3en.metal" | "im4gn.large" | "im4gn.xlarge" | "im4gn.2xlarge" | "im4gn.4xlarge" | "im4gn.8xlarge" | "im4gn.16xlarge" | "inf1.xlarge" | "inf1.2xlarge" | "inf1.6xlarge" | "inf1.24xlarge" | "is4gen.medium" | "is4gen.large" | "is4gen.xlarge" | "is4gen.2xlarge" | "is4gen.4xlarge" | "is4gen.8xlarge" | "m1.small" | "m1.medium" | "m1.large" | "m1.xlarge" | "m2.xlarge" | "m2.2xlarge" | "m2.4xlarge" | "m3.medium" | "m3.large" | "m3.xlarge" | "m3.2xlarge" | "m4.large" | "m4.xlarge" | "m4.2xlarge" | "m4.4xlarge" | "m4.10xlarge" | "m4.16xlarge" | "m5.large" | "m5.xlarge" | "m5.2xlarge" | "m5.4xlarge" | "m5.8xlarge" | "m5.12xlarge" | "m5.16xlarge" | "m5.24xlarge" | "m5.metal" | "m5a.large" | "m5a.xlarge" | "m5a.2xlarge" | "m5a.4xlarge" | "m5a.8xlarge" | "m5a.12xlarge" | "m5a.16xlarge" | "m5a.24xlarge" | "m5ad.large" | "m5ad.xlarge" | "m5ad.2xlarge" | "m5ad.4xlarge" | "m5ad.8xlarge" | "m5ad.12xlarge" | "m5ad.16xlarge" | "m5ad.24xlarge" | "m5d.large" | "m5d.xlarge" | "m5d.2xlarge" | "m5d.4xlarge" | "m5d.8xlarge" | "m5d.12xlarge" | "m5d.16xlarge" | "m5d.24xlarge" | "m5d.metal" | "m5dn.large" | "m5dn.xlarge" | "m5dn.2xlarge" | "m5dn.4xlarge" | "m5dn.8xlarge" | "m5dn.12xlarge" | "m5dn.16xlarge" | "m5dn.24xlarge" | "m5dn.metal" | "m5n.large" | "m5n.xlarge" | "m5n.2xlarge" | "m5n.4xlarge" | "m5n.8xlarge" | "m5n.12xlarge" | "m5n.16xlarge" | "m5n.24xlarge" | "m5n.metal" | "m5zn.large" | "m5zn.xlarge" | "m5zn.2xlarge" | "m5zn.3xlarge" | "m5zn.6xlarge" | "m5zn.12xlarge" | "m5zn.metal" | "m6a.large" | "m6a.xlarge" | "m6a.2xlarge" | "m6a.4xlarge" | "m6a.8xlarge" | "m6a.12xlarge" | "m6a.16xlarge" | "m6a.24xlarge" | "m6a.32xlarge" | "m6a.48xlarge" | "m6g.metal" | "m6g.medium" | "m6g.large" | "m6g.xlarge" | "m6g.2xlarge" | "m6g.4xlarge" | "m6g.8xlarge" | "m6g.12xlarge" | "m6g.16xlarge" | "m6gd.metal" | "m6gd.medium" | "m6gd.large" | "m6gd.xlarge" | "m6gd.2xlarge" | "m6gd.4xlarge" | "m6gd.8xlarge" | "m6gd.12xlarge" | "m6gd.16xlarge" | "m6i.large" | "m6i.xlarge" | "m6i.2xlarge" | "m6i.4xlarge" | "m6i.8xlarge" | "m6i.12xlarge" | "m6i.16xlarge" | "m6i.24xlarge" | "m6i.32xlarge" | "m6i.metal" | "mac1.metal" | "p2.xlarge" | "p2.8xlarge" | "p2.16xlarge" | "p3.2xlarge" | "p3.8xlarge" | "p3.16xlarge" | "p3dn.24xlarge" | "p4d.24xlarge" | "r3.large" | "r3.xlarge" | "r3.2xlarge" | "r3.4xlarge" | "r3.8xlarge" | "r4.large" | "r4.xlarge" | "r4.2xlarge" | "r4.4xlarge" | "r4.8xlarge" | "r4.16xlarge" | "r5.large" | "r5.xlarge" | "r5.2xlarge" | "r5.4xlarge" | "r5.8xlarge" | "r5.12xlarge" | "r5.16xlarge" | "r5.24xlarge" | "r5.metal" | "r5a.large" | "r5a.xlarge" | "r5a.2xlarge" | "r5a.4xlarge" | "r5a.8xlarge" | "r5a.12xlarge" | "r5a.16xlarge" | "r5a.24xlarge" | "r5ad.large" | "r5ad.xlarge" | "r5ad.2xlarge" | "r5ad.4xlarge" | "r5ad.8xlarge" | "r5ad.12xlarge" | "r5ad.16xlarge" | "r5ad.24xlarge" | "r5b.large" | "r5b.xlarge" | "r5b.2xlarge" | "r5b.4xlarge" | "r5b.8xlarge" | "r5b.12xlarge" | "r5b.16xlarge" | "r5b.24xlarge" | "r5b.metal" | "r5d.large" | "r5d.xlarge" | "r5d.2xlarge" | "r5d.4xlarge" | "r5d.8xlarge" | "r5d.12xlarge" | "r5d.16xlarge" | "r5d.24xlarge" | "r5d.metal" | "r5dn.large" | "r5dn.xlarge" | "r5dn.2xlarge" | "r5dn.4xlarge" | "r5dn.8xlarge" | "r5dn.12xlarge" | "r5dn.16xlarge" | "r5dn.24xlarge" | "r5dn.metal" | "r5n.large" | "r5n.xlarge" | "r5n.2xlarge" | "r5n.4xlarge" | "r5n.8xlarge" | "r5n.12xlarge" | "r5n.16xlarge" | "r5n.24xlarge" | "r5n.metal" | "r6g.medium" | "r6g.large" | "r6g.xlarge" | "r6g.2xlarge" | "r6g.4xlarge" | "r6g.8xlarge" | "r6g.12xlarge" | "r6g.16xlarge" | "r6g.metal" | "r6gd.medium" | "r6gd.large" | "r6gd.xlarge" | "r6gd.2xlarge" | "r6gd.4xlarge" | "r6gd.8xlarge" | "r6gd.12xlarge" | "r6gd.16xlarge" | "r6gd.metal" | "r6i.large" | "r6i.xlarge" | "r6i.2xlarge" | "r6i.4xlarge" | "r6i.8xlarge" | "r6i.12xlarge" | "r6i.16xlarge" | "r6i.24xlarge" | "r6i.32xlarge" | "r6i.metal" | "t1.micro" | "t2.nano" | "t2.micro" | "t2.small" | "t2.medium" | "t2.large" | "t2.xlarge" | "t2.2xlarge" | "t3.nano" | "t3.micro" | "t3.small" | "t3.medium" | "t3.large" | "t3.xlarge" | "t3.2xlarge" | "t3a.nano" | "t3a.micro" | "t3a.small" | "t3a.medium" | "t3a.large" | "t3a.xlarge" | "t3a.2xlarge" | "t4g.nano" | "t4g.micro" | "t4g.small" | "t4g.medium" | "t4g.large" | "t4g.xlarge" | "t4g.2xlarge" | "u-6tb1.56xlarge" | "u-6tb1.112xlarge" | "u-9tb1.112xlarge" | "u-12tb1.112xlarge" | "u-6tb1.metal" | "u-9tb1.metal" | "u-12tb1.metal" | "u-18tb1.metal" | "u-24tb1.metal" | "vt1.3xlarge" | "vt1.6xlarge" | "vt1.24xlarge" | "x1.16xlarge" | "x1.32xlarge" | "x1e.xlarge" | "x1e.2xlarge" | "x1e.4xlarge" | "x1e.8xlarge" | "x1e.16xlarge" | "x1e.32xlarge" | "x2iezn.2xlarge" | "x2iezn.4xlarge" | "x2iezn.6xlarge" | "x2iezn.8xlarge" | "x2iezn.12xlarge" | "x2iezn.metal" | "x2gd.medium" | "x2gd.large" | "x2gd.xlarge" | "x2gd.2xlarge" | "x2gd.4xlarge" | "x2gd.8xlarge" | "x2gd.12xlarge" | "x2gd.16xlarge" | "x2gd.metal" | "z1d.large" | "z1d.xlarge" | "z1d.2xlarge" | "z1d.3xlarge" | "z1d.6xlarge" | "z1d.12xlarge" | "z1d.metal" | "x2idn.16xlarge" | "x2idn.24xlarge" | "x2idn.32xlarge" | "x2iedn.xlarge" | "x2iedn.2xlarge" | "x2iedn.4xlarge" | "x2iedn.8xlarge" | "x2iedn.16xlarge" | "x2iedn.24xlarge" | "x2iedn.32xlarge" | "c6a.large" | "c6a.xlarge" | "c6a.2xlarge" | "c6a.4xlarge" | "c6a.8xlarge" | "c6a.12xlarge" | "c6a.16xlarge" | "c6a.24xlarge" | "c6a.32xlarge" | "c6a.48xlarge" | "c6a.metal" | "m6a.metal" | "i4i.large" | "i4i.xlarge" | "i4i.2xlarge" | "i4i.4xlarge" | "i4i.8xlarge" | "i4i.16xlarge" | "i4i.32xlarge" | "i4i.metal" | "x2idn.metal" | "x2iedn.metal" | "c7g.medium" | "c7g.large" | "c7g.xlarge" | "c7g.2xlarge" | "c7g.4xlarge" | "c7g.8xlarge" | "c7g.12xlarge" | "c7g.16xlarge" | "mac2.metal" | "c6id.large" | "c6id.xlarge" | "c6id.2xlarge" | "c6id.4xlarge" | "c6id.8xlarge" | "c6id.12xlarge" | "c6id.16xlarge" | "c6id.24xlarge" | "c6id.32xlarge" | "c6id.metal" | "m6id.large" | "m6id.xlarge" | "m6id.2xlarge" | "m6id.4xlarge" | "m6id.8xlarge" | "m6id.12xlarge" | "m6id.16xlarge" | "m6id.24xlarge" | "m6id.32xlarge" | "m6id.metal" | "r6id.large" | "r6id.xlarge" | "r6id.2xlarge" | "r6id.4xlarge" | "r6id.8xlarge" | "r6id.12xlarge" | "r6id.16xlarge" | "r6id.24xlarge" | "r6id.32xlarge" | "r6id.metal" | "r6a.large" | "r6a.xlarge" | "r6a.2xlarge" | "r6a.4xlarge" | "r6a.8xlarge" | "r6a.12xlarge" | "r6a.16xlarge" | "r6a.24xlarge" | "r6a.32xlarge" | "r6a.48xlarge" | "r6a.metal" | "p4de.24xlarge" | "u-3tb1.56xlarge" | "u-18tb1.112xlarge" | "u-24tb1.112xlarge" | "trn1.2xlarge" | "trn1.32xlarge" | "hpc6id.32xlarge" | "c6in.large" | "c6in.xlarge" | "c6in.2xlarge" | "c6in.4xlarge" | "c6in.8xlarge" | "c6in.12xlarge" | "c6in.16xlarge" | "c6in.24xlarge" | "c6in.32xlarge" | "m6in.large" | "m6in.xlarge" | "m6in.2xlarge" | "m6in.4xlarge" | "m6in.8xlarge" | "m6in.12xlarge" | "m6in.16xlarge" | "m6in.24xlarge" | "m6in.32xlarge" | "m6idn.large" | "m6idn.xlarge" | "m6idn.2xlarge" | "m6idn.4xlarge" | "m6idn.8xlarge" | "m6idn.12xlarge" | "m6idn.16xlarge" | "m6idn.24xlarge" | "m6idn.32xlarge" | "r6in.large" | "r6in.xlarge" | "r6in.2xlarge" | "r6in.4xlarge" | "r6in.8xlarge" | "r6in.12xlarge" | "r6in.16xlarge" | "r6in.24xlarge" | "r6in.32xlarge" | "r6idn.large" | "r6idn.xlarge" | "r6idn.2xlarge" | "r6idn.4xlarge" | "r6idn.8xlarge" | "r6idn.12xlarge" | "r6idn.16xlarge" | "r6idn.24xlarge" | "r6idn.32xlarge" | "c7g.metal" | "m7g.medium" | "m7g.large" | "m7g.xlarge" | "m7g.2xlarge" | "m7g.4xlarge" | "m7g.8xlarge" | "m7g.12xlarge" | "m7g.16xlarge" | "m7g.metal" | "r7g.medium" | "r7g.large" | "r7g.xlarge" | "r7g.2xlarge" | "r7g.4xlarge" | "r7g.8xlarge" | "r7g.12xlarge" | "r7g.16xlarge" | "r7g.metal" | "c6in.metal" | "m6in.metal" | "m6idn.metal" | "r6in.metal" | "r6idn.metal" | "inf2.xlarge" | "inf2.8xlarge" | "inf2.24xlarge" | "inf2.48xlarge" | "trn1n.32xlarge" | "i4g.large" | "i4g.xlarge" | "i4g.2xlarge" | "i4g.4xlarge" | "i4g.8xlarge" | "i4g.16xlarge")
      type instance_type_hypervisor = ("nitro" | "xen")
      class InstanceTypeInfo
        attr_accessor instance_type: instance_type
        attr_accessor current_generation: current_generation_flag
        attr_accessor free_tier_eligible: free_tier_eligible_flag
        attr_accessor supported_usage_classes: usage_class_type_list
        attr_accessor supported_root_device_types: root_device_type_list
        attr_accessor supported_virtualization_types: virtualization_type_list
        attr_accessor bare_metal: bare_metal_flag
        attr_accessor hypervisor: instance_type_hypervisor
        attr_accessor processor_info: ProcessorInfo
        attr_accessor v_cpu_info: VCpuInfo
        attr_accessor memory_info: MemoryInfo
        attr_accessor instance_storage_supported: instance_storage_flag
        attr_accessor instance_storage_info: InstanceStorageInfo
        attr_accessor ebs_info: EbsInfo
        attr_accessor network_info: NetworkInfo
        attr_accessor gpu_info: GpuInfo
        attr_accessor fpga_info: FpgaInfo
        attr_accessor placement_group_info: PlacementGroupInfo
        attr_accessor inference_accelerator_info: InferenceAcceleratorInfo
        attr_accessor hibernation_supported: hibernation_flag
        attr_accessor burstable_performance_supported: burstable_performance_flag
        attr_accessor dedicated_hosts_supported: dedicated_host_flag
        attr_accessor auto_recovery_supported: auto_recovery_flag
        attr_accessor supported_boot_modes: boot_mode_type_list
      end
      class InstanceTypeInfoFromInstanceRequirements
        attr_accessor instance_type: string
      end
      type instance_type_info_from_instance_requirements_set = ::Array[InstanceTypeInfoFromInstanceRequirements]
      type instance_type_info_list = ::Array[InstanceTypeInfo]
      type instance_type_list = ::Array[instance_type]
      class InstanceTypeOffering
        attr_accessor instance_type: instance_type
        attr_accessor location_type: location_type
        attr_accessor location: location
      end
      type instance_type_offerings_list = ::Array[InstanceTypeOffering]
      type instance_types = ::Array[string]
      type instance_types_list = ::Array[string]
      class InstanceUsage
        attr_accessor account_id: string
        attr_accessor used_instance_count: integer
      end
      type instance_usage_set = ::Array[InstanceUsage]
      type integer = ::Integer
      type integer_with_constraints = ::Integer
      type integrate_services = { athena_integrations: athena_integrations_set? }
      type interface_permission_type = ("INSTANCE-ATTACH" | "EIP-ASSOCIATE")
      type interface_protocol_type = ("VLAN" | "GRE")
      class InternetGateway
        attr_accessor attachments: internet_gateway_attachment_list
        attr_accessor internet_gateway_id: string
        attr_accessor owner_id: string
        attr_accessor tags: tag_list_output
      end
      class InternetGatewayAttachment
        attr_accessor state: attachment_status
        attr_accessor vpc_id: string
      end
      type internet_gateway_attachment_list = ::Array[InternetGatewayAttachment]
      type internet_gateway_id = ::String
      type internet_gateway_id_list = ::Array[internet_gateway_id]
      type internet_gateway_list_output = ::Array[InternetGateway]
      type ip_address = ::String
      type ip_address_list = ::Array[ip_address]
      type ip_address_type = ("ipv4" | "dualstack" | "ipv6")
      type ip_list = ::Array[string]
      type ip_permission = { from_port: integer?, ip_protocol: string?, ip_ranges: ip_range_list_input?, ipv_6_ranges: ipv_6_range_list_input?, prefix_list_ids: prefix_list_id_list_input?, to_port: integer?, user_id_group_pairs: user_id_group_pair_list_input? }
      class IpPermission
        attr_accessor from_port: integer
        attr_accessor ip_protocol: string
        attr_accessor ip_ranges: ip_range_list_output
        attr_accessor ipv_6_ranges: ipv_6_range_list_output
        attr_accessor prefix_list_ids: prefix_list_id_list_output
        attr_accessor to_port: integer
        attr_accessor user_id_group_pairs: user_id_group_pair_list_output
      end
      type ip_permission_list_input = ::Array[ip_permission]
      type ip_permission_list_output = ::Array[IpPermission]
      type ip_prefix_list = ::Array[string]
      type ip_range = { cidr_ip: string?, description: string? }
      class IpRange
        attr_accessor cidr_ip: string
        attr_accessor description: string
      end
      type ip_range_list_input = ::Array[ip_range]
      type ip_range_list_output = ::Array[IpRange]
      type ip_ranges = ::Array[string]
      class Ipam
        attr_accessor owner_id: string
        attr_accessor ipam_id: ipam_id
        attr_accessor ipam_arn: resource_arn
        attr_accessor ipam_region: string
        attr_accessor public_default_scope_id: ipam_scope_id
        attr_accessor private_default_scope_id: ipam_scope_id
        attr_accessor scope_count: integer
        attr_accessor description: string
        attr_accessor operating_regions: ipam_operating_region_set
        attr_accessor state: ipam_state
        attr_accessor tags: tag_list_output
        attr_accessor default_resource_discovery_id: ipam_resource_discovery_id
        attr_accessor default_resource_discovery_association_id: ipam_resource_discovery_association_id
        attr_accessor resource_discovery_association_count: integer
      end
      type ipam_address_history_max_results = ::Integer
      class IpamAddressHistoryRecord
        attr_accessor resource_owner_id: string
        attr_accessor resource_region: string
        attr_accessor resource_type: ipam_address_history_resource_type
        attr_accessor resource_id: string
        attr_accessor resource_cidr: string
        attr_accessor resource_name: string
        attr_accessor resource_compliance_status: ipam_compliance_status
        attr_accessor resource_overlap_status: ipam_overlap_status
        attr_accessor vpc_id: string
        attr_accessor sampled_start_time: millisecond_date_time
        attr_accessor sampled_end_time: millisecond_date_time
      end
      type ipam_address_history_record_set = ::Array[IpamAddressHistoryRecord]
      type ipam_address_history_resource_type = ("eip" | "vpc" | "subnet" | "network-interface" | "instance")
      type ipam_associated_resource_discovery_status = ("active" | "not-found")
      type ipam_cidr_authorization_context = { message: string?, signature: string? }
      type ipam_compliance_status = ("compliant" | "noncompliant" | "unmanaged" | "ignored")
      class IpamDiscoveredAccount
        attr_accessor account_id: string
        attr_accessor discovery_region: string
        attr_accessor failure_reason: IpamDiscoveryFailureReason
        attr_accessor last_attempted_discovery_time: millisecond_date_time
        attr_accessor last_successful_discovery_time: millisecond_date_time
      end
      type ipam_discovered_account_set = ::Array[IpamDiscoveredAccount]
      class IpamDiscoveredResourceCidr
        attr_accessor ipam_resource_discovery_id: ipam_resource_discovery_id
        attr_accessor resource_region: string
        attr_accessor resource_id: string
        attr_accessor resource_owner_id: string
        attr_accessor resource_cidr: string
        attr_accessor resource_type: ipam_resource_type
        attr_accessor resource_tags: ipam_resource_tag_list
        attr_accessor ip_usage: boxed_double
        attr_accessor vpc_id: string
        attr_accessor sample_time: millisecond_date_time
      end
      type ipam_discovered_resource_cidr_set = ::Array[IpamDiscoveredResourceCidr]
      type ipam_discovery_failure_code = ("assume-role-failure" | "throttling-failure" | "unauthorized-failure")
      class IpamDiscoveryFailureReason
        attr_accessor code: ipam_discovery_failure_code
        attr_accessor message: string
      end
      type ipam_id = ::String
      type ipam_management_state = ("managed" | "unmanaged" | "ignored")
      type ipam_max_results = ::Integer
      type ipam_netmask_length = ::Integer
      class IpamOperatingRegion
        attr_accessor region_name: string
      end
      type ipam_operating_region_set = ::Array[IpamOperatingRegion]
      type ipam_overlap_status = ("overlapping" | "nonoverlapping" | "ignored")
      class IpamPool
        attr_accessor owner_id: string
        attr_accessor ipam_pool_id: ipam_pool_id
        attr_accessor source_ipam_pool_id: ipam_pool_id
        attr_accessor ipam_pool_arn: resource_arn
        attr_accessor ipam_scope_arn: resource_arn
        attr_accessor ipam_scope_type: ipam_scope_type
        attr_accessor ipam_arn: resource_arn
        attr_accessor ipam_region: string
        attr_accessor locale: string
        attr_accessor pool_depth: integer
        attr_accessor state: ipam_pool_state
        attr_accessor state_message: string
        attr_accessor description: string
        attr_accessor auto_import: boolean
        attr_accessor publicly_advertisable: boolean
        attr_accessor address_family: address_family
        attr_accessor allocation_min_netmask_length: ipam_netmask_length
        attr_accessor allocation_max_netmask_length: ipam_netmask_length
        attr_accessor allocation_default_netmask_length: ipam_netmask_length
        attr_accessor allocation_resource_tags: ipam_resource_tag_list
        attr_accessor tags: tag_list_output
        attr_accessor aws_service: ipam_pool_aws_service
        attr_accessor public_ip_source: ipam_pool_public_ip_source
      end
      class IpamPoolAllocation
        attr_accessor cidr: string
        attr_accessor ipam_pool_allocation_id: ipam_pool_allocation_id
        attr_accessor description: string
        attr_accessor resource_id: string
        attr_accessor resource_type: ipam_pool_allocation_resource_type
        attr_accessor resource_region: string
        attr_accessor resource_owner: string
      end
      type ipam_pool_allocation_disallowed_cidrs = ::Array[string]
      type ipam_pool_allocation_id = ::String
      type ipam_pool_allocation_resource_type = ("ipam-pool" | "vpc" | "ec2-public-ipv4-pool" | "custom")
      type ipam_pool_allocation_set_output = ::Array[IpamPoolAllocation]
      type ipam_pool_aws_service = ("ec2")
      class IpamPoolCidr
        attr_accessor cidr: string
        attr_accessor state: ipam_pool_cidr_state
        attr_accessor failure_reason: IpamPoolCidrFailureReason
        attr_accessor ipam_pool_cidr_id: ipam_pool_cidr_id
        attr_accessor netmask_length: integer
      end
      type ipam_pool_cidr_failure_code = ("cidr-not-available" | "limit-exceeded")
      class IpamPoolCidrFailureReason
        attr_accessor code: ipam_pool_cidr_failure_code
        attr_accessor message: string
      end
      type ipam_pool_cidr_id = ::String
      type ipam_pool_cidr_set_output = ::Array[IpamPoolCidr]
      type ipam_pool_cidr_state = ("pending-provision" | "provisioned" | "failed-provision" | "pending-deprovision" | "deprovisioned" | "failed-deprovision" | "pending-import" | "failed-import")
      type ipam_pool_id = ::String
      type ipam_pool_public_ip_source = ("amazon" | "byoip")
      type ipam_pool_set_output = ::Array[IpamPool]
      type ipam_pool_state = ("create-in-progress" | "create-complete" | "create-failed" | "modify-in-progress" | "modify-complete" | "modify-failed" | "delete-in-progress" | "delete-complete" | "delete-failed" | "isolate-in-progress" | "isolate-complete" | "restore-in-progress")
      class IpamResourceCidr
        attr_accessor ipam_id: ipam_id
        attr_accessor ipam_scope_id: ipam_scope_id
        attr_accessor ipam_pool_id: ipam_pool_id
        attr_accessor resource_region: string
        attr_accessor resource_owner_id: string
        attr_accessor resource_id: string
        attr_accessor resource_name: string
        attr_accessor resource_cidr: string
        attr_accessor resource_type: ipam_resource_type
        attr_accessor resource_tags: ipam_resource_tag_list
        attr_accessor ip_usage: boxed_double
        attr_accessor compliance_status: ipam_compliance_status
        attr_accessor management_state: ipam_management_state
        attr_accessor overlap_status: ipam_overlap_status
        attr_accessor vpc_id: string
      end
      type ipam_resource_cidr_set_output = ::Array[IpamResourceCidr]
      class IpamResourceDiscovery
        attr_accessor owner_id: string
        attr_accessor ipam_resource_discovery_id: ipam_resource_discovery_id
        attr_accessor ipam_resource_discovery_arn: string
        attr_accessor ipam_resource_discovery_region: string
        attr_accessor description: string
        attr_accessor operating_regions: ipam_operating_region_set
        attr_accessor is_default: boolean
        attr_accessor state: ipam_resource_discovery_state
        attr_accessor tags: tag_list_output
      end
      class IpamResourceDiscoveryAssociation
        attr_accessor owner_id: string
        attr_accessor ipam_resource_discovery_association_id: ipam_resource_discovery_association_id
        attr_accessor ipam_resource_discovery_association_arn: string
        attr_accessor ipam_resource_discovery_id: ipam_resource_discovery_id
        attr_accessor ipam_id: ipam_id
        attr_accessor ipam_arn: resource_arn
        attr_accessor ipam_region: string
        attr_accessor is_default: boolean
        attr_accessor resource_discovery_status: ipam_associated_resource_discovery_status
        attr_accessor state: ipam_resource_discovery_association_state
        attr_accessor tags: tag_list_output
      end
      type ipam_resource_discovery_association_id = ::String
      type ipam_resource_discovery_association_set_output = ::Array[IpamResourceDiscoveryAssociation]
      type ipam_resource_discovery_association_state = ("associate-in-progress" | "associate-complete" | "associate-failed" | "disassociate-in-progress" | "disassociate-complete" | "disassociate-failed" | "isolate-in-progress" | "isolate-complete" | "restore-in-progress")
      type ipam_resource_discovery_id = ::String
      type ipam_resource_discovery_set_output = ::Array[IpamResourceDiscovery]
      type ipam_resource_discovery_state = ("create-in-progress" | "create-complete" | "create-failed" | "modify-in-progress" | "modify-complete" | "modify-failed" | "delete-in-progress" | "delete-complete" | "delete-failed" | "isolate-in-progress" | "isolate-complete" | "restore-in-progress")
      class IpamResourceTag
        attr_accessor key: string
        attr_accessor value: string
      end
      type ipam_resource_tag_list = ::Array[IpamResourceTag]
      type ipam_resource_type = ("vpc" | "subnet" | "eip" | "public-ipv4-pool" | "ipv6-pool")
      class IpamScope
        attr_accessor owner_id: string
        attr_accessor ipam_scope_id: ipam_scope_id
        attr_accessor ipam_scope_arn: resource_arn
        attr_accessor ipam_arn: resource_arn
        attr_accessor ipam_region: string
        attr_accessor ipam_scope_type: ipam_scope_type
        attr_accessor is_default: boolean
        attr_accessor description: string
        attr_accessor pool_count: integer
        attr_accessor state: ipam_scope_state
        attr_accessor tags: tag_list_output
      end
      type ipam_scope_id = ::String
      type ipam_scope_set_output = ::Array[IpamScope]
      type ipam_scope_state = ("create-in-progress" | "create-complete" | "create-failed" | "modify-in-progress" | "modify-complete" | "modify-failed" | "delete-in-progress" | "delete-complete" | "delete-failed" | "isolate-in-progress" | "isolate-complete" | "restore-in-progress")
      type ipam_scope_type = ("public" | "private")
      type ipam_set_output = ::Array[Ipam]
      type ipam_state = ("create-in-progress" | "create-complete" | "create-failed" | "modify-in-progress" | "modify-complete" | "modify-failed" | "delete-in-progress" | "delete-complete" | "delete-failed" | "isolate-in-progress" | "isolate-complete" | "restore-in-progress")
      type ipv_4_pool_coip_id = ::String
      type ipv_4_pool_ec2_id = ::String
      type ipv_4_prefix_list_input = ::Array[ipv_4_prefix_specification_request]
      type ipv_4_prefix_list_output = ::Array[Ipv4PrefixSpecificationRequest]
      type ipv_4_prefix_list_response = ::Array[Ipv4PrefixSpecificationResponse]
      class Ipv4PrefixSpecification
        attr_accessor ipv_4_prefix: string
      end
      type ipv_4_prefix_specification_request = { ipv_4_prefix: string? }
      class Ipv4PrefixSpecificationRequest
        attr_accessor ipv_4_prefix: string
      end
      class Ipv4PrefixSpecificationResponse
        attr_accessor ipv_4_prefix: string
      end
      type ipv_4_prefixes_list = ::Array[Ipv4PrefixSpecification]
      type ipv_6_address = ::String
      type ipv_6_address_list = ::Array[string]
      class Ipv6CidrAssociation
        attr_accessor ipv_6_cidr: string
        attr_accessor associated_resource: string
      end
      type ipv_6_cidr_association_set = ::Array[Ipv6CidrAssociation]
      class Ipv6CidrBlock
        attr_accessor ipv_6_cidr_block: string
      end
      type ipv_6_cidr_block_set = ::Array[Ipv6CidrBlock]
      type ipv_6_flag = bool
      class Ipv6Pool
        attr_accessor pool_id: string
        attr_accessor description: string
        attr_accessor pool_cidr_blocks: pool_cidr_blocks_set
        attr_accessor tags: tag_list_output
      end
      type ipv_6_pool_ec2_id = ::String
      type ipv_6_pool_id_list = ::Array[ipv_6_pool_ec2_id]
      type ipv_6_pool_max_results = ::Integer
      type ipv_6_pool_set = ::Array[Ipv6Pool]
      type ipv_6_prefix_list_input = ::Array[ipv_6_prefix_specification_request]
      type ipv_6_prefix_list_output = ::Array[Ipv6PrefixSpecificationRequest]
      type ipv_6_prefix_list_response = ::Array[Ipv6PrefixSpecificationResponse]
      class Ipv6PrefixSpecification
        attr_accessor ipv_6_prefix: string
      end
      type ipv_6_prefix_specification_request = { ipv_6_prefix: string? }
      class Ipv6PrefixSpecificationRequest
        attr_accessor ipv_6_prefix: string
      end
      class Ipv6PrefixSpecificationResponse
        attr_accessor ipv_6_prefix: string
      end
      type ipv_6_prefixes_list = ::Array[Ipv6PrefixSpecification]
      type ipv_6_range = { cidr_ipv_6: string?, description: string? }
      class Ipv6Range
        attr_accessor cidr_ipv_6: string
        attr_accessor description: string
      end
      type ipv_6_range_list_input = ::Array[ipv_6_range]
      type ipv_6_range_list_output = ::Array[Ipv6Range]
      type ipv_6_support_value = ("enable" | "disable")
      type kernel_id = ::String
      type key_format = ("pem" | "ppk")
      type key_name_string_list = ::Array[key_pair_name]
      class KeyPair
        attr_accessor key_fingerprint: string
        attr_accessor key_material: sensitive_user_data
        attr_accessor key_name: string
        attr_accessor key_pair_id: string
        attr_accessor tags: tag_list_output
      end
      type key_pair_id = ::String
      type key_pair_id_string_list = ::Array[key_pair_id]
      class KeyPairInfo
        attr_accessor key_pair_id: string
        attr_accessor key_fingerprint: string
        attr_accessor key_name: string
        attr_accessor key_type: key_type
        attr_accessor tags: tag_list_output
        attr_accessor public_key: string
        attr_accessor create_time: millisecond_date_time
      end
      type key_pair_list = ::Array[KeyPairInfo]
      type key_pair_name = ::String
      type key_type = ("rsa" | "ed25519")
      type kms_key_id = ::String
      class LastError
        attr_accessor message: string
        attr_accessor code: string
      end
      class LaunchPermission
        attr_accessor group: permission_group
        attr_accessor user_id: string
        attr_accessor organization_arn: string
        attr_accessor organizational_unit_arn: string
      end
      type launch_permission = { group: permission_group?, user_id: string?, organization_arn: string?, organizational_unit_arn: string? }
      type launch_permission_list_output = ::Array[LaunchPermission]
      type launch_permission_list_input = ::Array[launch_permission]
      type launch_permission_modifications = { add: launch_permission_list_input?, remove: launch_permission_list_input? }
      class LaunchSpecification
        attr_accessor user_data: sensitive_user_data
        attr_accessor security_groups: group_identifier_list_output
        attr_accessor addressing_type: string
        attr_accessor block_device_mappings: block_device_mapping_list_output
        attr_accessor ebs_optimized: boolean
        attr_accessor iam_instance_profile: IamInstanceProfileSpecification
        attr_accessor image_id: string
        attr_accessor instance_type: instance_type
        attr_accessor kernel_id: string
        attr_accessor key_name: string
        attr_accessor network_interfaces: instance_network_interface_specification_list_output
        attr_accessor placement: SpotPlacement
        attr_accessor ramdisk_id: string
        attr_accessor subnet_id: string
        attr_accessor monitoring: RunInstancesMonitoringEnabled
      end
      type launch_specs_list_output = ::Array[SpotFleetLaunchSpecification]
      type launch_specs_list_input = ::Array[spot_fleet_launch_specification]
      class LaunchTemplate
        attr_accessor launch_template_id: string
        attr_accessor launch_template_name: launch_template_name
        attr_accessor create_time: date_time
        attr_accessor created_by: string
        attr_accessor default_version_number: long
        attr_accessor latest_version_number: long
        attr_accessor tags: tag_list_output
      end
      class LaunchTemplateAndOverridesResponse
        attr_accessor launch_template_specification: FleetLaunchTemplateSpecification
        attr_accessor overrides: FleetLaunchTemplateOverrides
      end
      type launch_template_auto_recovery_state = ("default" | "disabled")
      class LaunchTemplateBlockDeviceMapping
        attr_accessor device_name: string
        attr_accessor virtual_name: string
        attr_accessor ebs: LaunchTemplateEbsBlockDevice
        attr_accessor no_device: string
      end
      type launch_template_block_device_mapping_list = ::Array[LaunchTemplateBlockDeviceMapping]
      type launch_template_block_device_mapping_request = { device_name: string?, virtual_name: string?, ebs: launch_template_ebs_block_device_request?, no_device: string? }
      type launch_template_block_device_mapping_request_list = ::Array[launch_template_block_device_mapping_request]
      type launch_template_capacity_reservation_specification_request = { capacity_reservation_preference: capacity_reservation_preference?, capacity_reservation_target: capacity_reservation_target? }
      class LaunchTemplateCapacityReservationSpecificationResponse
        attr_accessor capacity_reservation_preference: capacity_reservation_preference
        attr_accessor capacity_reservation_target: CapacityReservationTargetResponse
      end
      class LaunchTemplateConfig
        attr_accessor launch_template_specification: FleetLaunchTemplateSpecification
        attr_accessor overrides: launch_template_overrides_list_output
      end
      type launch_template_config = { launch_template_specification: fleet_launch_template_specification?, overrides: launch_template_overrides_list_input? }
      type launch_template_config_list_output = ::Array[LaunchTemplateConfig]
      type launch_template_config_list_input = ::Array[launch_template_config]
      class LaunchTemplateCpuOptions
        attr_accessor core_count: integer
        attr_accessor threads_per_core: integer
        attr_accessor amd_sev_snp: amd_sev_snp_specification
      end
      type launch_template_cpu_options_request = { core_count: integer?, threads_per_core: integer?, amd_sev_snp: amd_sev_snp_specification? }
      class LaunchTemplateEbsBlockDevice
        attr_accessor encrypted: boolean
        attr_accessor delete_on_termination: boolean
        attr_accessor iops: integer
        attr_accessor kms_key_id: kms_key_id
        attr_accessor snapshot_id: snapshot_id
        attr_accessor volume_size: integer
        attr_accessor volume_type: volume_type
        attr_accessor throughput: integer
      end
      type launch_template_ebs_block_device_request = { encrypted: boolean?, delete_on_termination: boolean?, iops: integer?, kms_key_id: kms_key_id?, snapshot_id: snapshot_id?, volume_size: integer?, volume_type: volume_type?, throughput: integer? }
      type launch_template_elastic_inference_accelerator = { type: string, count: launch_template_elastic_inference_accelerator_count? }
      type launch_template_elastic_inference_accelerator_count = ::Integer
      type launch_template_elastic_inference_accelerator_list = ::Array[launch_template_elastic_inference_accelerator]
      class LaunchTemplateElasticInferenceAcceleratorResponse
        attr_accessor type_: string
        attr_accessor count: integer
      end
      type launch_template_elastic_inference_accelerator_response_list = ::Array[LaunchTemplateElasticInferenceAcceleratorResponse]
      class LaunchTemplateEnclaveOptions
        attr_accessor enabled: boolean
      end
      type launch_template_enclave_options_request = { enabled: boolean? }
      type launch_template_error_code = ("launchTemplateIdDoesNotExist" | "launchTemplateIdMalformed" | "launchTemplateNameDoesNotExist" | "launchTemplateNameMalformed" | "launchTemplateVersionDoesNotExist" | "unexpectedError")
      class LaunchTemplateHibernationOptions
        attr_accessor configured: boolean
      end
      type launch_template_hibernation_options_request = { configured: boolean? }
      type launch_template_http_tokens_state = ("optional" | "required")
      class LaunchTemplateIamInstanceProfileSpecification
        attr_accessor arn: string
        attr_accessor name: string
      end
      type launch_template_iam_instance_profile_specification_request = { arn: string?, name: string? }
      type launch_template_id = ::String
      type launch_template_id_string_list = ::Array[launch_template_id]
      class LaunchTemplateInstanceMaintenanceOptions
        attr_accessor auto_recovery: launch_template_auto_recovery_state
      end
      type launch_template_instance_maintenance_options_request = { auto_recovery: launch_template_auto_recovery_state? }
      class LaunchTemplateInstanceMarketOptions
        attr_accessor market_type: market_type
        attr_accessor spot_options: LaunchTemplateSpotMarketOptions
      end
      type launch_template_instance_market_options_request = { market_type: market_type?, spot_options: launch_template_spot_market_options_request? }
      type launch_template_instance_metadata_endpoint_state = ("disabled" | "enabled")
      class LaunchTemplateInstanceMetadataOptions
        attr_accessor state: launch_template_instance_metadata_options_state
        attr_accessor http_tokens: launch_template_http_tokens_state
        attr_accessor http_put_response_hop_limit: integer
        attr_accessor http_endpoint: launch_template_instance_metadata_endpoint_state
        attr_accessor http_protocol_ipv_6: launch_template_instance_metadata_protocol_ipv_6
        attr_accessor instance_metadata_tags: launch_template_instance_metadata_tags_state
      end
      type launch_template_instance_metadata_options_request = { http_tokens: launch_template_http_tokens_state?, http_put_response_hop_limit: integer?, http_endpoint: launch_template_instance_metadata_endpoint_state?, http_protocol_ipv_6: launch_template_instance_metadata_protocol_ipv_6?, instance_metadata_tags: launch_template_instance_metadata_tags_state? }
      type launch_template_instance_metadata_options_state = ("pending" | "applied")
      type launch_template_instance_metadata_protocol_ipv_6 = ("disabled" | "enabled")
      type launch_template_instance_metadata_tags_state = ("disabled" | "enabled")
      class LaunchTemplateInstanceNetworkInterfaceSpecification
        attr_accessor associate_carrier_ip_address: boolean
        attr_accessor associate_public_ip_address: boolean
        attr_accessor delete_on_termination: boolean
        attr_accessor description: string
        attr_accessor device_index: integer
        attr_accessor groups: group_id_string_list
        attr_accessor interface_type: string
        attr_accessor ipv_6_address_count: integer
        attr_accessor ipv_6_addresses: instance_ipv_6_address_list_output
        attr_accessor network_interface_id: network_interface_id
        attr_accessor private_ip_address: string
        attr_accessor private_ip_addresses: private_ip_address_specification_list_output
        attr_accessor secondary_private_ip_address_count: integer
        attr_accessor subnet_id: subnet_id
        attr_accessor network_card_index: integer
        attr_accessor ipv_4_prefixes: ipv_4_prefix_list_response
        attr_accessor ipv_4_prefix_count: integer
        attr_accessor ipv_6_prefixes: ipv_6_prefix_list_response
        attr_accessor ipv_6_prefix_count: integer
      end
      type launch_template_instance_network_interface_specification_list = ::Array[LaunchTemplateInstanceNetworkInterfaceSpecification]
      type launch_template_instance_network_interface_specification_request = { associate_carrier_ip_address: boolean?, associate_public_ip_address: boolean?, delete_on_termination: boolean?, description: string?, device_index: integer?, groups: security_group_id_string_list?, interface_type: string?, ipv_6_address_count: integer?, ipv_6_addresses: instance_ipv_6_address_list_request?, network_interface_id: network_interface_id?, private_ip_address: string?, private_ip_addresses: private_ip_address_specification_list_input?, secondary_private_ip_address_count: integer?, subnet_id: subnet_id?, network_card_index: integer?, ipv_4_prefixes: ipv_4_prefix_list_input?, ipv_4_prefix_count: integer?, ipv_6_prefixes: ipv_6_prefix_list_input?, ipv_6_prefix_count: integer? }
      type launch_template_instance_network_interface_specification_request_list = ::Array[launch_template_instance_network_interface_specification_request]
      class LaunchTemplateLicenseConfiguration
        attr_accessor license_configuration_arn: string
      end
      type launch_template_license_configuration_request = { license_configuration_arn: string? }
      type launch_template_license_list = ::Array[LaunchTemplateLicenseConfiguration]
      type launch_template_license_specification_list_request = ::Array[launch_template_license_configuration_request]
      type launch_template_name = ::String
      type launch_template_name_string_list = ::Array[launch_template_name]
      class LaunchTemplateOverrides
        attr_accessor instance_type: instance_type
        attr_accessor spot_price: string
        attr_accessor subnet_id: subnet_id
        attr_accessor availability_zone: string
        attr_accessor weighted_capacity: double
        attr_accessor priority: double
        attr_accessor instance_requirements: InstanceRequirements
      end
      type launch_template_overrides = { instance_type: instance_type?, spot_price: string?, subnet_id: subnet_id?, availability_zone: string?, weighted_capacity: double?, priority: double?, instance_requirements: instance_requirements? }
      type launch_template_overrides_list_output = ::Array[LaunchTemplateOverrides]
      type launch_template_overrides_list_input = ::Array[launch_template_overrides]
      class LaunchTemplatePlacement
        attr_accessor availability_zone: string
        attr_accessor affinity: string
        attr_accessor group_name: string
        attr_accessor host_id: string
        attr_accessor tenancy: tenancy
        attr_accessor spread_domain: string
        attr_accessor host_resource_group_arn: string
        attr_accessor partition_number: integer
        attr_accessor group_id: placement_group_id
      end
      type launch_template_placement_request = { availability_zone: string?, affinity: string?, group_name: placement_group_name?, host_id: dedicated_host_id?, tenancy: tenancy?, spread_domain: string?, host_resource_group_arn: string?, partition_number: integer?, group_id: placement_group_id? }
      class LaunchTemplatePrivateDnsNameOptions
        attr_accessor hostname_type: hostname_type
        attr_accessor enable_resource_name_dns_a_record: boolean
        attr_accessor enable_resource_name_dns_aaaa_record: boolean
      end
      type launch_template_private_dns_name_options_request = { hostname_type: hostname_type?, enable_resource_name_dns_a_record: boolean?, enable_resource_name_dns_aaaa_record: boolean? }
      type launch_template_set_output = ::Array[LaunchTemplate]
      type launch_template_specification = { launch_template_id: launch_template_id?, launch_template_name: string?, version: string? }
      class LaunchTemplateSpotMarketOptions
        attr_accessor max_price: string
        attr_accessor spot_instance_type: spot_instance_type
        attr_accessor block_duration_minutes: integer
        attr_accessor valid_until: date_time
        attr_accessor instance_interruption_behavior: instance_interruption_behavior
      end
      type launch_template_spot_market_options_request = { max_price: string?, spot_instance_type: spot_instance_type?, block_duration_minutes: integer?, valid_until: date_time?, instance_interruption_behavior: instance_interruption_behavior? }
      class LaunchTemplateTagSpecification
        attr_accessor resource_type: resource_type
        attr_accessor tags: tag_list_output
      end
      type launch_template_tag_specification_list = ::Array[LaunchTemplateTagSpecification]
      type launch_template_tag_specification_request = { resource_type: resource_type?, tags: tag_list_input? }
      type launch_template_tag_specification_request_list = ::Array[launch_template_tag_specification_request]
      class LaunchTemplateVersion
        attr_accessor launch_template_id: string
        attr_accessor launch_template_name: launch_template_name
        attr_accessor version_number: long
        attr_accessor version_description: version_description
        attr_accessor create_time: date_time
        attr_accessor created_by: string
        attr_accessor default_version: boolean
        attr_accessor launch_template_data: ResponseLaunchTemplateData
      end
      type launch_template_version_set_output = ::Array[LaunchTemplateVersion]
      class LaunchTemplatesMonitoring
        attr_accessor enabled: boolean
      end
      type launch_templates_monitoring_request = { enabled: boolean? }
      class LicenseConfiguration
        attr_accessor license_configuration_arn: string
      end
      type license_configuration_request = { license_configuration_arn: string? }
      type license_list = ::Array[LicenseConfiguration]
      type license_specification_list_request = ::Array[license_configuration_request]
      type list_images_in_recycle_bin_max_results = ::Integer
      type list_images_in_recycle_bin_request = { image_ids: image_id_string_list?, next_token: string?, max_results: list_images_in_recycle_bin_max_results?, dry_run: boolean? }
      class ListImagesInRecycleBinResult
        attr_accessor images: image_recycle_bin_info_list
        attr_accessor next_token: string
      end
      type list_snapshots_in_recycle_bin_max_results = ::Integer
      type list_snapshots_in_recycle_bin_request = { max_results: list_snapshots_in_recycle_bin_max_results?, next_token: string?, snapshot_ids: snapshot_id_string_list?, dry_run: boolean? }
      class ListSnapshotsInRecycleBinResult
        attr_accessor snapshots: snapshot_recycle_bin_info_list
        attr_accessor next_token: string
      end
      type listing_state = ("available" | "sold" | "cancelled" | "pending")
      type listing_status = ("active" | "pending" | "cancelled" | "closed")
      type load_balancer_arn = ::String
      class LoadBalancersConfig
        attr_accessor classic_load_balancers_config: ClassicLoadBalancersConfig
        attr_accessor target_groups_config: TargetGroupsConfig
      end
      type load_balancers_config = { classic_load_balancers_config: classic_load_balancers_config?, target_groups_config: target_groups_config? }
      class LoadPermission
        attr_accessor user_id: string
        attr_accessor group: permission_group
      end
      type load_permission_list = ::Array[LoadPermission]
      type load_permission_list_request = ::Array[load_permission_request]
      type load_permission_modifications = { add: load_permission_list_request?, remove: load_permission_list_request? }
      type load_permission_request = { group: permission_group?, user_id: string? }
      class LocalGateway
        attr_accessor local_gateway_id: local_gateway_id
        attr_accessor outpost_arn: string
        attr_accessor owner_id: string
        attr_accessor state: string
        attr_accessor tags: tag_list_output
      end
      type local_gateway_id = ::String
      type local_gateway_id_set = ::Array[local_gateway_id]
      type local_gateway_max_results = ::Integer
      class LocalGatewayRoute
        attr_accessor destination_cidr_block: string
        attr_accessor local_gateway_virtual_interface_group_id: local_gateway_virtual_interface_group_id
        attr_accessor type_: local_gateway_route_type
        attr_accessor state: local_gateway_route_state
        attr_accessor local_gateway_route_table_id: local_gateway_routetable_id
        attr_accessor local_gateway_route_table_arn: resource_arn
        attr_accessor owner_id: string
        attr_accessor subnet_id: subnet_id
        attr_accessor coip_pool_id: coip_pool_id
        attr_accessor network_interface_id: network_interface_id
        attr_accessor destination_prefix_list_id: prefix_list_resource_id
      end
      type local_gateway_route_list_output = ::Array[LocalGatewayRoute]
      type local_gateway_route_state = ("pending" | "active" | "blackhole" | "deleting" | "deleted")
      class LocalGatewayRouteTable
        attr_accessor local_gateway_route_table_id: string
        attr_accessor local_gateway_route_table_arn: resource_arn
        attr_accessor local_gateway_id: local_gateway_id
        attr_accessor outpost_arn: string
        attr_accessor owner_id: string
        attr_accessor state: string
        attr_accessor tags: tag_list_output
        attr_accessor mode: local_gateway_route_table_mode
        attr_accessor state_reason: StateReason
      end
      type local_gateway_route_table_id_set = ::Array[local_gateway_routetable_id]
      type local_gateway_route_table_mode = ("direct-vpc-routing" | "coip")
      type local_gateway_route_table_set_output = ::Array[LocalGatewayRouteTable]
      class LocalGatewayRouteTableVirtualInterfaceGroupAssociation
        attr_accessor local_gateway_route_table_virtual_interface_group_association_id: local_gateway_route_table_virtual_interface_group_association_id
        attr_accessor local_gateway_virtual_interface_group_id: local_gateway_virtual_interface_group_id
        attr_accessor local_gateway_id: string
        attr_accessor local_gateway_route_table_id: local_gateway_id
        attr_accessor local_gateway_route_table_arn: resource_arn
        attr_accessor owner_id: string
        attr_accessor state: string
        attr_accessor tags: tag_list_output
      end
      type local_gateway_route_table_virtual_interface_group_association_id = ::String
      type local_gateway_route_table_virtual_interface_group_association_id_set = ::Array[local_gateway_route_table_virtual_interface_group_association_id]
      type local_gateway_route_table_virtual_interface_group_association_set_output = ::Array[LocalGatewayRouteTableVirtualInterfaceGroupAssociation]
      class LocalGatewayRouteTableVpcAssociation
        attr_accessor local_gateway_route_table_vpc_association_id: local_gateway_route_table_vpc_association_id
        attr_accessor local_gateway_route_table_id: string
        attr_accessor local_gateway_route_table_arn: resource_arn
        attr_accessor local_gateway_id: string
        attr_accessor vpc_id: string
        attr_accessor owner_id: string
        attr_accessor state: string
        attr_accessor tags: tag_list_output
      end
      type local_gateway_route_table_vpc_association_id = ::String
      type local_gateway_route_table_vpc_association_id_set = ::Array[local_gateway_route_table_vpc_association_id]
      type local_gateway_route_table_vpc_association_set_output = ::Array[LocalGatewayRouteTableVpcAssociation]
      type local_gateway_route_type = ("static" | "propagated")
      type local_gateway_routetable_id = ::String
      type local_gateway_set = ::Array[LocalGateway]
      class LocalGatewayVirtualInterface
        attr_accessor local_gateway_virtual_interface_id: local_gateway_virtual_interface_id
        attr_accessor local_gateway_id: string
        attr_accessor vlan: integer
        attr_accessor local_address: string
        attr_accessor peer_address: string
        attr_accessor local_bgp_asn: integer
        attr_accessor peer_bgp_asn: integer
        attr_accessor owner_id: string
        attr_accessor tags: tag_list_output
      end
      class LocalGatewayVirtualInterfaceGroup
        attr_accessor local_gateway_virtual_interface_group_id: local_gateway_virtual_interface_group_id
        attr_accessor local_gateway_virtual_interface_ids: local_gateway_virtual_interface_id_set
        attr_accessor local_gateway_id: string
        attr_accessor owner_id: string
        attr_accessor tags: tag_list_output
      end
      type local_gateway_virtual_interface_group_id = ::String
      type local_gateway_virtual_interface_group_id_set = ::Array[local_gateway_virtual_interface_group_id]
      type local_gateway_virtual_interface_group_set = ::Array[LocalGatewayVirtualInterfaceGroup]
      type local_gateway_virtual_interface_id = ::String
      type local_gateway_virtual_interface_id_set = ::Array[local_gateway_virtual_interface_id]
      type local_gateway_virtual_interface_set = ::Array[LocalGatewayVirtualInterface]
      type local_storage = ("included" | "required" | "excluded")
      type local_storage_type = ("hdd" | "ssd")
      type local_storage_type_set = ::Array[local_storage_type]
      type location = ::String
      type location_type = ("region" | "availability-zone" | "availability-zone-id")
      type log_destination_type = ("cloud-watch-logs" | "s3" | "kinesis-data-firehose")
      type long = ::Integer
      class MaintenanceDetails
        attr_accessor pending_maintenance: string
        attr_accessor maintenance_auto_applied_after: millisecond_date_time
        attr_accessor last_maintenance_applied: millisecond_date_time
      end
      class ManagedPrefixList
        attr_accessor prefix_list_id: prefix_list_resource_id
        attr_accessor address_family: string
        attr_accessor state: prefix_list_state
        attr_accessor state_message: string
        attr_accessor prefix_list_arn: resource_arn
        attr_accessor prefix_list_name: string
        attr_accessor max_entries: integer
        attr_accessor version: long
        attr_accessor tags: tag_list_output
        attr_accessor owner_id: string
      end
      type managed_prefix_list_set_output = ::Array[ManagedPrefixList]
      type market_type = ("spot")
      type max_ipv_4_addr_per_interface = ::Integer
      type max_ipv_6_addr_per_interface = ::Integer
      type max_network_interfaces = ::Integer
      type max_results = ::Integer
      type max_results_param = ::Integer
      type maximum_bandwidth_in_mbps = ::Integer
      type maximum_efa_interfaces = ::Integer
      type maximum_iops = ::Integer
      type maximum_network_cards = ::Integer
      type maximum_throughput_in_m_bps = ::Float
      type membership_type = ("static" | "igmp")
      class MemoryGiBPerVCpu
        attr_accessor min: double
        attr_accessor max: double
      end
      type memory_gi_b_per_v_cpu = { min: double?, max: double? }
      type memory_gi_b_per_v_cpu_request = { min: double?, max: double? }
      class MemoryInfo
        attr_accessor size_in_mi_b: memory_size
      end
      class MemoryMiB
        attr_accessor min: integer
        attr_accessor max: integer
      end
      type memory_mi_b = { min: integer?, max: integer? }
      type memory_mi_b_request = { min: integer, max: integer? }
      type memory_size = ::Integer
      class MetricPoint
        attr_accessor start_date: millisecond_date_time
        attr_accessor end_date: millisecond_date_time
        attr_accessor value: float
        attr_accessor status: string
      end
      type metric_points = ::Array[MetricPoint]
      type metric_type = ("aggregate-latency")
      type millisecond_date_time = ::Time
      type modify_address_attribute_request = { allocation_id: allocation_id, domain_name: string?, dry_run: boolean? }
      class ModifyAddressAttributeResult
        attr_accessor address: AddressAttribute
      end
      type modify_availability_zone_group_request = { group_name: string, opt_in_status: modify_availability_zone_opt_in_status, dry_run: boolean? }
      class ModifyAvailabilityZoneGroupResult
        attr_accessor return: boolean
      end
      type modify_availability_zone_opt_in_status = ("opted-in" | "not-opted-in")
      type modify_capacity_reservation_fleet_request = { capacity_reservation_fleet_id: capacity_reservation_fleet_id, total_target_capacity: integer?, end_date: millisecond_date_time?, dry_run: boolean?, remove_end_date: boolean? }
      class ModifyCapacityReservationFleetResult
        attr_accessor return: boolean
      end
      type modify_capacity_reservation_request = { capacity_reservation_id: capacity_reservation_id, instance_count: integer?, end_date: date_time?, end_date_type: end_date_type?, accept: boolean?, dry_run: boolean?, additional_info: string? }
      class ModifyCapacityReservationResult
        attr_accessor return: boolean
      end
      type modify_client_vpn_endpoint_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, server_certificate_arn: string?, connection_log_options: connection_log_options?, dns_servers: dns_servers_options_modify_structure?, vpn_port: integer?, description: string?, split_tunnel: boolean?, dry_run: boolean?, security_group_ids: client_vpn_security_group_id_set?, vpc_id: vpc_id?, self_service_portal: self_service_portal?, client_connect_options: client_connect_options?, session_timeout_hours: integer?, client_login_banner_options: client_login_banner_options? }
      class ModifyClientVpnEndpointResult
        attr_accessor return: boolean
      end
      type modify_default_credit_specification_request = { dry_run: boolean?, instance_family: unlimited_supported_instance_family, cpu_credits: string }
      class ModifyDefaultCreditSpecificationResult
        attr_accessor instance_family_credit_specification: InstanceFamilyCreditSpecification
      end
      type modify_ebs_default_kms_key_id_request = { kms_key_id: kms_key_id, dry_run: boolean? }
      class ModifyEbsDefaultKmsKeyIdResult
        attr_accessor kms_key_id: string
      end
      type modify_fleet_request = { dry_run: boolean?, excess_capacity_termination_policy: fleet_excess_capacity_termination_policy?, launch_template_configs: fleet_launch_template_config_list_request?, fleet_id: fleet_id, target_capacity_specification: target_capacity_specification_request?, context: string? }
      class ModifyFleetResult
        attr_accessor return: boolean
      end
      type modify_fpga_image_attribute_request = { dry_run: boolean?, fpga_image_id: fpga_image_id, attribute: fpga_image_attribute_name?, operation_type: operation_type?, user_ids: user_id_string_list?, user_groups: user_group_string_list?, product_codes: product_code_string_list?, load_permission: load_permission_modifications?, description: string?, name: string? }
      class ModifyFpgaImageAttributeResult
        attr_accessor fpga_image_attribute: FpgaImageAttribute
      end
      type modify_hosts_request = { auto_placement: auto_placement?, host_ids: request_host_id_list, host_recovery: host_recovery?, instance_type: string?, instance_family: string?, host_maintenance: host_maintenance? }
      class ModifyHostsResult
        attr_accessor successful: response_host_id_list
        attr_accessor unsuccessful: unsuccessful_item_list
      end
      type modify_id_format_request = { resource: string, use_long_ids: boolean }
      type modify_identity_id_format_request = { principal_arn: string, resource: string, use_long_ids: boolean }
      type modify_image_attribute_request = { attribute: string?, description: attribute_value?, image_id: image_id, launch_permission: launch_permission_modifications?, operation_type: operation_type?, product_codes: product_code_string_list?, user_groups: user_group_string_list?, user_ids: user_id_string_list?, value: string?, dry_run: boolean?, organization_arns: organization_arn_string_list?, organizational_unit_arns: organizational_unit_arn_string_list?, imds_support: attribute_value? }
      type modify_instance_attribute_request = { source_dest_check: attribute_boolean_value?, attribute: instance_attribute_name?, block_device_mappings: instance_block_device_mapping_specification_list?, disable_api_termination: attribute_boolean_value?, dry_run: boolean?, ebs_optimized: attribute_boolean_value?, ena_support: attribute_boolean_value?, groups: group_id_string_list?, instance_id: instance_id, instance_initiated_shutdown_behavior: attribute_value?, instance_type: attribute_value?, kernel: attribute_value?, ramdisk: attribute_value?, sriov_net_support: attribute_value?, user_data: blob_attribute_value?, value: string?, disable_api_stop: attribute_boolean_value? }
      type modify_instance_capacity_reservation_attributes_request = { instance_id: instance_id, capacity_reservation_specification: capacity_reservation_specification, dry_run: boolean? }
      class ModifyInstanceCapacityReservationAttributesResult
        attr_accessor return: boolean
      end
      type modify_instance_credit_specification_request = { dry_run: boolean?, client_token: string?, instance_credit_specifications: instance_credit_specification_list_request }
      class ModifyInstanceCreditSpecificationResult
        attr_accessor successful_instance_credit_specifications: successful_instance_credit_specification_set
        attr_accessor unsuccessful_instance_credit_specifications: unsuccessful_instance_credit_specification_set
      end
      type modify_instance_event_start_time_request = { dry_run: boolean?, instance_id: instance_id, instance_event_id: string, not_before: date_time }
      class ModifyInstanceEventStartTimeResult
        attr_accessor event: InstanceStatusEvent
      end
      type modify_instance_event_window_request = { dry_run: boolean?, name: string?, instance_event_window_id: instance_event_window_id, time_ranges: instance_event_window_time_range_request_set?, cron_expression: instance_event_window_cron_expression? }
      class ModifyInstanceEventWindowResult
        attr_accessor instance_event_window: InstanceEventWindow
      end
      type modify_instance_maintenance_options_request = { instance_id: instance_id, auto_recovery: instance_auto_recovery_state?, dry_run: boolean? }
      class ModifyInstanceMaintenanceOptionsResult
        attr_accessor instance_id: string
        attr_accessor auto_recovery: instance_auto_recovery_state
      end
      type modify_instance_metadata_options_request = { instance_id: instance_id, http_tokens: http_tokens_state?, http_put_response_hop_limit: integer?, http_endpoint: instance_metadata_endpoint_state?, dry_run: boolean?, http_protocol_ipv_6: instance_metadata_protocol_state?, instance_metadata_tags: instance_metadata_tags_state? }
      class ModifyInstanceMetadataOptionsResult
        attr_accessor instance_id: string
        attr_accessor instance_metadata_options: InstanceMetadataOptionsResponse
      end
      type modify_instance_placement_request = { affinity: affinity?, group_name: placement_group_name?, host_id: dedicated_host_id?, instance_id: instance_id, tenancy: host_tenancy?, partition_number: integer?, host_resource_group_arn: string?, group_id: placement_group_id? }
      class ModifyInstancePlacementResult
        attr_accessor return: boolean
      end
      type modify_ipam_pool_request = { dry_run: boolean?, ipam_pool_id: ipam_pool_id, description: string?, auto_import: boolean?, allocation_min_netmask_length: ipam_netmask_length?, allocation_max_netmask_length: ipam_netmask_length?, allocation_default_netmask_length: ipam_netmask_length?, clear_allocation_default_netmask_length: boolean?, add_allocation_resource_tags: request_ipam_resource_tag_list_input?, remove_allocation_resource_tags: request_ipam_resource_tag_list_input? }
      class ModifyIpamPoolResult
        attr_accessor ipam_pool: IpamPool
      end
      type modify_ipam_request = { dry_run: boolean?, ipam_id: ipam_id, description: string?, add_operating_regions: add_ipam_operating_region_set?, remove_operating_regions: remove_ipam_operating_region_set? }
      type modify_ipam_resource_cidr_request = { dry_run: boolean?, resource_id: string, resource_cidr: string, resource_region: string, current_ipam_scope_id: ipam_scope_id, destination_ipam_scope_id: ipam_scope_id?, monitored: boolean }
      class ModifyIpamResourceCidrResult
        attr_accessor ipam_resource_cidr: IpamResourceCidr
      end
      type modify_ipam_resource_discovery_request = { dry_run: boolean?, ipam_resource_discovery_id: ipam_resource_discovery_id, description: string?, add_operating_regions: add_ipam_operating_region_set?, remove_operating_regions: remove_ipam_operating_region_set? }
      class ModifyIpamResourceDiscoveryResult
        attr_accessor ipam_resource_discovery: IpamResourceDiscovery
      end
      class ModifyIpamResult
        attr_accessor ipam: Ipam
      end
      type modify_ipam_scope_request = { dry_run: boolean?, ipam_scope_id: ipam_scope_id, description: string? }
      class ModifyIpamScopeResult
        attr_accessor ipam_scope: IpamScope
      end
      type modify_launch_template_request = { dry_run: boolean?, client_token: string?, launch_template_id: launch_template_id?, launch_template_name: launch_template_name?, default_version: string? }
      class ModifyLaunchTemplateResult
        attr_accessor launch_template: LaunchTemplate
      end
      type modify_local_gateway_route_request = { destination_cidr_block: string?, local_gateway_route_table_id: local_gateway_routetable_id, local_gateway_virtual_interface_group_id: local_gateway_virtual_interface_group_id?, network_interface_id: network_interface_id?, dry_run: boolean?, destination_prefix_list_id: prefix_list_resource_id? }
      class ModifyLocalGatewayRouteResult
        attr_accessor route: LocalGatewayRoute
      end
      type modify_managed_prefix_list_request = { dry_run: boolean?, prefix_list_id: prefix_list_resource_id, current_version: long?, prefix_list_name: string?, add_entries: add_prefix_list_entries?, remove_entries: remove_prefix_list_entries?, max_entries: integer? }
      class ModifyManagedPrefixListResult
        attr_accessor prefix_list: ManagedPrefixList
      end
      type modify_network_interface_attribute_request = { attachment: network_interface_attachment_changes?, description: attribute_value?, dry_run: boolean?, groups: security_group_id_string_list?, network_interface_id: network_interface_id, source_dest_check: attribute_boolean_value?, ena_srd_specification: ena_srd_specification? }
      type modify_private_dns_name_options_request = { dry_run: boolean?, instance_id: instance_id, private_dns_hostname_type: hostname_type?, enable_resource_name_dns_a_record: boolean?, enable_resource_name_dns_aaaa_record: boolean? }
      class ModifyPrivateDnsNameOptionsResult
        attr_accessor return: boolean
      end
      type modify_reserved_instances_request = { reserved_instances_ids: reserved_instances_id_string_list, client_token: string?, target_configurations: reserved_instances_configuration_list_input }
      class ModifyReservedInstancesResult
        attr_accessor reserved_instances_modification_id: string
      end
      type modify_security_group_rules_request = { group_id: security_group_id, security_group_rules: security_group_rule_update_list, dry_run: boolean? }
      class ModifySecurityGroupRulesResult
        attr_accessor return: boolean
      end
      type modify_snapshot_attribute_request = { attribute: snapshot_attribute_name?, create_volume_permission: create_volume_permission_modifications?, group_names: group_name_string_list?, operation_type: operation_type?, snapshot_id: snapshot_id, user_ids: user_id_string_list?, dry_run: boolean? }
      type modify_snapshot_tier_request = { snapshot_id: snapshot_id, storage_tier: target_storage_tier?, dry_run: boolean? }
      class ModifySnapshotTierResult
        attr_accessor snapshot_id: string
        attr_accessor tiering_start_time: millisecond_date_time
      end
      type modify_spot_fleet_request_request = { excess_capacity_termination_policy: excess_capacity_termination_policy?, launch_template_configs: launch_template_config_list_input?, spot_fleet_request_id: spot_fleet_request_id, target_capacity: integer?, on_demand_target_capacity: integer?, context: string? }
      class ModifySpotFleetRequestResponse
        attr_accessor return: boolean
      end
      type modify_subnet_attribute_request = { assign_ipv_6_address_on_creation: attribute_boolean_value?, map_public_ip_on_launch: attribute_boolean_value?, subnet_id: subnet_id, map_customer_owned_ip_on_launch: attribute_boolean_value?, customer_owned_ipv_4_pool: coip_pool_id?, enable_dns_64: attribute_boolean_value?, private_dns_hostname_type_on_launch: hostname_type?, enable_resource_name_dns_a_record_on_launch: attribute_boolean_value?, enable_resource_name_dns_aaaa_record_on_launch: attribute_boolean_value?, enable_lni_at_device_index: integer?, disable_lni_at_device_index: attribute_boolean_value? }
      type modify_traffic_mirror_filter_network_services_request = { traffic_mirror_filter_id: traffic_mirror_filter_id, add_network_services: traffic_mirror_network_service_list?, remove_network_services: traffic_mirror_network_service_list?, dry_run: boolean? }
      class ModifyTrafficMirrorFilterNetworkServicesResult
        attr_accessor traffic_mirror_filter: TrafficMirrorFilter
      end
      type modify_traffic_mirror_filter_rule_request = { traffic_mirror_filter_rule_id: traffic_mirror_filter_rule_id_with_resolver, traffic_direction: traffic_direction?, rule_number: integer?, rule_action: traffic_mirror_rule_action?, destination_port_range: traffic_mirror_port_range_request?, source_port_range: traffic_mirror_port_range_request?, protocol: integer?, destination_cidr_block: string?, source_cidr_block: string?, description: string?, remove_fields: traffic_mirror_filter_rule_field_list?, dry_run: boolean? }
      class ModifyTrafficMirrorFilterRuleResult
        attr_accessor traffic_mirror_filter_rule: TrafficMirrorFilterRule
      end
      type modify_traffic_mirror_session_request = { traffic_mirror_session_id: traffic_mirror_session_id, traffic_mirror_target_id: traffic_mirror_target_id?, traffic_mirror_filter_id: traffic_mirror_filter_id?, packet_length: integer?, session_number: integer?, virtual_network_id: integer?, description: string?, remove_fields: traffic_mirror_session_field_list?, dry_run: boolean? }
      class ModifyTrafficMirrorSessionResult
        attr_accessor traffic_mirror_session: TrafficMirrorSession
      end
      type modify_transit_gateway_options = { add_transit_gateway_cidr_blocks: transit_gateway_cidr_block_string_list?, remove_transit_gateway_cidr_blocks: transit_gateway_cidr_block_string_list?, vpn_ecmp_support: vpn_ecmp_support_value?, dns_support: dns_support_value?, auto_accept_shared_attachments: auto_accept_shared_attachments_value?, default_route_table_association: default_route_table_association_value?, association_default_route_table_id: transit_gateway_route_table_id?, default_route_table_propagation: default_route_table_propagation_value?, propagation_default_route_table_id: transit_gateway_route_table_id?, amazon_side_asn: long? }
      type modify_transit_gateway_prefix_list_reference_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, prefix_list_id: prefix_list_resource_id, transit_gateway_attachment_id: transit_gateway_attachment_id?, blackhole: boolean?, dry_run: boolean? }
      class ModifyTransitGatewayPrefixListReferenceResult
        attr_accessor transit_gateway_prefix_list_reference: TransitGatewayPrefixListReference
      end
      type modify_transit_gateway_request = { transit_gateway_id: transit_gateway_id, description: string?, options: modify_transit_gateway_options?, dry_run: boolean? }
      class ModifyTransitGatewayResult
        attr_accessor transit_gateway: TransitGateway
      end
      type modify_transit_gateway_vpc_attachment_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, add_subnet_ids: transit_gateway_subnet_id_list?, remove_subnet_ids: transit_gateway_subnet_id_list?, options: modify_transit_gateway_vpc_attachment_request_options?, dry_run: boolean? }
      type modify_transit_gateway_vpc_attachment_request_options = { dns_support: dns_support_value?, ipv_6_support: ipv_6_support_value?, appliance_mode_support: appliance_mode_support_value? }
      class ModifyTransitGatewayVpcAttachmentResult
        attr_accessor transit_gateway_vpc_attachment: TransitGatewayVpcAttachment
      end
      type modify_verified_access_endpoint_eni_options = { protocol: verified_access_endpoint_protocol?, port: verified_access_endpoint_port_number? }
      type modify_verified_access_endpoint_load_balancer_options = { subnet_ids: modify_verified_access_endpoint_subnet_id_list?, protocol: verified_access_endpoint_protocol?, port: verified_access_endpoint_port_number? }
      type modify_verified_access_endpoint_policy_request = { verified_access_endpoint_id: verified_access_endpoint_id, policy_enabled: boolean, policy_document: string?, client_token: string?, dry_run: boolean? }
      class ModifyVerifiedAccessEndpointPolicyResult
        attr_accessor policy_enabled: boolean
        attr_accessor policy_document: string
      end
      type modify_verified_access_endpoint_request = { verified_access_endpoint_id: verified_access_endpoint_id, verified_access_group_id: verified_access_group_id?, load_balancer_options: modify_verified_access_endpoint_load_balancer_options?, network_interface_options: modify_verified_access_endpoint_eni_options?, description: string?, client_token: string?, dry_run: boolean? }
      class ModifyVerifiedAccessEndpointResult
        attr_accessor verified_access_endpoint: VerifiedAccessEndpoint
      end
      type modify_verified_access_endpoint_subnet_id_list = ::Array[subnet_id]
      type modify_verified_access_group_policy_request = { verified_access_group_id: verified_access_group_id, policy_enabled: boolean, policy_document: string?, client_token: string?, dry_run: boolean? }
      class ModifyVerifiedAccessGroupPolicyResult
        attr_accessor policy_enabled: boolean
        attr_accessor policy_document: string
      end
      type modify_verified_access_group_request = { verified_access_group_id: verified_access_group_id, verified_access_instance_id: verified_access_instance_id?, description: string?, client_token: string?, dry_run: boolean? }
      class ModifyVerifiedAccessGroupResult
        attr_accessor verified_access_group: VerifiedAccessGroup
      end
      type modify_verified_access_instance_logging_configuration_request = { verified_access_instance_id: verified_access_instance_id, access_logs: verified_access_log_options, dry_run: boolean?, client_token: string? }
      class ModifyVerifiedAccessInstanceLoggingConfigurationResult
        attr_accessor logging_configuration: VerifiedAccessInstanceLoggingConfiguration
      end
      type modify_verified_access_instance_request = { verified_access_instance_id: verified_access_instance_id, description: string?, dry_run: boolean?, client_token: string? }
      class ModifyVerifiedAccessInstanceResult
        attr_accessor verified_access_instance: VerifiedAccessInstance
      end
      type modify_verified_access_trust_provider_oidc_options = { issuer: string?, authorization_endpoint: string?, token_endpoint: string?, user_info_endpoint: string?, client_id: string?, client_secret: client_secret_type?, scope: string? }
      type modify_verified_access_trust_provider_request = { verified_access_trust_provider_id: verified_access_trust_provider_id, oidc_options: modify_verified_access_trust_provider_oidc_options?, description: string?, dry_run: boolean?, client_token: string? }
      class ModifyVerifiedAccessTrustProviderResult
        attr_accessor verified_access_trust_provider: VerifiedAccessTrustProvider
      end
      type modify_volume_attribute_request = { auto_enable_io: attribute_boolean_value?, volume_id: volume_id, dry_run: boolean? }
      type modify_volume_request = { dry_run: boolean?, volume_id: volume_id, size: integer?, volume_type: volume_type?, iops: integer?, throughput: integer?, multi_attach_enabled: boolean? }
      class ModifyVolumeResult
        attr_accessor volume_modification: VolumeModification
      end
      type modify_vpc_attribute_request = { enable_dns_hostnames: attribute_boolean_value?, enable_dns_support: attribute_boolean_value?, vpc_id: vpc_id, enable_network_address_usage_metrics: attribute_boolean_value? }
      type modify_vpc_endpoint_connection_notification_request = { dry_run: boolean?, connection_notification_id: connection_notification_id, connection_notification_arn: string?, connection_events: value_string_list? }
      class ModifyVpcEndpointConnectionNotificationResult
        attr_accessor return_value: boolean
      end
      type modify_vpc_endpoint_request = { dry_run: boolean?, vpc_endpoint_id: vpc_endpoint_id, reset_policy: boolean?, policy_document: string?, add_route_table_ids: vpc_endpoint_route_table_id_list?, remove_route_table_ids: vpc_endpoint_route_table_id_list?, add_subnet_ids: vpc_endpoint_subnet_id_list?, remove_subnet_ids: vpc_endpoint_subnet_id_list?, add_security_group_ids: vpc_endpoint_security_group_id_list?, remove_security_group_ids: vpc_endpoint_security_group_id_list?, ip_address_type: ip_address_type?, dns_options: dns_options_specification?, private_dns_enabled: boolean? }
      class ModifyVpcEndpointResult
        attr_accessor return: boolean
      end
      type modify_vpc_endpoint_service_configuration_request = { dry_run: boolean?, service_id: vpc_endpoint_service_id, private_dns_name: string?, remove_private_dns_name: boolean?, acceptance_required: boolean?, add_network_load_balancer_arns: value_string_list?, remove_network_load_balancer_arns: value_string_list?, add_gateway_load_balancer_arns: value_string_list?, remove_gateway_load_balancer_arns: value_string_list?, add_supported_ip_address_types: value_string_list?, remove_supported_ip_address_types: value_string_list? }
      class ModifyVpcEndpointServiceConfigurationResult
        attr_accessor return: boolean
      end
      type modify_vpc_endpoint_service_payer_responsibility_request = { dry_run: boolean?, service_id: vpc_endpoint_service_id, payer_responsibility: payer_responsibility }
      class ModifyVpcEndpointServicePayerResponsibilityResult
        attr_accessor return_value: boolean
      end
      type modify_vpc_endpoint_service_permissions_request = { dry_run: boolean?, service_id: vpc_endpoint_service_id, add_allowed_principals: value_string_list?, remove_allowed_principals: value_string_list? }
      class ModifyVpcEndpointServicePermissionsResult
        attr_accessor added_principals: added_principal_set
        attr_accessor return_value: boolean
      end
      type modify_vpc_peering_connection_options_request = { accepter_peering_connection_options: peering_connection_options_request?, dry_run: boolean?, requester_peering_connection_options: peering_connection_options_request?, vpc_peering_connection_id: vpc_peering_connection_id }
      class ModifyVpcPeeringConnectionOptionsResult
        attr_accessor accepter_peering_connection_options: PeeringConnectionOptions
        attr_accessor requester_peering_connection_options: PeeringConnectionOptions
      end
      type modify_vpc_tenancy_request = { vpc_id: vpc_id, instance_tenancy: vpc_tenancy, dry_run: boolean? }
      class ModifyVpcTenancyResult
        attr_accessor return_value: boolean
      end
      type modify_vpn_connection_options_request = { vpn_connection_id: vpn_connection_id, local_ipv_4_network_cidr: string?, remote_ipv_4_network_cidr: string?, local_ipv_6_network_cidr: string?, remote_ipv_6_network_cidr: string?, dry_run: boolean? }
      class ModifyVpnConnectionOptionsResult
        attr_accessor vpn_connection: VpnConnection
      end
      type modify_vpn_connection_request = { vpn_connection_id: vpn_connection_id, transit_gateway_id: transit_gateway_id?, customer_gateway_id: customer_gateway_id?, vpn_gateway_id: vpn_gateway_id?, dry_run: boolean? }
      class ModifyVpnConnectionResult
        attr_accessor vpn_connection: VpnConnection
      end
      type modify_vpn_tunnel_certificate_request = { vpn_connection_id: vpn_connection_id, vpn_tunnel_outside_ip_address: string, dry_run: boolean? }
      class ModifyVpnTunnelCertificateResult
        attr_accessor vpn_connection: VpnConnection
      end
      type modify_vpn_tunnel_options_request = { vpn_connection_id: vpn_connection_id, vpn_tunnel_outside_ip_address: string, tunnel_options: modify_vpn_tunnel_options_specification, dry_run: boolean?, skip_tunnel_replacement: boolean? }
      class ModifyVpnTunnelOptionsResult
        attr_accessor vpn_connection: VpnConnection
      end
      type modify_vpn_tunnel_options_specification = { tunnel_inside_cidr: string?, tunnel_inside_ipv_6_cidr: string?, pre_shared_key: string?, phase_1_lifetime_seconds: integer?, phase_2_lifetime_seconds: integer?, rekey_margin_time_seconds: integer?, rekey_fuzz_percentage: integer?, replay_window_size: integer?, dpd_timeout_seconds: integer?, dpd_timeout_action: string?, phase_1_encryption_algorithms: phase_1_encryption_algorithms_request_list?, phase_2_encryption_algorithms: phase_2_encryption_algorithms_request_list?, phase_1_integrity_algorithms: phase_1_integrity_algorithms_request_list?, phase_2_integrity_algorithms: phase_2_integrity_algorithms_request_list?, phase_1_dh_group_numbers: phase_1_dh_group_numbers_request_list?, phase_2_dh_group_numbers: phase_2_dh_group_numbers_request_list?, ike_versions: ike_versions_request_list?, startup_action: string?, log_options: vpn_tunnel_log_options_specification?, enable_tunnel_lifecycle_control: boolean? }
      type monitor_instances_request = { instance_ids: instance_id_string_list, dry_run: boolean? }
      class MonitorInstancesResult
        attr_accessor instance_monitorings: instance_monitoring_list
      end
      class Monitoring
        attr_accessor state: monitoring_state
      end
      type monitoring_state = ("disabled" | "disabling" | "enabled" | "pending")
      type move_address_to_vpc_request = { dry_run: boolean?, public_ip: string }
      class MoveAddressToVpcResult
        attr_accessor allocation_id: string
        attr_accessor status: status
      end
      type move_byoip_cidr_to_ipam_request = { dry_run: boolean?, cidr: string, ipam_pool_id: ipam_pool_id, ipam_pool_owner: string }
      class MoveByoipCidrToIpamResult
        attr_accessor byoip_cidr: ByoipCidr
      end
      type move_status = ("movingToVpc" | "restoringToClassic")
      class MovingAddressStatus
        attr_accessor move_status: move_status
        attr_accessor public_ip: string
      end
      type moving_address_status_set = ::Array[MovingAddressStatus]
      type multicast_support_value = ("enable" | "disable")
      class NatGateway
        attr_accessor create_time: date_time
        attr_accessor delete_time: date_time
        attr_accessor failure_code: string
        attr_accessor failure_message: string
        attr_accessor nat_gateway_addresses: nat_gateway_address_list
        attr_accessor nat_gateway_id: string
        attr_accessor provisioned_bandwidth: ProvisionedBandwidth
        attr_accessor state: nat_gateway_state
        attr_accessor subnet_id: string
        attr_accessor vpc_id: string
        attr_accessor tags: tag_list_output
        attr_accessor connectivity_type: connectivity_type
      end
      class NatGatewayAddress
        attr_accessor allocation_id: string
        attr_accessor network_interface_id: string
        attr_accessor private_ip: string
        attr_accessor public_ip: string
        attr_accessor association_id: string
        attr_accessor is_primary: boolean
        attr_accessor failure_message: string
        attr_accessor status: nat_gateway_address_status
      end
      type nat_gateway_address_list = ::Array[NatGatewayAddress]
      type nat_gateway_address_status = ("assigning" | "unassigning" | "associating" | "disassociating" | "succeeded" | "failed")
      type nat_gateway_id = ::String
      type nat_gateway_id_string_list = ::Array[nat_gateway_id]
      type nat_gateway_list_output = ::Array[NatGateway]
      type nat_gateway_state = ("pending" | "failed" | "available" | "deleting" | "deleted")
      type netmask_length = ::Integer
      class NetworkAcl
        attr_accessor associations: network_acl_association_list
        attr_accessor entries: network_acl_entry_list
        attr_accessor is_default: boolean
        attr_accessor network_acl_id: string
        attr_accessor tags: tag_list_output
        attr_accessor vpc_id: string
        attr_accessor owner_id: string
      end
      class NetworkAclAssociation
        attr_accessor network_acl_association_id: string
        attr_accessor network_acl_id: string
        attr_accessor subnet_id: string
      end
      type network_acl_association_id = ::String
      type network_acl_association_list = ::Array[NetworkAclAssociation]
      class NetworkAclEntry
        attr_accessor cidr_block: string
        attr_accessor egress: boolean
        attr_accessor icmp_type_code: IcmpTypeCode
        attr_accessor ipv_6_cidr_block: string
        attr_accessor port_range: PortRange
        attr_accessor protocol: string
        attr_accessor rule_action: rule_action
        attr_accessor rule_number: integer
      end
      type network_acl_entry_list = ::Array[NetworkAclEntry]
      type network_acl_id = ::String
      type network_acl_id_string_list = ::Array[network_acl_id]
      type network_acl_list_output = ::Array[NetworkAcl]
      class NetworkBandwidthGbps
        attr_accessor min: double
        attr_accessor max: double
      end
      type network_bandwidth_gbps = { min: double?, max: double? }
      type network_bandwidth_gbps_request = { min: double?, max: double? }
      type network_card_index = ::Integer
      class NetworkCardInfo
        attr_accessor network_card_index: network_card_index
        attr_accessor network_performance: network_performance
        attr_accessor maximum_network_interfaces: max_network_interfaces
      end
      type network_card_info_list = ::Array[NetworkCardInfo]
      class NetworkInfo
        attr_accessor network_performance: network_performance
        attr_accessor maximum_network_interfaces: max_network_interfaces
        attr_accessor maximum_network_cards: maximum_network_cards
        attr_accessor default_network_card_index: default_network_card_index
        attr_accessor network_cards: network_card_info_list
        attr_accessor ipv_4_addresses_per_interface: max_ipv_4_addr_per_interface
        attr_accessor ipv_6_addresses_per_interface: max_ipv_6_addr_per_interface
        attr_accessor ipv_6_supported: ipv_6_flag
        attr_accessor ena_support: ena_support
        attr_accessor efa_supported: efa_supported_flag
        attr_accessor efa_info: EfaInfo
        attr_accessor encryption_in_transit_supported: encryption_in_transit_supported
        attr_accessor ena_srd_supported: ena_srd_supported
      end
      class NetworkInsightsAccessScope
        attr_accessor network_insights_access_scope_id: network_insights_access_scope_id
        attr_accessor network_insights_access_scope_arn: resource_arn
        attr_accessor created_date: millisecond_date_time
        attr_accessor updated_date: millisecond_date_time
        attr_accessor tags: tag_list_output
      end
      class NetworkInsightsAccessScopeAnalysis
        attr_accessor network_insights_access_scope_analysis_id: network_insights_access_scope_analysis_id
        attr_accessor network_insights_access_scope_analysis_arn: resource_arn
        attr_accessor network_insights_access_scope_id: network_insights_access_scope_id
        attr_accessor status: analysis_status
        attr_accessor status_message: string
        attr_accessor warning_message: string
        attr_accessor start_date: millisecond_date_time
        attr_accessor end_date: millisecond_date_time
        attr_accessor findings_found: findings_found
        attr_accessor analyzed_eni_count: integer
        attr_accessor tags: tag_list_output
      end
      type network_insights_access_scope_analysis_id = ::String
      type network_insights_access_scope_analysis_id_list = ::Array[network_insights_access_scope_analysis_id]
      type network_insights_access_scope_analysis_list_output = ::Array[NetworkInsightsAccessScopeAnalysis]
      class NetworkInsightsAccessScopeContent
        attr_accessor network_insights_access_scope_id: network_insights_access_scope_id
        attr_accessor match_paths: access_scope_path_list
        attr_accessor exclude_paths: access_scope_path_list
      end
      type network_insights_access_scope_id = ::String
      type network_insights_access_scope_id_list = ::Array[network_insights_access_scope_id]
      type network_insights_access_scope_list_output = ::Array[NetworkInsightsAccessScope]
      class NetworkInsightsAnalysis
        attr_accessor network_insights_analysis_id: network_insights_analysis_id
        attr_accessor network_insights_analysis_arn: resource_arn
        attr_accessor network_insights_path_id: network_insights_path_id
        attr_accessor additional_accounts: value_string_list
        attr_accessor filter_in_arns: arn_list
        attr_accessor start_date: millisecond_date_time
        attr_accessor status: analysis_status
        attr_accessor status_message: string
        attr_accessor warning_message: string
        attr_accessor network_path_found: boolean
        attr_accessor forward_path_components: path_component_list
        attr_accessor return_path_components: path_component_list
        attr_accessor explanations: explanation_list
        attr_accessor alternate_path_hints: alternate_path_hint_list
        attr_accessor suggested_accounts: value_string_list
        attr_accessor tags: tag_list_output
      end
      type network_insights_analysis_id = ::String
      type network_insights_analysis_id_list = ::Array[network_insights_analysis_id]
      type network_insights_analysis_list_output = ::Array[NetworkInsightsAnalysis]
      type network_insights_max_results = ::Integer
      class NetworkInsightsPath
        attr_accessor network_insights_path_id: network_insights_path_id
        attr_accessor network_insights_path_arn: resource_arn
        attr_accessor created_date: millisecond_date_time
        attr_accessor source: string
        attr_accessor destination: string
        attr_accessor source_arn: resource_arn
        attr_accessor destination_arn: resource_arn
        attr_accessor source_ip: ip_address
        attr_accessor destination_ip: ip_address
        attr_accessor protocol: protocol
        attr_accessor destination_port: integer
        attr_accessor tags: tag_list_output
        attr_accessor filter_at_source: PathFilter
        attr_accessor filter_at_destination: PathFilter
      end
      type network_insights_path_id = ::String
      type network_insights_path_id_list = ::Array[network_insights_path_id]
      type network_insights_path_list_output = ::Array[NetworkInsightsPath]
      type network_insights_resource_id = ::String
      class NetworkInterface
        attr_accessor association: NetworkInterfaceAssociation
        attr_accessor attachment: NetworkInterfaceAttachment
        attr_accessor availability_zone: string
        attr_accessor description: string
        attr_accessor groups: group_identifier_list_output
        attr_accessor interface_type: network_interface_type
        attr_accessor ipv_6_addresses: network_interface_ipv_6_addresses_list
        attr_accessor mac_address: string
        attr_accessor network_interface_id: string
        attr_accessor outpost_arn: string
        attr_accessor owner_id: string
        attr_accessor private_dns_name: string
        attr_accessor private_ip_address: string
        attr_accessor private_ip_addresses: network_interface_private_ip_address_list
        attr_accessor ipv_4_prefixes: ipv_4_prefixes_list
        attr_accessor ipv_6_prefixes: ipv_6_prefixes_list
        attr_accessor requester_id: string
        attr_accessor requester_managed: boolean
        attr_accessor source_dest_check: boolean
        attr_accessor status: network_interface_status
        attr_accessor subnet_id: string
        attr_accessor tag_set: tag_list_output
        attr_accessor vpc_id: string
        attr_accessor deny_all_igw_traffic: boolean
        attr_accessor ipv_6_native: boolean
        attr_accessor ipv_6_address: string
      end
      class NetworkInterfaceAssociation
        attr_accessor allocation_id: string
        attr_accessor association_id: string
        attr_accessor ip_owner_id: string
        attr_accessor public_dns_name: string
        attr_accessor public_ip: string
        attr_accessor customer_owned_ip: string
        attr_accessor carrier_ip: string
      end
      class NetworkInterfaceAttachment
        attr_accessor attach_time: date_time
        attr_accessor attachment_id: string
        attr_accessor delete_on_termination: boolean
        attr_accessor device_index: integer
        attr_accessor network_card_index: integer
        attr_accessor instance_id: string
        attr_accessor instance_owner_id: string
        attr_accessor status: attachment_status
        attr_accessor ena_srd_specification: AttachmentEnaSrdSpecification
      end
      type network_interface_attachment_changes = { attachment_id: network_interface_attachment_id?, delete_on_termination: boolean? }
      type network_interface_attachment_id = ::String
      type network_interface_attribute = ("description" | "groupSet" | "sourceDestCheck" | "attachment")
      class NetworkInterfaceCount
        attr_accessor min: integer
        attr_accessor max: integer
      end
      type network_interface_count = { min: integer?, max: integer? }
      type network_interface_count_request = { min: integer?, max: integer? }
      type network_interface_creation_type = ("efa" | "branch" | "trunk")
      type network_interface_id = ::String
      type network_interface_id_list = ::Array[network_interface_id]
      class NetworkInterfaceIpv6Address
        attr_accessor ipv_6_address: string
      end
      type network_interface_ipv_6_addresses_list = ::Array[NetworkInterfaceIpv6Address]
      type network_interface_list_output = ::Array[NetworkInterface]
      class NetworkInterfacePermission
        attr_accessor network_interface_permission_id: string
        attr_accessor network_interface_id: string
        attr_accessor aws_account_id: string
        attr_accessor aws_service: string
        attr_accessor permission: interface_permission_type
        attr_accessor permission_state: NetworkInterfacePermissionState
      end
      type network_interface_permission_id = ::String
      type network_interface_permission_id_list = ::Array[network_interface_permission_id]
      type network_interface_permission_list_output = ::Array[NetworkInterfacePermission]
      class NetworkInterfacePermissionState
        attr_accessor state: network_interface_permission_state_code
        attr_accessor status_message: string
      end
      type network_interface_permission_state_code = ("pending" | "granted" | "revoking" | "revoked")
      class NetworkInterfacePrivateIpAddress
        attr_accessor association: NetworkInterfaceAssociation
        attr_accessor primary: boolean
        attr_accessor private_dns_name: string
        attr_accessor private_ip_address: string
      end
      type network_interface_private_ip_address_list = ::Array[NetworkInterfacePrivateIpAddress]
      type network_interface_status = ("available" | "associated" | "attaching" | "in-use" | "detaching")
      type network_interface_type = ("interface" | "natGateway" | "efa" | "trunk" | "load_balancer" | "network_load_balancer" | "vpc_endpoint" | "branch" | "transit_gateway" | "lambda" | "quicksight" | "global_accelerator_managed" | "api_gateway_managed" | "gateway_load_balancer" | "gateway_load_balancer_endpoint" | "iot_rules_managed" | "aws_codestar_connections_managed")
      type network_performance = ::String
      type new_dhcp_configuration = { key: string?, values: value_string_list? }
      type new_dhcp_configuration_list = ::Array[new_dhcp_configuration]
      type next_token = ::String
      type occurrence_day_request_set = ::Array[integer]
      type occurrence_day_set = ::Array[integer]
      type offering_class_type = ("standard" | "convertible")
      type offering_id = ::String
      type offering_type_values = ("Heavy Utilization" | "Medium Utilization" | "Light Utilization" | "No Upfront" | "Partial Upfront" | "All Upfront")
      class OidcOptions
        attr_accessor issuer: string
        attr_accessor authorization_endpoint: string
        attr_accessor token_endpoint: string
        attr_accessor user_info_endpoint: string
        attr_accessor client_id: string
        attr_accessor client_secret: client_secret_type
        attr_accessor scope: string
      end
      type on_demand_allocation_strategy = ("lowestPrice" | "prioritized")
      class OnDemandOptions
        attr_accessor allocation_strategy: fleet_on_demand_allocation_strategy
        attr_accessor capacity_reservation_options: CapacityReservationOptions
        attr_accessor single_instance_type: boolean
        attr_accessor single_availability_zone: boolean
        attr_accessor min_target_capacity: integer
        attr_accessor max_total_price: string
      end
      type on_demand_options_request = { allocation_strategy: fleet_on_demand_allocation_strategy?, capacity_reservation_options: capacity_reservation_options_request?, single_instance_type: boolean?, single_availability_zone: boolean?, min_target_capacity: integer?, max_total_price: string? }
      type operation_type = ("add" | "remove")
      type organization_arn_string_list = ::Array[string]
      type organizational_unit_arn_string_list = ::Array[string]
      type outpost_arn = ::String
      type owner_string_list = ::Array[string]
      class PacketHeaderStatement
        attr_accessor source_addresses: value_string_list
        attr_accessor destination_addresses: value_string_list
        attr_accessor source_ports: value_string_list
        attr_accessor destination_ports: value_string_list
        attr_accessor source_prefix_lists: value_string_list
        attr_accessor destination_prefix_lists: value_string_list
        attr_accessor protocols: protocol_list
      end
      type packet_header_statement_request = { source_addresses: value_string_list?, destination_addresses: value_string_list?, source_ports: value_string_list?, destination_ports: value_string_list?, source_prefix_lists: value_string_list?, destination_prefix_lists: value_string_list?, protocols: protocol_list? }
      type partition_load_frequency = ("none" | "daily" | "weekly" | "monthly")
      class PathComponent
        attr_accessor sequence_number: integer
        attr_accessor acl_rule: AnalysisAclRule
        attr_accessor attached_to: AnalysisComponent
        attr_accessor component: AnalysisComponent
        attr_accessor destination_vpc: AnalysisComponent
        attr_accessor outbound_header: AnalysisPacketHeader
        attr_accessor inbound_header: AnalysisPacketHeader
        attr_accessor route_table_route: AnalysisRouteTableRoute
        attr_accessor security_group_rule: AnalysisSecurityGroupRule
        attr_accessor source_vpc: AnalysisComponent
        attr_accessor subnet: AnalysisComponent
        attr_accessor vpc: AnalysisComponent
        attr_accessor additional_details: additional_detail_list
        attr_accessor transit_gateway: AnalysisComponent
        attr_accessor transit_gateway_route_table_route: TransitGatewayRouteTableRoute
        attr_accessor explanations: explanation_list
        attr_accessor elastic_load_balancer_listener: AnalysisComponent
        attr_accessor firewall_stateless_rule: FirewallStatelessRule
        attr_accessor firewall_stateful_rule: FirewallStatefulRule
        attr_accessor service_name: string
      end
      type path_component_list = ::Array[PathComponent]
      class PathFilter
        attr_accessor source_address: ip_address
        attr_accessor source_port_range: FilterPortRange
        attr_accessor destination_address: ip_address
        attr_accessor destination_port_range: FilterPortRange
      end
      type path_request_filter = { source_address: ip_address?, source_port_range: request_filter_port_range?, destination_address: ip_address?, destination_port_range: request_filter_port_range? }
      class PathStatement
        attr_accessor packet_header_statement: PacketHeaderStatement
        attr_accessor resource_statement: ResourceStatement
      end
      type path_statement_request = { packet_header_statement: packet_header_statement_request?, resource_statement: resource_statement_request? }
      type payer_responsibility = ("ServiceOwner")
      type payment_option = ("AllUpfront" | "PartialUpfront" | "NoUpfront")
      class PciId
        attr_accessor device_id: string
        attr_accessor vendor_id: string
        attr_accessor subsystem_id: string
        attr_accessor subsystem_vendor_id: string
      end
      class PeeringAttachmentStatus
        attr_accessor code: string
        attr_accessor message: string
      end
      class PeeringConnectionOptions
        attr_accessor allow_dns_resolution_from_remote_vpc: boolean
        attr_accessor allow_egress_from_local_classic_link_to_remote_vpc: boolean
        attr_accessor allow_egress_from_local_vpc_to_remote_classic_link: boolean
      end
      type peering_connection_options_request = { allow_dns_resolution_from_remote_vpc: boolean?, allow_egress_from_local_classic_link_to_remote_vpc: boolean?, allow_egress_from_local_vpc_to_remote_classic_link: boolean? }
      class PeeringTgwInfo
        attr_accessor transit_gateway_id: string
        attr_accessor core_network_id: string
        attr_accessor owner_id: string
        attr_accessor region: string
      end
      type period_type = ("five-minutes" | "fifteen-minutes" | "one-hour" | "three-hours" | "one-day" | "one-week")
      type permission_group = ("all")
      type phase_1_dh_group_numbers_list = ::Array[Phase1DHGroupNumbersListValue]
      class Phase1DHGroupNumbersListValue
        attr_accessor value: integer
      end
      type phase_1_dh_group_numbers_request_list = ::Array[phase_1_dh_group_numbers_request_list_value]
      type phase_1_dh_group_numbers_request_list_value = { value: integer? }
      type phase_1_encryption_algorithms_list = ::Array[Phase1EncryptionAlgorithmsListValue]
      class Phase1EncryptionAlgorithmsListValue
        attr_accessor value: string
      end
      type phase_1_encryption_algorithms_request_list = ::Array[phase_1_encryption_algorithms_request_list_value]
      type phase_1_encryption_algorithms_request_list_value = { value: string? }
      type phase_1_integrity_algorithms_list = ::Array[Phase1IntegrityAlgorithmsListValue]
      class Phase1IntegrityAlgorithmsListValue
        attr_accessor value: string
      end
      type phase_1_integrity_algorithms_request_list = ::Array[phase_1_integrity_algorithms_request_list_value]
      type phase_1_integrity_algorithms_request_list_value = { value: string? }
      type phase_2_dh_group_numbers_list = ::Array[Phase2DHGroupNumbersListValue]
      class Phase2DHGroupNumbersListValue
        attr_accessor value: integer
      end
      type phase_2_dh_group_numbers_request_list = ::Array[phase_2_dh_group_numbers_request_list_value]
      type phase_2_dh_group_numbers_request_list_value = { value: integer? }
      type phase_2_encryption_algorithms_list = ::Array[Phase2EncryptionAlgorithmsListValue]
      class Phase2EncryptionAlgorithmsListValue
        attr_accessor value: string
      end
      type phase_2_encryption_algorithms_request_list = ::Array[phase_2_encryption_algorithms_request_list_value]
      type phase_2_encryption_algorithms_request_list_value = { value: string? }
      type phase_2_integrity_algorithms_list = ::Array[Phase2IntegrityAlgorithmsListValue]
      class Phase2IntegrityAlgorithmsListValue
        attr_accessor value: string
      end
      type phase_2_integrity_algorithms_request_list = ::Array[phase_2_integrity_algorithms_request_list_value]
      type phase_2_integrity_algorithms_request_list_value = { value: string? }
      type placement = { availability_zone: string?, affinity: string?, group_name: placement_group_name?, partition_number: integer?, host_id: string?, tenancy: tenancy?, spread_domain: string?, host_resource_group_arn: string?, group_id: placement_group_id? }
      class Placement
        attr_accessor availability_zone: string
        attr_accessor affinity: string
        attr_accessor group_name: placement_group_name
        attr_accessor partition_number: integer
        attr_accessor host_id: string
        attr_accessor tenancy: tenancy
        attr_accessor spread_domain: string
        attr_accessor host_resource_group_arn: string
        attr_accessor group_id: placement_group_id
      end
      class PlacementGroup
        attr_accessor group_name: string
        attr_accessor state: placement_group_state
        attr_accessor strategy: placement_strategy
        attr_accessor partition_count: integer
        attr_accessor group_id: string
        attr_accessor tags: tag_list_output
        attr_accessor group_arn: string
        attr_accessor spread_level: spread_level
      end
      type placement_group_arn = ::String
      type placement_group_id = ::String
      type placement_group_id_string_list = ::Array[placement_group_id]
      class PlacementGroupInfo
        attr_accessor supported_strategies: placement_group_strategy_list
      end
      type placement_group_list_output = ::Array[PlacementGroup]
      type placement_group_name = ::String
      type placement_group_state = ("pending" | "available" | "deleting" | "deleted")
      type placement_group_strategy = ("cluster" | "partition" | "spread")
      type placement_group_strategy_list = ::Array[placement_group_strategy]
      type placement_group_string_list = ::Array[placement_group_name]
      class PlacementResponse
        attr_accessor group_name: placement_group_name
      end
      type placement_strategy = ("cluster" | "spread" | "partition")
      type platform_values = ("Windows")
      class PoolCidrBlock
        attr_accessor cidr: string
      end
      type pool_cidr_blocks_set = ::Array[PoolCidrBlock]
      type pool_max_results = ::Integer
      type port = ::Integer
      class PortRange
        attr_accessor from: integer
        attr_accessor to: integer
      end
      type port_range = { from: integer?, to: integer? }
      type port_range_list_output = ::Array[PortRange]
      class PrefixList
        attr_accessor cidrs: value_string_list
        attr_accessor prefix_list_id: string
        attr_accessor prefix_list_name: string
      end
      class PrefixListAssociation
        attr_accessor resource_id: string
        attr_accessor resource_owner: string
      end
      type prefix_list_association_set = ::Array[PrefixListAssociation]
      class PrefixListEntry
        attr_accessor cidr: string
        attr_accessor description: string
      end
      type prefix_list_entry_set = ::Array[PrefixListEntry]
      type prefix_list_id = { description: string?, prefix_list_id: string? }
      class PrefixListId
        attr_accessor description: string
        attr_accessor prefix_list_id: string
      end
      type prefix_list_id_list_input = ::Array[prefix_list_id]
      type prefix_list_id_list_output = ::Array[PrefixListId]
      type prefix_list_id_set = ::Array[string]
      type prefix_list_max_results = ::Integer
      type prefix_list_resource_id = ::String
      type prefix_list_resource_id_string_list = ::Array[prefix_list_resource_id]
      type prefix_list_set = ::Array[PrefixList]
      type prefix_list_state = ("create-in-progress" | "create-complete" | "create-failed" | "modify-in-progress" | "modify-complete" | "modify-failed" | "restore-in-progress" | "restore-complete" | "restore-failed" | "delete-in-progress" | "delete-complete" | "delete-failed")
      class PriceSchedule
        attr_accessor active: boolean
        attr_accessor currency_code: currency_code_values
        attr_accessor price: double
        attr_accessor term: long
      end
      type price_schedule_list = ::Array[PriceSchedule]
      type price_schedule_specification = { currency_code: currency_code_values?, price: double?, term: long? }
      type price_schedule_specification_list = ::Array[price_schedule_specification]
      class PricingDetail
        attr_accessor count: integer
        attr_accessor price: double
      end
      type pricing_details_list = ::Array[PricingDetail]
      class PrincipalIdFormat
        attr_accessor arn: string
        attr_accessor statuses: id_format_list
      end
      type principal_id_format_list = ::Array[PrincipalIdFormat]
      type principal_type = ("All" | "Service" | "OrganizationUnit" | "Account" | "User" | "Role")
      type priority = ::Integer
      class PrivateDnsDetails
        attr_accessor private_dns_name: string
      end
      type private_dns_details_set = ::Array[PrivateDnsDetails]
      class PrivateDnsNameConfiguration
        attr_accessor state: dns_name_state
        attr_accessor type_: string
        attr_accessor value: string
        attr_accessor name: string
      end
      class PrivateDnsNameOptionsOnLaunch
        attr_accessor hostname_type: hostname_type
        attr_accessor enable_resource_name_dns_a_record: boolean
        attr_accessor enable_resource_name_dns_aaaa_record: boolean
      end
      type private_dns_name_options_request = { hostname_type: hostname_type?, enable_resource_name_dns_a_record: boolean?, enable_resource_name_dns_aaaa_record: boolean? }
      class PrivateDnsNameOptionsResponse
        attr_accessor hostname_type: hostname_type
        attr_accessor enable_resource_name_dns_a_record: boolean
        attr_accessor enable_resource_name_dns_aaaa_record: boolean
      end
      type private_ip_address_config_set = ::Array[scheduled_instances_private_ip_address_config]
      type private_ip_address_count = ::Integer
      type private_ip_address_specification = { primary: boolean?, private_ip_address: string? }
      class PrivateIpAddressSpecification
        attr_accessor primary: boolean
        attr_accessor private_ip_address: string
      end
      type private_ip_address_specification_list_input = ::Array[private_ip_address_specification]
      type private_ip_address_specification_list_output = ::Array[PrivateIpAddressSpecification]
      type private_ip_address_string_list = ::Array[string]
      class ProcessorInfo
        attr_accessor supported_architectures: architecture_type_list
        attr_accessor sustained_clock_speed_in_ghz: processor_sustained_clock_speed
        attr_accessor supported_features: supported_additional_processor_feature_list
      end
      type processor_sustained_clock_speed = ::Float
      class ProductCode
        attr_accessor product_code_id: string
        attr_accessor product_code_type: product_code_values
      end
      type product_code_list = ::Array[ProductCode]
      type product_code_string_list = ::Array[string]
      type product_code_values = ("devpay" | "marketplace")
      type product_description_list = ::Array[string]
      class PropagatingVgw
        attr_accessor gateway_id: string
      end
      type propagating_vgw_list = ::Array[PropagatingVgw]
      type protocol = ("tcp" | "udp")
      type protocol_int = ::Integer
      type protocol_int_list = ::Array[protocol_int]
      type protocol_list = ::Array[protocol]
      type protocol_value = ("gre")
      type provision_byoip_cidr_request = { cidr: string, cidr_authorization_context: cidr_authorization_context?, publicly_advertisable: boolean?, description: string?, dry_run: boolean?, pool_tag_specifications: tag_specification_list_input?, multi_region: boolean? }
      class ProvisionByoipCidrResult
        attr_accessor byoip_cidr: ByoipCidr
      end
      type provision_ipam_pool_cidr_request = { dry_run: boolean?, ipam_pool_id: ipam_pool_id, cidr: string?, cidr_authorization_context: ipam_cidr_authorization_context?, netmask_length: integer?, client_token: string? }
      class ProvisionIpamPoolCidrResult
        attr_accessor ipam_pool_cidr: IpamPoolCidr
      end
      type provision_public_ipv_4_pool_cidr_request = { dry_run: boolean?, ipam_pool_id: ipam_pool_id, pool_id: ipv_4_pool_ec2_id, netmask_length: integer }
      class ProvisionPublicIpv4PoolCidrResult
        attr_accessor pool_id: ipv_4_pool_ec2_id
        attr_accessor pool_address_range: PublicIpv4PoolRange
      end
      class ProvisionedBandwidth
        attr_accessor provision_time: date_time
        attr_accessor provisioned: string
        attr_accessor request_time: date_time
        attr_accessor requested: string
        attr_accessor status: string
      end
      class PtrUpdateStatus
        attr_accessor value: string
        attr_accessor status: string
        attr_accessor reason: string
      end
      type public_ip_address = ::String
      type public_ip_string_list = ::Array[string]
      class PublicIpv4Pool
        attr_accessor pool_id: string
        attr_accessor description: string
        attr_accessor pool_address_ranges: public_ipv_4_pool_range_set_output
        attr_accessor total_address_count: integer
        attr_accessor total_available_address_count: integer
        attr_accessor network_border_group: string
        attr_accessor tags: tag_list_output
      end
      type public_ipv_4_pool_id_string_list = ::Array[ipv_4_pool_ec2_id]
      class PublicIpv4PoolRange
        attr_accessor first_address: string
        attr_accessor last_address: string
        attr_accessor address_count: integer
        attr_accessor available_address_count: integer
      end
      type public_ipv_4_pool_range_set_output = ::Array[PublicIpv4PoolRange]
      type public_ipv_4_pool_set = ::Array[PublicIpv4Pool]
      class Purchase
        attr_accessor currency_code: currency_code_values
        attr_accessor duration: integer
        attr_accessor host_id_set: response_host_id_set
        attr_accessor host_reservation_id: host_reservation_id
        attr_accessor hourly_price: string
        attr_accessor instance_family: string
        attr_accessor payment_option: payment_option
        attr_accessor upfront_price: string
      end
      type purchase_host_reservation_request = { client_token: string?, currency_code: currency_code_values?, host_id_set: request_host_id_set, limit_price: string?, offering_id: offering_id, tag_specifications: tag_specification_list_input? }
      class PurchaseHostReservationResult
        attr_accessor client_token: string
        attr_accessor currency_code: currency_code_values
        attr_accessor purchase: purchase_set
        attr_accessor total_hourly_price: string
        attr_accessor total_upfront_price: string
      end
      type purchase_request = { instance_count: integer, purchase_token: string }
      type purchase_request_set = ::Array[purchase_request]
      type purchase_reserved_instances_offering_request = { instance_count: integer, reserved_instances_offering_id: reserved_instances_offering_id, dry_run: boolean?, limit_price: reserved_instance_limit_price?, purchase_time: date_time? }
      class PurchaseReservedInstancesOfferingResult
        attr_accessor reserved_instances_id: string
      end
      type purchase_scheduled_instances_request = { client_token: string?, dry_run: boolean?, purchase_requests: purchase_request_set }
      class PurchaseScheduledInstancesResult
        attr_accessor scheduled_instance_set: purchased_scheduled_instance_set
      end
      type purchase_set = ::Array[Purchase]
      type purchased_scheduled_instance_set = ::Array[ScheduledInstance]
      type ri_product_description = ("Linux/UNIX" | "Linux/UNIX (Amazon VPC)" | "Windows" | "Windows (Amazon VPC)")
      type ramdisk_id = ::String
      type reason_codes_list = ::Array[report_instance_reason_codes]
      type reboot_instances_request = { instance_ids: instance_id_string_list, dry_run: boolean? }
      class RecurringCharge
        attr_accessor amount: double
        attr_accessor frequency: recurring_charge_frequency
      end
      type recurring_charge_frequency = ("Hourly")
      type recurring_charges_list = ::Array[RecurringCharge]
      class ReferencedSecurityGroup
        attr_accessor group_id: string
        attr_accessor peering_status: string
        attr_accessor user_id: string
        attr_accessor vpc_id: string
        attr_accessor vpc_peering_connection_id: string
      end
      class Region
        attr_accessor endpoint: string
        attr_accessor region_name: string
        attr_accessor opt_in_status: string
      end
      type region_list = ::Array[Region]
      type region_name_string_list = ::Array[string]
      type region_names = ::Array[string]
      type register_image_request = { image_location: string?, architecture: architecture_values?, block_device_mappings: block_device_mapping_request_list_input?, description: string?, dry_run: boolean?, ena_support: boolean?, kernel_id: kernel_id?, name: string, billing_products: billing_product_list?, ramdisk_id: ramdisk_id?, root_device_name: string?, sriov_net_support: string?, virtualization_type: string?, boot_mode: boot_mode_values?, tpm_support: tpm_support_values?, uefi_data: string_type?, imds_support: imds_support_values? }
      class RegisterImageResult
        attr_accessor image_id: string
      end
      type register_instance_event_notification_attributes_request = { dry_run: boolean?, instance_tag_attribute: register_instance_tag_attribute_request? }
      class RegisterInstanceEventNotificationAttributesResult
        attr_accessor instance_tag_attribute: InstanceTagNotificationAttribute
      end
      type register_instance_tag_attribute_request = { include_all_tags_of_instance: boolean?, instance_tag_keys: instance_tag_key_set? }
      type register_transit_gateway_multicast_group_members_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id, group_ip_address: string?, network_interface_ids: transit_gateway_network_interface_id_list, dry_run: boolean? }
      class RegisterTransitGatewayMulticastGroupMembersResult
        attr_accessor registered_multicast_group_members: TransitGatewayMulticastRegisteredGroupMembers
      end
      type register_transit_gateway_multicast_group_sources_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id, group_ip_address: string?, network_interface_ids: transit_gateway_network_interface_id_list, dry_run: boolean? }
      class RegisterTransitGatewayMulticastGroupSourcesResult
        attr_accessor registered_multicast_group_sources: TransitGatewayMulticastRegisteredGroupSources
      end
      type reject_transit_gateway_multicast_domain_associations_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id?, transit_gateway_attachment_id: transit_gateway_attachment_id?, subnet_ids: value_string_list?, dry_run: boolean? }
      class RejectTransitGatewayMulticastDomainAssociationsResult
        attr_accessor associations: TransitGatewayMulticastDomainAssociations
      end
      type reject_transit_gateway_peering_attachment_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class RejectTransitGatewayPeeringAttachmentResult
        attr_accessor transit_gateway_peering_attachment: TransitGatewayPeeringAttachment
      end
      type reject_transit_gateway_vpc_attachment_request = { transit_gateway_attachment_id: transit_gateway_attachment_id, dry_run: boolean? }
      class RejectTransitGatewayVpcAttachmentResult
        attr_accessor transit_gateway_vpc_attachment: TransitGatewayVpcAttachment
      end
      type reject_vpc_endpoint_connections_request = { dry_run: boolean?, service_id: vpc_endpoint_service_id, vpc_endpoint_ids: vpc_endpoint_id_list }
      class RejectVpcEndpointConnectionsResult
        attr_accessor unsuccessful: unsuccessful_item_set
      end
      type reject_vpc_peering_connection_request = { dry_run: boolean?, vpc_peering_connection_id: vpc_peering_connection_id }
      class RejectVpcPeeringConnectionResult
        attr_accessor return: boolean
      end
      type release_address_request = { allocation_id: allocation_id?, public_ip: string?, network_border_group: string?, dry_run: boolean? }
      type release_hosts_request = { host_ids: request_host_id_list }
      class ReleaseHostsResult
        attr_accessor successful: response_host_id_list
        attr_accessor unsuccessful: unsuccessful_item_list
      end
      type release_ipam_pool_allocation_request = { dry_run: boolean?, ipam_pool_id: ipam_pool_id, cidr: string, ipam_pool_allocation_id: ipam_pool_allocation_id }
      class ReleaseIpamPoolAllocationResult
        attr_accessor success: boolean
      end
      type remove_ipam_operating_region = { region_name: string? }
      type remove_ipam_operating_region_set = ::Array[remove_ipam_operating_region]
      type remove_prefix_list_entries = ::Array[remove_prefix_list_entry]
      type remove_prefix_list_entry = { cidr: string }
      type replace_iam_instance_profile_association_request = { iam_instance_profile: iam_instance_profile_specification, association_id: iam_instance_profile_association_id }
      class ReplaceIamInstanceProfileAssociationResult
        attr_accessor iam_instance_profile_association: IamInstanceProfileAssociation
      end
      type replace_network_acl_association_request = { association_id: network_acl_association_id, dry_run: boolean?, network_acl_id: network_acl_id }
      class ReplaceNetworkAclAssociationResult
        attr_accessor new_association_id: string
      end
      type replace_network_acl_entry_request = { cidr_block: string?, dry_run: boolean?, egress: boolean, icmp_type_code: icmp_type_code?, ipv_6_cidr_block: string?, network_acl_id: network_acl_id, port_range: port_range?, protocol: string, rule_action: rule_action, rule_number: integer }
      class ReplaceRootVolumeTask
        attr_accessor replace_root_volume_task_id: replace_root_volume_task_id
        attr_accessor instance_id: string
        attr_accessor task_state: replace_root_volume_task_state
        attr_accessor start_time: string
        attr_accessor complete_time: string
        attr_accessor tags: tag_list_output
        attr_accessor image_id: image_id
        attr_accessor snapshot_id: snapshot_id
        attr_accessor delete_replaced_root_volume: boolean
      end
      type replace_root_volume_task_id = ::String
      type replace_root_volume_task_ids = ::Array[replace_root_volume_task_id]
      type replace_root_volume_task_state = ("pending" | "in-progress" | "failing" | "succeeded" | "failed" | "failed-detached")
      type replace_root_volume_tasks_output = ::Array[ReplaceRootVolumeTask]
      type replace_route_request = { destination_cidr_block: string?, destination_ipv_6_cidr_block: string?, destination_prefix_list_id: prefix_list_resource_id?, dry_run: boolean?, vpc_endpoint_id: vpc_endpoint_id?, egress_only_internet_gateway_id: egress_only_internet_gateway_id?, gateway_id: route_gateway_id?, instance_id: instance_id?, local_target: boolean?, nat_gateway_id: nat_gateway_id?, transit_gateway_id: transit_gateway_id?, local_gateway_id: local_gateway_id?, carrier_gateway_id: carrier_gateway_id?, network_interface_id: network_interface_id?, route_table_id: route_table_id, vpc_peering_connection_id: vpc_peering_connection_id?, core_network_arn: core_network_arn? }
      type replace_route_table_association_request = { association_id: route_table_association_id, dry_run: boolean?, route_table_id: route_table_id }
      class ReplaceRouteTableAssociationResult
        attr_accessor new_association_id: string
        attr_accessor association_state: RouteTableAssociationState
      end
      type replace_transit_gateway_route_request = { destination_cidr_block: string, transit_gateway_route_table_id: transit_gateway_route_table_id, transit_gateway_attachment_id: transit_gateway_attachment_id?, blackhole: boolean?, dry_run: boolean? }
      class ReplaceTransitGatewayRouteResult
        attr_accessor route: TransitGatewayRoute
      end
      type replace_vpn_tunnel_request = { vpn_connection_id: vpn_connection_id, vpn_tunnel_outside_ip_address: string, apply_pending_maintenance: boolean?, dry_run: boolean? }
      class ReplaceVpnTunnelResult
        attr_accessor return: boolean
      end
      type replacement_strategy = ("launch" | "launch-before-terminate")
      type report_instance_reason_codes = ("instance-stuck-in-state" | "unresponsive" | "not-accepting-credentials" | "password-not-available" | "performance-network" | "performance-instance-store" | "performance-ebs-volume" | "performance-other" | "other")
      type report_instance_status_request = { description: string?, dry_run: boolean?, end_time: date_time?, instances: instance_id_string_list, reason_codes: reason_codes_list, start_time: date_time?, status: report_status_type }
      type report_status_type = ("ok" | "impaired")
      type request_filter_port_range = { from_port: port?, to_port: port? }
      type request_host_id_list = ::Array[dedicated_host_id]
      type request_host_id_set = ::Array[dedicated_host_id]
      type request_instance_type_list = ::Array[instance_type]
      type request_ipam_resource_tag = { key: string?, value: string? }
      type request_ipam_resource_tag_list_input = ::Array[request_ipam_resource_tag]
      type request_launch_template_data = { kernel_id: kernel_id?, ebs_optimized: boolean?, iam_instance_profile: launch_template_iam_instance_profile_specification_request?, block_device_mappings: launch_template_block_device_mapping_request_list?, network_interfaces: launch_template_instance_network_interface_specification_request_list?, image_id: image_id?, instance_type: instance_type?, key_name: key_pair_name?, monitoring: launch_templates_monitoring_request?, placement: launch_template_placement_request?, ram_disk_id: ramdisk_id?, disable_api_termination: boolean?, instance_initiated_shutdown_behavior: shutdown_behavior?, user_data: sensitive_user_data?, tag_specifications: launch_template_tag_specification_request_list?, elastic_gpu_specifications: elastic_gpu_specification_list_input?, elastic_inference_accelerators: launch_template_elastic_inference_accelerator_list?, security_group_ids: security_group_id_string_list?, security_groups: security_group_string_list?, instance_market_options: launch_template_instance_market_options_request?, credit_specification: credit_specification_request?, cpu_options: launch_template_cpu_options_request?, capacity_reservation_specification: launch_template_capacity_reservation_specification_request?, license_specifications: launch_template_license_specification_list_request?, hibernation_options: launch_template_hibernation_options_request?, metadata_options: launch_template_instance_metadata_options_request?, enclave_options: launch_template_enclave_options_request?, instance_requirements: instance_requirements_request?, private_dns_name_options: launch_template_private_dns_name_options_request?, maintenance_options: launch_template_instance_maintenance_options_request?, disable_api_stop: boolean? }
      type request_spot_fleet_request = { dry_run: boolean?, spot_fleet_request_config: spot_fleet_request_config_data }
      class RequestSpotFleetResponse
        attr_accessor spot_fleet_request_id: string
      end
      type request_spot_instances_request = { availability_zone_group: string?, block_duration_minutes: integer?, client_token: string?, dry_run: boolean?, instance_count: integer?, launch_group: string?, launch_specification: request_spot_launch_specification?, spot_price: string?, type: spot_instance_type?, valid_from: date_time?, valid_until: date_time?, tag_specifications: tag_specification_list_input?, instance_interruption_behavior: instance_interruption_behavior? }
      class RequestSpotInstancesResult
        attr_accessor spot_instance_requests: spot_instance_request_list
      end
      type request_spot_launch_specification = { security_group_ids: request_spot_launch_specification_security_group_id_list?, security_groups: request_spot_launch_specification_security_group_list?, addressing_type: string?, block_device_mappings: block_device_mapping_list_input?, ebs_optimized: boolean?, iam_instance_profile: iam_instance_profile_specification?, image_id: image_id?, instance_type: instance_type?, kernel_id: kernel_id?, key_name: key_pair_name?, monitoring: run_instances_monitoring_enabled?, network_interfaces: instance_network_interface_specification_list_input?, placement: spot_placement?, ramdisk_id: ramdisk_id?, subnet_id: subnet_id?, user_data: sensitive_user_data? }
      type request_spot_launch_specification_security_group_id_list = ::Array[security_group_id]
      type request_spot_launch_specification_security_group_list = ::Array[string]
      class Reservation
        attr_accessor groups: group_identifier_list_output
        attr_accessor instances: instance_list
        attr_accessor owner_id: string
        attr_accessor requester_id: string
        attr_accessor reservation_id: string
      end
      type reservation_fleet_instance_specification = { instance_type: instance_type?, instance_platform: capacity_reservation_instance_platform?, weight: double_with_constraints?, availability_zone: string?, availability_zone_id: string?, ebs_optimized: boolean?, priority: integer_with_constraints? }
      type reservation_fleet_instance_specification_list = ::Array[reservation_fleet_instance_specification]
      type reservation_id = ::String
      type reservation_list_output = ::Array[Reservation]
      type reservation_state = ("payment-pending" | "payment-failed" | "active" | "retired")
      class ReservationValue
        attr_accessor hourly_price: string
        attr_accessor remaining_total_value: string
        attr_accessor remaining_upfront_value: string
      end
      type reserved_instance_id_set = ::Array[reservation_id]
      type reserved_instance_limit_price = { amount: double?, currency_code: currency_code_values? }
      class ReservedInstanceReservationValue
        attr_accessor reservation_value: ReservationValue
        attr_accessor reserved_instance_id: string
      end
      type reserved_instance_reservation_value_set = ::Array[ReservedInstanceReservationValue]
      type reserved_instance_state = ("payment-pending" | "active" | "payment-failed" | "retired" | "queued" | "queued-deleted")
      class ReservedInstances
        attr_accessor availability_zone: string
        attr_accessor duration: long
        attr_accessor end_: date_time
        attr_accessor fixed_price: float
        attr_accessor instance_count: integer
        attr_accessor instance_type: instance_type
        attr_accessor product_description: ri_product_description
        attr_accessor reserved_instances_id: string
        attr_accessor start: date_time
        attr_accessor state: reserved_instance_state
        attr_accessor usage_price: float
        attr_accessor currency_code: currency_code_values
        attr_accessor instance_tenancy: tenancy
        attr_accessor offering_class: offering_class_type
        attr_accessor offering_type: offering_type_values
        attr_accessor recurring_charges: recurring_charges_list
        attr_accessor scope: scope
        attr_accessor tags: tag_list_output
      end
      class ReservedInstancesConfiguration
        attr_accessor availability_zone: string
        attr_accessor instance_count: integer
        attr_accessor instance_type: instance_type
        attr_accessor platform: string
        attr_accessor scope: scope
      end
      type reserved_instances_configuration = { availability_zone: string?, instance_count: integer?, instance_type: instance_type?, platform: string?, scope: scope? }
      type reserved_instances_configuration_list_input = ::Array[reserved_instances_configuration]
      class ReservedInstancesId
        attr_accessor reserved_instances_id: string
      end
      type reserved_instances_id_string_list = ::Array[reservation_id]
      type reserved_instances_list = ::Array[ReservedInstances]
      class ReservedInstancesListing
        attr_accessor client_token: string
        attr_accessor create_date: date_time
        attr_accessor instance_counts: instance_count_list
        attr_accessor price_schedules: price_schedule_list
        attr_accessor reserved_instances_id: string
        attr_accessor reserved_instances_listing_id: string
        attr_accessor status: listing_status
        attr_accessor status_message: string
        attr_accessor tags: tag_list_output
        attr_accessor update_date: date_time
      end
      type reserved_instances_listing_id = ::String
      type reserved_instances_listing_list = ::Array[ReservedInstancesListing]
      class ReservedInstancesModification
        attr_accessor client_token: string
        attr_accessor create_date: date_time
        attr_accessor effective_date: date_time
        attr_accessor modification_results: reserved_instances_modification_result_list
        attr_accessor reserved_instances_ids: reserved_intances_ids
        attr_accessor reserved_instances_modification_id: string
        attr_accessor status: string
        attr_accessor status_message: string
        attr_accessor update_date: date_time
      end
      type reserved_instances_modification_id = ::String
      type reserved_instances_modification_id_string_list = ::Array[reserved_instances_modification_id]
      type reserved_instances_modification_list = ::Array[ReservedInstancesModification]
      class ReservedInstancesModificationResult
        attr_accessor reserved_instances_id: string
        attr_accessor target_configuration: ReservedInstancesConfiguration
      end
      type reserved_instances_modification_result_list = ::Array[ReservedInstancesModificationResult]
      class ReservedInstancesOffering
        attr_accessor availability_zone: string
        attr_accessor duration: long
        attr_accessor fixed_price: float
        attr_accessor instance_type: instance_type
        attr_accessor product_description: ri_product_description
        attr_accessor reserved_instances_offering_id: string
        attr_accessor usage_price: float
        attr_accessor currency_code: currency_code_values
        attr_accessor instance_tenancy: tenancy
        attr_accessor marketplace: boolean
        attr_accessor offering_class: offering_class_type
        attr_accessor offering_type: offering_type_values
        attr_accessor pricing_details: pricing_details_list
        attr_accessor recurring_charges: recurring_charges_list
        attr_accessor scope: scope
      end
      type reserved_instances_offering_id = ::String
      type reserved_instances_offering_id_string_list = ::Array[reserved_instances_offering_id]
      type reserved_instances_offering_list = ::Array[ReservedInstancesOffering]
      type reserved_intances_ids = ::Array[ReservedInstancesId]
      type reset_address_attribute_request = { allocation_id: allocation_id, attribute: address_attribute_name, dry_run: boolean? }
      class ResetAddressAttributeResult
        attr_accessor address: AddressAttribute
      end
      type reset_ebs_default_kms_key_id_request = { dry_run: boolean? }
      class ResetEbsDefaultKmsKeyIdResult
        attr_accessor kms_key_id: string
      end
      type reset_fpga_image_attribute_name = ("loadPermission")
      type reset_fpga_image_attribute_request = { dry_run: boolean?, fpga_image_id: fpga_image_id, attribute: reset_fpga_image_attribute_name? }
      class ResetFpgaImageAttributeResult
        attr_accessor return: boolean
      end
      type reset_image_attribute_name = ("launchPermission")
      type reset_image_attribute_request = { attribute: reset_image_attribute_name, image_id: image_id, dry_run: boolean? }
      type reset_instance_attribute_request = { attribute: instance_attribute_name, dry_run: boolean?, instance_id: instance_id }
      type reset_network_interface_attribute_request = { dry_run: boolean?, network_interface_id: network_interface_id, source_dest_check: string? }
      type reset_snapshot_attribute_request = { attribute: snapshot_attribute_name, snapshot_id: snapshot_id, dry_run: boolean? }
      type resource_arn = ::String
      type resource_id_list = ::Array[taggable_resource_id]
      type resource_list = ::Array[string]
      class ResourceStatement
        attr_accessor resources: value_string_list
        attr_accessor resource_types: value_string_list
      end
      type resource_statement_request = { resources: value_string_list?, resource_types: value_string_list? }
      type resource_type = ("capacity-reservation" | "client-vpn-endpoint" | "customer-gateway" | "carrier-gateway" | "coip-pool" | "dedicated-host" | "dhcp-options" | "egress-only-internet-gateway" | "elastic-ip" | "elastic-gpu" | "export-image-task" | "export-instance-task" | "fleet" | "fpga-image" | "host-reservation" | "image" | "import-image-task" | "import-snapshot-task" | "instance" | "instance-event-window" | "internet-gateway" | "ipam" | "ipam-pool" | "ipam-scope" | "ipv4pool-ec2" | "ipv6pool-ec2" | "key-pair" | "launch-template" | "local-gateway" | "local-gateway-route-table" | "local-gateway-virtual-interface" | "local-gateway-virtual-interface-group" | "local-gateway-route-table-vpc-association" | "local-gateway-route-table-virtual-interface-group-association" | "natgateway" | "network-acl" | "network-interface" | "network-insights-analysis" | "network-insights-path" | "network-insights-access-scope" | "network-insights-access-scope-analysis" | "placement-group" | "prefix-list" | "replace-root-volume-task" | "reserved-instances" | "route-table" | "security-group" | "security-group-rule" | "snapshot" | "spot-fleet-request" | "spot-instances-request" | "subnet" | "subnet-cidr-reservation" | "traffic-mirror-filter" | "traffic-mirror-session" | "traffic-mirror-target" | "transit-gateway" | "transit-gateway-attachment" | "transit-gateway-connect-peer" | "transit-gateway-multicast-domain" | "transit-gateway-policy-table" | "transit-gateway-route-table" | "transit-gateway-route-table-announcement" | "volume" | "vpc" | "vpc-endpoint" | "vpc-endpoint-connection" | "vpc-endpoint-service" | "vpc-endpoint-service-permission" | "vpc-peering-connection" | "vpn-connection" | "vpn-gateway" | "vpc-flow-log" | "capacity-reservation-fleet" | "traffic-mirror-filter-rule" | "vpc-endpoint-connection-device-type" | "verified-access-instance" | "verified-access-group" | "verified-access-endpoint" | "verified-access-policy" | "verified-access-trust-provider" | "vpn-connection-device-type" | "vpc-block-public-access-exclusion" | "ipam-resource-discovery" | "ipam-resource-discovery-association")
      class ResponseError
        attr_accessor code: launch_template_error_code
        attr_accessor message: string
      end
      type response_host_id_list = ::Array[string]
      type response_host_id_set = ::Array[string]
      class ResponseLaunchTemplateData
        attr_accessor kernel_id: string
        attr_accessor ebs_optimized: boolean
        attr_accessor iam_instance_profile: LaunchTemplateIamInstanceProfileSpecification
        attr_accessor block_device_mappings: launch_template_block_device_mapping_list
        attr_accessor network_interfaces: launch_template_instance_network_interface_specification_list
        attr_accessor image_id: string
        attr_accessor instance_type: instance_type
        attr_accessor key_name: string
        attr_accessor monitoring: LaunchTemplatesMonitoring
        attr_accessor placement: LaunchTemplatePlacement
        attr_accessor ram_disk_id: string
        attr_accessor disable_api_termination: boolean
        attr_accessor instance_initiated_shutdown_behavior: shutdown_behavior
        attr_accessor user_data: sensitive_user_data
        attr_accessor tag_specifications: launch_template_tag_specification_list
        attr_accessor elastic_gpu_specifications: elastic_gpu_specification_response_list
        attr_accessor elastic_inference_accelerators: launch_template_elastic_inference_accelerator_response_list
        attr_accessor security_group_ids: value_string_list
        attr_accessor security_groups: value_string_list
        attr_accessor instance_market_options: LaunchTemplateInstanceMarketOptions
        attr_accessor credit_specification: CreditSpecification
        attr_accessor cpu_options: LaunchTemplateCpuOptions
        attr_accessor capacity_reservation_specification: LaunchTemplateCapacityReservationSpecificationResponse
        attr_accessor license_specifications: launch_template_license_list
        attr_accessor hibernation_options: LaunchTemplateHibernationOptions
        attr_accessor metadata_options: LaunchTemplateInstanceMetadataOptions
        attr_accessor enclave_options: LaunchTemplateEnclaveOptions
        attr_accessor instance_requirements: InstanceRequirements
        attr_accessor private_dns_name_options: LaunchTemplatePrivateDnsNameOptions
        attr_accessor maintenance_options: LaunchTemplateInstanceMaintenanceOptions
        attr_accessor disable_api_stop: boolean
      end
      type restorable_by_string_list = ::Array[string]
      type restore_address_to_classic_request = { dry_run: boolean?, public_ip: string }
      class RestoreAddressToClassicResult
        attr_accessor public_ip: string
        attr_accessor status: status
      end
      type restore_image_from_recycle_bin_request = { image_id: image_id, dry_run: boolean? }
      class RestoreImageFromRecycleBinResult
        attr_accessor return: boolean
      end
      type restore_managed_prefix_list_version_request = { dry_run: boolean?, prefix_list_id: prefix_list_resource_id, previous_version: long, current_version: long }
      class RestoreManagedPrefixListVersionResult
        attr_accessor prefix_list: ManagedPrefixList
      end
      type restore_snapshot_from_recycle_bin_request = { snapshot_id: snapshot_id, dry_run: boolean? }
      class RestoreSnapshotFromRecycleBinResult
        attr_accessor snapshot_id: string
        attr_accessor outpost_arn: string
        attr_accessor description: string
        attr_accessor encrypted: boolean
        attr_accessor owner_id: string
        attr_accessor progress: string
        attr_accessor start_time: millisecond_date_time
        attr_accessor state: snapshot_state
        attr_accessor volume_id: string
        attr_accessor volume_size: integer
      end
      type restore_snapshot_tier_request = { snapshot_id: snapshot_id, temporary_restore_days: restore_snapshot_tier_request_temporary_restore_days?, permanent_restore: boolean?, dry_run: boolean? }
      type restore_snapshot_tier_request_temporary_restore_days = ::Integer
      class RestoreSnapshotTierResult
        attr_accessor snapshot_id: string
        attr_accessor restore_start_time: millisecond_date_time
        attr_accessor restore_duration: integer
        attr_accessor is_permanent_restore: boolean
      end
      type result_range = ::Integer
      type revoke_client_vpn_ingress_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, target_network_cidr: string, access_group_id: string?, revoke_all_groups: boolean?, dry_run: boolean? }
      class RevokeClientVpnIngressResult
        attr_accessor status: ClientVpnAuthorizationRuleStatus
      end
      type revoke_security_group_egress_request = { dry_run: boolean?, group_id: security_group_id, ip_permissions: ip_permission_list_input?, security_group_rule_ids: security_group_rule_id_list?, cidr_ip: string?, from_port: integer?, ip_protocol: string?, to_port: integer?, source_security_group_name: string?, source_security_group_owner_id: string? }
      class RevokeSecurityGroupEgressResult
        attr_accessor return: boolean
        attr_accessor unknown_ip_permissions: ip_permission_list_output
      end
      type revoke_security_group_ingress_request = { cidr_ip: string?, from_port: integer?, group_id: security_group_id?, group_name: security_group_name?, ip_permissions: ip_permission_list_input?, ip_protocol: string?, source_security_group_name: string?, source_security_group_owner_id: string?, to_port: integer?, dry_run: boolean?, security_group_rule_ids: security_group_rule_id_list? }
      class RevokeSecurityGroupIngressResult
        attr_accessor return: boolean
        attr_accessor unknown_ip_permissions: ip_permission_list_output
      end
      type role_id = ::String
      type root_device_type = ("ebs" | "instance-store")
      type root_device_type_list = ::Array[root_device_type]
      class Route
        attr_accessor destination_cidr_block: string
        attr_accessor destination_ipv_6_cidr_block: string
        attr_accessor destination_prefix_list_id: string
        attr_accessor egress_only_internet_gateway_id: string
        attr_accessor gateway_id: string
        attr_accessor instance_id: string
        attr_accessor instance_owner_id: string
        attr_accessor nat_gateway_id: string
        attr_accessor transit_gateway_id: string
        attr_accessor local_gateway_id: string
        attr_accessor carrier_gateway_id: carrier_gateway_id
        attr_accessor network_interface_id: string
        attr_accessor origin: route_origin
        attr_accessor state: route_state
        attr_accessor vpc_peering_connection_id: string
        attr_accessor core_network_arn: core_network_arn
      end
      type route_gateway_id = ::String
      type route_list = ::Array[Route]
      type route_origin = ("CreateRouteTable" | "CreateRoute" | "EnableVgwRoutePropagation")
      type route_state = ("active" | "blackhole")
      class RouteTable
        attr_accessor associations: route_table_association_list
        attr_accessor propagating_vgws: propagating_vgw_list
        attr_accessor route_table_id: string
        attr_accessor routes: route_list
        attr_accessor tags: tag_list_output
        attr_accessor vpc_id: string
        attr_accessor owner_id: string
      end
      class RouteTableAssociation
        attr_accessor main: boolean
        attr_accessor route_table_association_id: string
        attr_accessor route_table_id: string
        attr_accessor subnet_id: string
        attr_accessor gateway_id: string
        attr_accessor association_state: RouteTableAssociationState
      end
      type route_table_association_id = ::String
      type route_table_association_list = ::Array[RouteTableAssociation]
      class RouteTableAssociationState
        attr_accessor state: route_table_association_state_code
        attr_accessor status_message: string
      end
      type route_table_association_state_code = ("associating" | "associated" | "disassociating" | "disassociated" | "failed")
      type route_table_id = ::String
      type route_table_id_string_list = ::Array[route_table_id]
      type route_table_list_output = ::Array[RouteTable]
      type rule_action = ("allow" | "deny")
      class RuleGroupRuleOptionsPair
        attr_accessor rule_group_arn: resource_arn
        attr_accessor rule_options: rule_option_list
      end
      type rule_group_rule_options_pair_list = ::Array[RuleGroupRuleOptionsPair]
      class RuleGroupTypePair
        attr_accessor rule_group_arn: resource_arn
        attr_accessor rule_group_type: string
      end
      type rule_group_type_pair_list = ::Array[RuleGroupTypePair]
      class RuleOption
        attr_accessor keyword: string
        attr_accessor settings: string_list
      end
      type rule_option_list = ::Array[RuleOption]
      class RunInstancesMonitoringEnabled
        attr_accessor enabled: boolean
      end
      type run_instances_monitoring_enabled = { enabled: boolean }
      type run_instances_request = { block_device_mappings: block_device_mapping_request_list_input?, image_id: image_id?, instance_type: instance_type?, ipv_6_address_count: integer?, ipv_6_addresses: instance_ipv_6_address_list_input?, kernel_id: kernel_id?, key_name: key_pair_name?, max_count: integer, min_count: integer, monitoring: run_instances_monitoring_enabled?, placement: placement?, ramdisk_id: ramdisk_id?, security_group_ids: security_group_id_string_list?, security_groups: security_group_string_list?, subnet_id: subnet_id?, user_data: run_instances_user_data?, additional_info: string?, client_token: string?, disable_api_termination: boolean?, dry_run: boolean?, ebs_optimized: boolean?, iam_instance_profile: iam_instance_profile_specification?, instance_initiated_shutdown_behavior: shutdown_behavior?, network_interfaces: instance_network_interface_specification_list_input?, private_ip_address: string?, elastic_gpu_specification: elastic_gpu_specifications_input?, elastic_inference_accelerators: elastic_inference_accelerators?, tag_specifications: tag_specification_list_input?, launch_template: launch_template_specification?, instance_market_options: instance_market_options_request?, credit_specification: credit_specification_request?, cpu_options: cpu_options_request?, capacity_reservation_specification: capacity_reservation_specification?, hibernation_options: hibernation_options_request?, license_specifications: license_specification_list_request?, metadata_options: instance_metadata_options_request?, enclave_options: enclave_options_request?, private_dns_name_options: private_dns_name_options_request?, maintenance_options: instance_maintenance_options_request?, disable_api_stop: boolean? }
      type run_instances_user_data = ::String
      type run_scheduled_instances_request = { client_token: string?, dry_run: boolean?, instance_count: integer?, launch_specification: scheduled_instances_launch_specification, scheduled_instance_id: scheduled_instance_id }
      class RunScheduledInstancesResult
        attr_accessor instance_id_set: instance_id_set
      end
      type s3_object_tag = { key: string?, value: string? }
      type s3_object_tag_list = ::Array[s3_object_tag]
      type s3_storage = { aws_access_key_id: string?, bucket: string?, prefix: string?, upload_policy: blob?, upload_policy_signature: string? }
      class S3Storage
        attr_accessor aws_access_key_id: string
        attr_accessor bucket: string
        attr_accessor prefix: string
        attr_accessor upload_policy: blob
        attr_accessor upload_policy_signature: string
      end
      class ScheduledInstance
        attr_accessor availability_zone: string
        attr_accessor create_date: date_time
        attr_accessor hourly_price: string
        attr_accessor instance_count: integer
        attr_accessor instance_type: string
        attr_accessor network_platform: string
        attr_accessor next_slot_start_time: date_time
        attr_accessor platform: string
        attr_accessor previous_slot_end_time: date_time
        attr_accessor recurrence: ScheduledInstanceRecurrence
        attr_accessor scheduled_instance_id: string
        attr_accessor slot_duration_in_hours: integer
        attr_accessor term_end_date: date_time
        attr_accessor term_start_date: date_time
        attr_accessor total_scheduled_instance_hours: integer
      end
      class ScheduledInstanceAvailability
        attr_accessor availability_zone: string
        attr_accessor available_instance_count: integer
        attr_accessor first_slot_start_time: date_time
        attr_accessor hourly_price: string
        attr_accessor instance_type: string
        attr_accessor max_term_duration_in_days: integer
        attr_accessor min_term_duration_in_days: integer
        attr_accessor network_platform: string
        attr_accessor platform: string
        attr_accessor purchase_token: string
        attr_accessor recurrence: ScheduledInstanceRecurrence
        attr_accessor slot_duration_in_hours: integer
        attr_accessor total_scheduled_instance_hours: integer
      end
      type scheduled_instance_availability_set = ::Array[ScheduledInstanceAvailability]
      type scheduled_instance_id = ::String
      type scheduled_instance_id_request_set = ::Array[scheduled_instance_id]
      class ScheduledInstanceRecurrence
        attr_accessor frequency: string
        attr_accessor interval: integer
        attr_accessor occurrence_day_set: occurrence_day_set
        attr_accessor occurrence_relative_to_end: boolean
        attr_accessor occurrence_unit: string
      end
      type scheduled_instance_recurrence_request = { frequency: string?, interval: integer?, occurrence_days: occurrence_day_request_set?, occurrence_relative_to_end: boolean?, occurrence_unit: string? }
      type scheduled_instance_set = ::Array[ScheduledInstance]
      type scheduled_instances_block_device_mapping = { device_name: string?, ebs: scheduled_instances_ebs?, no_device: string?, virtual_name: string? }
      type scheduled_instances_block_device_mapping_set = ::Array[scheduled_instances_block_device_mapping]
      type scheduled_instances_ebs = { delete_on_termination: boolean?, encrypted: boolean?, iops: integer?, snapshot_id: snapshot_id?, volume_size: integer?, volume_type: string? }
      type scheduled_instances_iam_instance_profile = { arn: string?, name: string? }
      type scheduled_instances_ipv_6_address = { ipv_6_address: ipv_6_address? }
      type scheduled_instances_ipv_6_address_list = ::Array[scheduled_instances_ipv_6_address]
      type scheduled_instances_launch_specification = { block_device_mappings: scheduled_instances_block_device_mapping_set?, ebs_optimized: boolean?, iam_instance_profile: scheduled_instances_iam_instance_profile?, image_id: image_id, instance_type: string?, kernel_id: kernel_id?, key_name: key_pair_name?, monitoring: scheduled_instances_monitoring?, network_interfaces: scheduled_instances_network_interface_set?, placement: scheduled_instances_placement?, ramdisk_id: ramdisk_id?, security_group_ids: scheduled_instances_security_group_id_set?, subnet_id: subnet_id?, user_data: string? }
      type scheduled_instances_monitoring = { enabled: boolean? }
      type scheduled_instances_network_interface = { associate_public_ip_address: boolean?, delete_on_termination: boolean?, description: string?, device_index: integer?, groups: scheduled_instances_security_group_id_set?, ipv_6_address_count: integer?, ipv_6_addresses: scheduled_instances_ipv_6_address_list?, network_interface_id: network_interface_id?, private_ip_address: string?, private_ip_address_configs: private_ip_address_config_set?, secondary_private_ip_address_count: integer?, subnet_id: subnet_id? }
      type scheduled_instances_network_interface_set = ::Array[scheduled_instances_network_interface]
      type scheduled_instances_placement = { availability_zone: string?, group_name: placement_group_name? }
      type scheduled_instances_private_ip_address_config = { primary: boolean?, private_ip_address: string? }
      type scheduled_instances_security_group_id_set = ::Array[security_group_id]
      type search_local_gateway_routes_request = { local_gateway_route_table_id: local_gateway_routetable_id, filters: filter_list?, max_results: max_results?, next_token: string?, dry_run: boolean? }
      class SearchLocalGatewayRoutesResult
        attr_accessor routes: local_gateway_route_list_output
        attr_accessor next_token: string
      end
      type search_transit_gateway_multicast_groups_request = { transit_gateway_multicast_domain_id: transit_gateway_multicast_domain_id, filters: filter_list?, max_results: transit_gateway_max_results?, next_token: string?, dry_run: boolean? }
      class SearchTransitGatewayMulticastGroupsResult
        attr_accessor multicast_groups: transit_gateway_multicast_group_list
        attr_accessor next_token: string
      end
      type search_transit_gateway_routes_request = { transit_gateway_route_table_id: transit_gateway_route_table_id, filters: filter_list, max_results: transit_gateway_max_results?, dry_run: boolean? }
      class SearchTransitGatewayRoutesResult
        attr_accessor routes: transit_gateway_route_list_output
        attr_accessor additional_routes_available: boolean
      end
      class SecurityGroup
        attr_accessor description: string
        attr_accessor group_name: string
        attr_accessor ip_permissions: ip_permission_list_output
        attr_accessor owner_id: string
        attr_accessor group_id: string
        attr_accessor ip_permissions_egress: ip_permission_list_output
        attr_accessor tags: tag_list_output
        attr_accessor vpc_id: string
      end
      type security_group_id = ::String
      type security_group_id_list = ::Array[security_group_id]
      type security_group_id_string_list = ::Array[security_group_id]
      class SecurityGroupIdentifier
        attr_accessor group_id: string
        attr_accessor group_name: string
      end
      type security_group_list = ::Array[SecurityGroup]
      type security_group_name = ::String
      class SecurityGroupReference
        attr_accessor group_id: string
        attr_accessor referencing_vpc_id: string
        attr_accessor vpc_peering_connection_id: string
      end
      type security_group_references = ::Array[SecurityGroupReference]
      class SecurityGroupRule
        attr_accessor security_group_rule_id: security_group_rule_id
        attr_accessor group_id: security_group_id
        attr_accessor group_owner_id: string
        attr_accessor is_egress: boolean
        attr_accessor ip_protocol: string
        attr_accessor from_port: integer
        attr_accessor to_port: integer
        attr_accessor cidr_ipv_4: string
        attr_accessor cidr_ipv_6: string
        attr_accessor prefix_list_id: prefix_list_resource_id
        attr_accessor referenced_group_info: ReferencedSecurityGroup
        attr_accessor description: string
        attr_accessor tags: tag_list_output
      end
      type security_group_rule_description = { security_group_rule_id: string?, description: string? }
      type security_group_rule_description_list = ::Array[security_group_rule_description]
      type security_group_rule_id = ::String
      type security_group_rule_id_list = ::Array[string]
      type security_group_rule_list = ::Array[SecurityGroupRule]
      type security_group_rule_request = { ip_protocol: string?, from_port: integer?, to_port: integer?, cidr_ipv_4: string?, cidr_ipv_6: string?, prefix_list_id: prefix_list_resource_id?, referenced_group_id: security_group_id?, description: string? }
      type security_group_rule_update = { security_group_rule_id: security_group_rule_id, security_group_rule: security_group_rule_request? }
      type security_group_rule_update_list = ::Array[security_group_rule_update]
      type security_group_string_list = ::Array[security_group_name]
      type self_service_portal = ("enabled" | "disabled")
      type send_diagnostic_interrupt_request = { instance_id: instance_id, dry_run: boolean? }
      type sensitive_url = ::String
      type sensitive_user_data = ::String
      class ServiceConfiguration
        attr_accessor service_type: service_type_detail_set
        attr_accessor service_id: string
        attr_accessor service_name: string
        attr_accessor service_state: service_state
        attr_accessor availability_zones: value_string_list
        attr_accessor acceptance_required: boolean
        attr_accessor manages_vpc_endpoints: boolean
        attr_accessor network_load_balancer_arns: value_string_list
        attr_accessor gateway_load_balancer_arns: value_string_list
        attr_accessor supported_ip_address_types: supported_ip_address_types
        attr_accessor base_endpoint_dns_names: value_string_list
        attr_accessor private_dns_name: string
        attr_accessor private_dns_name_configuration: PrivateDnsNameConfiguration
        attr_accessor payer_responsibility: payer_responsibility
        attr_accessor tags: tag_list_output
      end
      type service_configuration_set_output = ::Array[ServiceConfiguration]
      type service_connectivity_type = ("ipv4" | "ipv6")
      class ServiceDetail
        attr_accessor service_name: string
        attr_accessor service_id: string
        attr_accessor service_type: service_type_detail_set
        attr_accessor availability_zones: value_string_list
        attr_accessor owner: string
        attr_accessor base_endpoint_dns_names: value_string_list
        attr_accessor private_dns_name: string
        attr_accessor private_dns_names: private_dns_details_set
        attr_accessor vpc_endpoint_policy_supported: boolean
        attr_accessor acceptance_required: boolean
        attr_accessor manages_vpc_endpoints: boolean
        attr_accessor payer_responsibility: payer_responsibility
        attr_accessor tags: tag_list_output
        attr_accessor private_dns_name_verification_state: dns_name_state
        attr_accessor supported_ip_address_types: supported_ip_address_types
      end
      type service_detail_set = ::Array[ServiceDetail]
      type service_state = ("Pending" | "Available" | "Deleting" | "Deleted" | "Failed")
      type service_type = ("Interface" | "Gateway" | "GatewayLoadBalancer")
      class ServiceTypeDetail
        attr_accessor service_type: service_type
      end
      type service_type_detail_set = ::Array[ServiceTypeDetail]
      type shutdown_behavior = ("stop" | "terminate")
      type slot_date_time_range_request = { earliest_time: date_time, latest_time: date_time }
      type slot_start_time_range_request = { earliest_time: date_time?, latest_time: date_time? }
      class Snapshot
        attr_accessor data_encryption_key_id: string
        attr_accessor description: string
        attr_accessor encrypted: boolean
        attr_accessor kms_key_id: string
        attr_accessor owner_id: string
        attr_accessor progress: string
        attr_accessor snapshot_id: string
        attr_accessor start_time: date_time
        attr_accessor state: snapshot_state
        attr_accessor state_message: string
        attr_accessor volume_id: string
        attr_accessor volume_size: integer
        attr_accessor owner_alias: string
        attr_accessor outpost_arn: string
        attr_accessor tags: tag_list_output
        attr_accessor storage_tier: storage_tier
        attr_accessor restore_expiry_time: millisecond_date_time
      end
      type snapshot_attribute_name = ("productCodes" | "createVolumePermission")
      class SnapshotDetail
        attr_accessor description: string
        attr_accessor device_name: string
        attr_accessor disk_image_size: double
        attr_accessor format: string
        attr_accessor progress: string
        attr_accessor snapshot_id: string
        attr_accessor status: string
        attr_accessor status_message: string
        attr_accessor url: sensitive_url
        attr_accessor user_bucket: UserBucketDetails
      end
      type snapshot_detail_list = ::Array[SnapshotDetail]
      type snapshot_disk_container = { description: string?, format: string?, url: sensitive_url?, user_bucket: user_bucket? }
      type snapshot_id = ::String
      type snapshot_id_string_list = ::Array[snapshot_id]
      class SnapshotInfo
        attr_accessor description: string
        attr_accessor tags: tag_list_output
        attr_accessor encrypted: boolean
        attr_accessor volume_id: string
        attr_accessor state: snapshot_state
        attr_accessor volume_size: integer
        attr_accessor start_time: millisecond_date_time
        attr_accessor progress: string
        attr_accessor owner_id: string
        attr_accessor snapshot_id: string
        attr_accessor outpost_arn: string
      end
      type snapshot_list_output = ::Array[Snapshot]
      class SnapshotRecycleBinInfo
        attr_accessor snapshot_id: string
        attr_accessor recycle_bin_enter_time: millisecond_date_time
        attr_accessor recycle_bin_exit_time: millisecond_date_time
        attr_accessor description: string
        attr_accessor volume_id: string
      end
      type snapshot_recycle_bin_info_list = ::Array[SnapshotRecycleBinInfo]
      type snapshot_set = ::Array[SnapshotInfo]
      type snapshot_state = ("pending" | "completed" | "error" | "recoverable" | "recovering")
      class SnapshotTaskDetail
        attr_accessor description: string
        attr_accessor disk_image_size: double
        attr_accessor encrypted: boolean
        attr_accessor format: string
        attr_accessor kms_key_id: string
        attr_accessor progress: string
        attr_accessor snapshot_id: string
        attr_accessor status: string
        attr_accessor status_message: string
        attr_accessor url: sensitive_url
        attr_accessor user_bucket: UserBucketDetails
      end
      class SnapshotTierStatus
        attr_accessor snapshot_id: snapshot_id
        attr_accessor volume_id: volume_id
        attr_accessor status: snapshot_state
        attr_accessor owner_id: string
        attr_accessor tags: tag_list_output
        attr_accessor storage_tier: storage_tier
        attr_accessor last_tiering_start_time: millisecond_date_time
        attr_accessor last_tiering_progress: integer
        attr_accessor last_tiering_operation_status: tiering_operation_status
        attr_accessor last_tiering_operation_status_detail: string
        attr_accessor archival_complete_time: millisecond_date_time
        attr_accessor restore_expiry_time: millisecond_date_time
      end
      type spot_allocation_strategy = ("lowest-price" | "diversified" | "capacity-optimized" | "capacity-optimized-prioritized" | "price-capacity-optimized")
      class SpotCapacityRebalance
        attr_accessor replacement_strategy: replacement_strategy
        attr_accessor termination_delay: integer
      end
      type spot_capacity_rebalance = { replacement_strategy: replacement_strategy?, termination_delay: integer? }
      class SpotDatafeedSubscription
        attr_accessor bucket: string
        attr_accessor fault: SpotInstanceStateFault
        attr_accessor owner_id: string
        attr_accessor prefix: string
        attr_accessor state: datafeed_subscription_state
      end
      class SpotFleetLaunchSpecification
        attr_accessor security_groups: group_identifier_list_output
        attr_accessor addressing_type: string
        attr_accessor block_device_mappings: block_device_mapping_list_output
        attr_accessor ebs_optimized: boolean
        attr_accessor iam_instance_profile: IamInstanceProfileSpecification
        attr_accessor image_id: image_id
        attr_accessor instance_type: instance_type
        attr_accessor kernel_id: string
        attr_accessor key_name: key_pair_name
        attr_accessor monitoring: SpotFleetMonitoring
        attr_accessor network_interfaces: instance_network_interface_specification_list_output
        attr_accessor placement: SpotPlacement
        attr_accessor ramdisk_id: string
        attr_accessor spot_price: string
        attr_accessor subnet_id: subnet_id
        attr_accessor user_data: sensitive_user_data
        attr_accessor weighted_capacity: double
        attr_accessor tag_specifications: spot_fleet_tag_specification_list_output
        attr_accessor instance_requirements: InstanceRequirements
      end
      type spot_fleet_launch_specification = { security_groups: group_identifier_list_input?, addressing_type: string?, block_device_mappings: block_device_mapping_list_input?, ebs_optimized: boolean?, iam_instance_profile: iam_instance_profile_specification?, image_id: image_id?, instance_type: instance_type?, kernel_id: string?, key_name: key_pair_name?, monitoring: spot_fleet_monitoring?, network_interfaces: instance_network_interface_specification_list_input?, placement: spot_placement?, ramdisk_id: string?, spot_price: string?, subnet_id: subnet_id?, user_data: sensitive_user_data?, weighted_capacity: double?, tag_specifications: spot_fleet_tag_specification_list_input?, instance_requirements: instance_requirements? }
      class SpotFleetMonitoring
        attr_accessor enabled: boolean
      end
      type spot_fleet_monitoring = { enabled: boolean? }
      class SpotFleetRequestConfig
        attr_accessor activity_status: activity_status
        attr_accessor create_time: millisecond_date_time
        attr_accessor spot_fleet_request_config: SpotFleetRequestConfigData
        attr_accessor spot_fleet_request_id: string
        attr_accessor spot_fleet_request_state: batch_state
        attr_accessor tags: tag_list_output
      end
      class SpotFleetRequestConfigData
        attr_accessor allocation_strategy: allocation_strategy
        attr_accessor on_demand_allocation_strategy: on_demand_allocation_strategy
        attr_accessor spot_maintenance_strategies: SpotMaintenanceStrategies
        attr_accessor client_token: string
        attr_accessor excess_capacity_termination_policy: excess_capacity_termination_policy
        attr_accessor fulfilled_capacity: double
        attr_accessor on_demand_fulfilled_capacity: double
        attr_accessor iam_fleet_role: string
        attr_accessor launch_specifications: launch_specs_list_output
        attr_accessor launch_template_configs: launch_template_config_list_output
        attr_accessor spot_price: string
        attr_accessor target_capacity: integer
        attr_accessor on_demand_target_capacity: integer
        attr_accessor on_demand_max_total_price: string
        attr_accessor spot_max_total_price: string
        attr_accessor terminate_instances_with_expiration: boolean
        attr_accessor type_: fleet_type
        attr_accessor valid_from: date_time
        attr_accessor valid_until: date_time
        attr_accessor replace_unhealthy_instances: boolean
        attr_accessor instance_interruption_behavior: instance_interruption_behavior
        attr_accessor load_balancers_config: LoadBalancersConfig
        attr_accessor instance_pools_to_use_count: integer
        attr_accessor context: string
        attr_accessor target_capacity_unit_type: target_capacity_unit_type
        attr_accessor tag_specifications: tag_specification_list_output
      end
      type spot_fleet_request_config_data = { allocation_strategy: allocation_strategy?, on_demand_allocation_strategy: on_demand_allocation_strategy?, spot_maintenance_strategies: spot_maintenance_strategies?, client_token: string?, excess_capacity_termination_policy: excess_capacity_termination_policy?, fulfilled_capacity: double?, on_demand_fulfilled_capacity: double?, iam_fleet_role: string, launch_specifications: launch_specs_list_input?, launch_template_configs: launch_template_config_list_input?, spot_price: string?, target_capacity: integer, on_demand_target_capacity: integer?, on_demand_max_total_price: string?, spot_max_total_price: string?, terminate_instances_with_expiration: boolean?, type: fleet_type?, valid_from: date_time?, valid_until: date_time?, replace_unhealthy_instances: boolean?, instance_interruption_behavior: instance_interruption_behavior?, load_balancers_config: load_balancers_config?, instance_pools_to_use_count: integer?, context: string?, target_capacity_unit_type: target_capacity_unit_type?, tag_specifications: tag_specification_list_input? }
      type spot_fleet_request_config_set = ::Array[SpotFleetRequestConfig]
      type spot_fleet_request_id = ::String
      type spot_fleet_request_id_list = ::Array[spot_fleet_request_id]
      class SpotFleetTagSpecification
        attr_accessor resource_type: resource_type
        attr_accessor tags: tag_list_output
      end
      type spot_fleet_tag_specification = { resource_type: resource_type?, tags: tag_list_input? }
      type spot_fleet_tag_specification_list_output = ::Array[SpotFleetTagSpecification]
      type spot_fleet_tag_specification_list_input = ::Array[spot_fleet_tag_specification]
      type spot_instance_interruption_behavior = ("hibernate" | "stop" | "terminate")
      class SpotInstanceRequest
        attr_accessor actual_block_hourly_price: string
        attr_accessor availability_zone_group: string
        attr_accessor block_duration_minutes: integer
        attr_accessor create_time: date_time
        attr_accessor fault: SpotInstanceStateFault
        attr_accessor instance_id: instance_id
        attr_accessor launch_group: string
        attr_accessor launch_specification: LaunchSpecification
        attr_accessor launched_availability_zone: string
        attr_accessor product_description: ri_product_description
        attr_accessor spot_instance_request_id: string
        attr_accessor spot_price: string
        attr_accessor state: spot_instance_state
        attr_accessor status: SpotInstanceStatus
        attr_accessor tags: tag_list_output
        attr_accessor type_: spot_instance_type
        attr_accessor valid_from: date_time
        attr_accessor valid_until: date_time
        attr_accessor instance_interruption_behavior: instance_interruption_behavior
      end
      type spot_instance_request_id = ::String
      type spot_instance_request_id_list = ::Array[spot_instance_request_id]
      type spot_instance_request_list = ::Array[SpotInstanceRequest]
      type spot_instance_state = ("open" | "active" | "closed" | "cancelled" | "failed")
      class SpotInstanceStateFault
        attr_accessor code: string
        attr_accessor message: string
      end
      class SpotInstanceStatus
        attr_accessor code: string
        attr_accessor message: string
        attr_accessor update_time: date_time
      end
      type spot_instance_type = ("one-time" | "persistent")
      class SpotMaintenanceStrategies
        attr_accessor capacity_rebalance: SpotCapacityRebalance
      end
      type spot_maintenance_strategies = { capacity_rebalance: spot_capacity_rebalance? }
      type spot_market_options = { max_price: string?, spot_instance_type: spot_instance_type?, block_duration_minutes: integer?, valid_until: date_time?, instance_interruption_behavior: instance_interruption_behavior? }
      class SpotOptions
        attr_accessor allocation_strategy: spot_allocation_strategy
        attr_accessor maintenance_strategies: FleetSpotMaintenanceStrategies
        attr_accessor instance_interruption_behavior: spot_instance_interruption_behavior
        attr_accessor instance_pools_to_use_count: integer
        attr_accessor single_instance_type: boolean
        attr_accessor single_availability_zone: boolean
        attr_accessor min_target_capacity: integer
        attr_accessor max_total_price: string
      end
      type spot_options_request = { allocation_strategy: spot_allocation_strategy?, maintenance_strategies: fleet_spot_maintenance_strategies_request?, instance_interruption_behavior: spot_instance_interruption_behavior?, instance_pools_to_use_count: integer?, single_instance_type: boolean?, single_availability_zone: boolean?, min_target_capacity: integer?, max_total_price: string? }
      class SpotPlacement
        attr_accessor availability_zone: string
        attr_accessor group_name: placement_group_name
        attr_accessor tenancy: tenancy
      end
      type spot_placement = { availability_zone: string?, group_name: placement_group_name?, tenancy: tenancy? }
      class SpotPlacementScore
        attr_accessor region: string
        attr_accessor availability_zone_id: string
        attr_accessor score: integer
      end
      type spot_placement_scores = ::Array[SpotPlacementScore]
      type spot_placement_scores_max_results = ::Integer
      type spot_placement_scores_target_capacity = ::Integer
      class SpotPrice
        attr_accessor availability_zone: string
        attr_accessor instance_type: instance_type
        attr_accessor product_description: ri_product_description
        attr_accessor spot_price: string
        attr_accessor timestamp: date_time
      end
      type spot_price_history_list = ::Array[SpotPrice]
      type spread_level = ("host" | "rack")
      class StaleIpPermission
        attr_accessor from_port: integer
        attr_accessor ip_protocol: string
        attr_accessor ip_ranges: ip_ranges
        attr_accessor prefix_list_ids: prefix_list_id_set
        attr_accessor to_port: integer
        attr_accessor user_id_group_pairs: user_id_group_pair_set_output
      end
      type stale_ip_permission_set = ::Array[StaleIpPermission]
      class StaleSecurityGroup
        attr_accessor description: string
        attr_accessor group_id: string
        attr_accessor group_name: string
        attr_accessor stale_ip_permissions: stale_ip_permission_set
        attr_accessor stale_ip_permissions_egress: stale_ip_permission_set
        attr_accessor vpc_id: string
      end
      type stale_security_group_set = ::Array[StaleSecurityGroup]
      type start_instances_request = { instance_ids: instance_id_string_list, additional_info: string?, dry_run: boolean? }
      class StartInstancesResult
        attr_accessor starting_instances: instance_state_change_list
      end
      type start_network_insights_access_scope_analysis_request = { network_insights_access_scope_id: network_insights_access_scope_id, dry_run: boolean?, tag_specifications: tag_specification_list_input?, client_token: string }
      class StartNetworkInsightsAccessScopeAnalysisResult
        attr_accessor network_insights_access_scope_analysis: NetworkInsightsAccessScopeAnalysis
      end
      type start_network_insights_analysis_request = { network_insights_path_id: network_insights_path_id, additional_accounts: value_string_list?, filter_in_arns: arn_list?, dry_run: boolean?, tag_specifications: tag_specification_list_input?, client_token: string }
      class StartNetworkInsightsAnalysisResult
        attr_accessor network_insights_analysis: NetworkInsightsAnalysis
      end
      type start_vpc_endpoint_service_private_dns_verification_request = { dry_run: boolean?, service_id: vpc_endpoint_service_id }
      class StartVpcEndpointServicePrivateDnsVerificationResult
        attr_accessor return_value: boolean
      end
      type state = ("PendingAcceptance" | "Pending" | "Available" | "Deleting" | "Deleted" | "Rejected" | "Failed" | "Expired")
      class StateReason
        attr_accessor code: string
        attr_accessor message: string
      end
      type static_sources_support_value = ("enable" | "disable")
      type statistic_type = ("p50")
      type status = ("MoveInProgress" | "InVpc" | "InClassic")
      type status_name = ("reachability")
      type status_type = ("passed" | "failed" | "insufficient-data" | "initializing")
      type stop_instances_request = { instance_ids: instance_id_string_list, hibernate: boolean?, dry_run: boolean?, force: boolean? }
      class StopInstancesResult
        attr_accessor stopping_instances: instance_state_change_list
      end
      type storage = { s3: s3_storage? }
      class Storage
        attr_accessor s3: S3Storage
      end
      type storage_location = { bucket: string?, key: string? }
      type storage_tier = ("archive" | "standard")
      class StoreImageTaskResult
        attr_accessor ami_id: string
        attr_accessor task_start_time: millisecond_date_time
        attr_accessor bucket: string
        attr_accessor s3object_key: string
        attr_accessor progress_percentage: integer
        attr_accessor store_task_state: string
        attr_accessor store_task_failure_reason: string
      end
      type store_image_task_result_set = ::Array[StoreImageTaskResult]
      type string = ::String
      type string_list = ::Array[string]
      type string_type = ::String
      class Subnet
        attr_accessor availability_zone: string
        attr_accessor availability_zone_id: string
        attr_accessor available_ip_address_count: integer
        attr_accessor cidr_block: string
        attr_accessor default_for_az: boolean
        attr_accessor enable_lni_at_device_index: integer
        attr_accessor map_public_ip_on_launch: boolean
        attr_accessor map_customer_owned_ip_on_launch: boolean
        attr_accessor customer_owned_ipv_4_pool: coip_pool_id
        attr_accessor state: subnet_state
        attr_accessor subnet_id: string
        attr_accessor vpc_id: string
        attr_accessor owner_id: string
        attr_accessor assign_ipv_6_address_on_creation: boolean
        attr_accessor ipv_6_cidr_block_association_set: subnet_ipv_6_cidr_block_association_set_output
        attr_accessor tags: tag_list_output
        attr_accessor subnet_arn: string
        attr_accessor outpost_arn: string
        attr_accessor enable_dns_64: boolean
        attr_accessor ipv_6_native: boolean
        attr_accessor private_dns_name_options_on_launch: PrivateDnsNameOptionsOnLaunch
      end
      class SubnetAssociation
        attr_accessor subnet_id: string
        attr_accessor state: transit_gateway_mulitcast_domain_association_state
      end
      type subnet_association_list_output = ::Array[SubnetAssociation]
      type subnet_cidr_association_id = ::String
      class SubnetCidrBlockState
        attr_accessor state: subnet_cidr_block_state_code
        attr_accessor status_message: string
      end
      type subnet_cidr_block_state_code = ("associating" | "associated" | "disassociating" | "disassociated" | "failing" | "failed")
      class SubnetCidrReservation
        attr_accessor subnet_cidr_reservation_id: subnet_cidr_reservation_id
        attr_accessor subnet_id: subnet_id
        attr_accessor cidr: string
        attr_accessor reservation_type: subnet_cidr_reservation_type
        attr_accessor owner_id: string
        attr_accessor description: string
        attr_accessor tags: tag_list_output
      end
      type subnet_cidr_reservation_id = ::String
      type subnet_cidr_reservation_list_output = ::Array[SubnetCidrReservation]
      type subnet_cidr_reservation_type = ("prefix" | "explicit")
      type subnet_id = ::String
      type subnet_id_string_list = ::Array[subnet_id]
      class SubnetIpv6CidrBlockAssociation
        attr_accessor association_id: subnet_cidr_association_id
        attr_accessor ipv_6_cidr_block: string
        attr_accessor ipv_6_cidr_block_state: SubnetCidrBlockState
      end
      type subnet_ipv_6_cidr_block_association_set_output = ::Array[SubnetIpv6CidrBlockAssociation]
      type subnet_list_output = ::Array[Subnet]
      type subnet_state = ("pending" | "available")
      class Subscription
        attr_accessor source: string
        attr_accessor destination: string
        attr_accessor metric: metric_type
        attr_accessor statistic: statistic_type
        attr_accessor period: period_type
      end
      type subscription_list = ::Array[Subscription]
      class SuccessfulInstanceCreditSpecificationItem
        attr_accessor instance_id: string
      end
      type successful_instance_credit_specification_set = ::Array[SuccessfulInstanceCreditSpecificationItem]
      class SuccessfulQueuedPurchaseDeletion
        attr_accessor reserved_instances_id: string
      end
      type successful_queued_purchase_deletion_set = ::Array[SuccessfulQueuedPurchaseDeletion]
      type summary_status = ("ok" | "impaired" | "insufficient-data" | "not-applicable" | "initializing")
      type supported_additional_processor_feature = ("amd-sev-snp")
      type supported_additional_processor_feature_list = ::Array[supported_additional_processor_feature]
      type supported_ip_address_types = ::Array[service_connectivity_type]
      type tag = { key: string?, value: string? }
      class Tag
        attr_accessor key: string
        attr_accessor value: string
      end
      class TagDescription
        attr_accessor key: string
        attr_accessor resource_id: string
        attr_accessor resource_type: resource_type
        attr_accessor value: string
      end
      type tag_description_list = ::Array[TagDescription]
      type tag_list_input = ::Array[tag]
      type tag_list_output = ::Array[Tag]
      type tag_specification = { resource_type: resource_type?, tags: tag_list_input? }
      class TagSpecification
        attr_accessor resource_type: resource_type
        attr_accessor tags: tag_list_output
      end
      type tag_specification_list_input = ::Array[tag_specification]
      type tag_specification_list_output = ::Array[TagSpecification]
      type taggable_resource_id = ::String
      class TargetCapacitySpecification
        attr_accessor total_target_capacity: integer
        attr_accessor on_demand_target_capacity: integer
        attr_accessor spot_target_capacity: integer
        attr_accessor default_target_capacity_type: default_target_capacity_type
        attr_accessor target_capacity_unit_type: target_capacity_unit_type
      end
      type target_capacity_specification_request = { total_target_capacity: integer, on_demand_target_capacity: integer?, spot_target_capacity: integer?, default_target_capacity_type: default_target_capacity_type?, target_capacity_unit_type: target_capacity_unit_type? }
      type target_capacity_unit_type = ("vcpu" | "memory-mib" | "units")
      class TargetConfiguration
        attr_accessor instance_count: integer
        attr_accessor offering_id: string
      end
      type target_configuration_request = { instance_count: integer?, offering_id: reserved_instances_offering_id }
      type target_configuration_request_set = ::Array[target_configuration_request]
      class TargetGroup
        attr_accessor arn: string
      end
      type target_group = { arn: string? }
      type target_groups_output = ::Array[TargetGroup]
      type target_groups_input = ::Array[target_group]
      class TargetGroupsConfig
        attr_accessor target_groups: target_groups_output
      end
      type target_groups_config = { target_groups: target_groups_input? }
      class TargetNetwork
        attr_accessor association_id: string
        attr_accessor vpc_id: string
        attr_accessor target_network_id: string
        attr_accessor client_vpn_endpoint_id: string
        attr_accessor status: AssociationStatus
        attr_accessor security_groups: value_string_list
      end
      type target_network_set = ::Array[TargetNetwork]
      class TargetReservationValue
        attr_accessor reservation_value: ReservationValue
        attr_accessor target_configuration: TargetConfiguration
      end
      type target_reservation_value_set = ::Array[TargetReservationValue]
      type target_storage_tier = ("archive")
      type telemetry_status = ("UP" | "DOWN")
      type tenancy = ("default" | "dedicated" | "host")
      type terminate_client_vpn_connections_request = { client_vpn_endpoint_id: client_vpn_endpoint_id, connection_id: vpn_connection_id?, username: string?, dry_run: boolean? }
      class TerminateClientVpnConnectionsResult
        attr_accessor client_vpn_endpoint_id: string
        attr_accessor username: string
        attr_accessor connection_statuses: terminate_connection_status_set
      end
      class TerminateConnectionStatus
        attr_accessor connection_id: string
        attr_accessor previous_status: ClientVpnConnectionStatus
        attr_accessor current_status: ClientVpnConnectionStatus
      end
      type terminate_connection_status_set = ::Array[TerminateConnectionStatus]
      type terminate_instances_request = { instance_ids: instance_id_string_list, dry_run: boolean? }
      class TerminateInstancesResult
        attr_accessor terminating_instances: instance_state_change_list
      end
      type threads_per_core = ::Integer
      type threads_per_core_list = ::Array[threads_per_core]
      class ThroughResourcesStatement
        attr_accessor resource_statement: ResourceStatement
      end
      type through_resources_statement_list = ::Array[ThroughResourcesStatement]
      type through_resources_statement_request = { resource_statement: resource_statement_request? }
      type through_resources_statement_request_list = ::Array[through_resources_statement_request]
      type tiering_operation_status = ("archival-in-progress" | "archival-completed" | "archival-failed" | "temporary-restore-in-progress" | "temporary-restore-completed" | "temporary-restore-failed" | "permanent-restore-in-progress" | "permanent-restore-completed" | "permanent-restore-failed")
      class TotalLocalStorageGB
        attr_accessor min: double
        attr_accessor max: double
      end
      type total_local_storage_gb = { min: double?, max: double? }
      type total_local_storage_gb_request = { min: double?, max: double? }
      type tpm_support_values = ("v2.0")
      type traffic_direction = ("ingress" | "egress")
      class TrafficMirrorFilter
        attr_accessor traffic_mirror_filter_id: string
        attr_accessor ingress_filter_rules: traffic_mirror_filter_rule_list_output
        attr_accessor egress_filter_rules: traffic_mirror_filter_rule_list_output
        attr_accessor network_services: traffic_mirror_network_service_list
        attr_accessor description: string
        attr_accessor tags: tag_list_output
      end
      type traffic_mirror_filter_id = ::String
      type traffic_mirror_filter_id_list = ::Array[traffic_mirror_filter_id]
      class TrafficMirrorFilterRule
        attr_accessor traffic_mirror_filter_rule_id: string
        attr_accessor traffic_mirror_filter_id: string
        attr_accessor traffic_direction: traffic_direction
        attr_accessor rule_number: integer
        attr_accessor rule_action: traffic_mirror_rule_action
        attr_accessor protocol: integer
        attr_accessor destination_port_range: TrafficMirrorPortRange
        attr_accessor source_port_range: TrafficMirrorPortRange
        attr_accessor destination_cidr_block: string
        attr_accessor source_cidr_block: string
        attr_accessor description: string
      end
      type traffic_mirror_filter_rule_field = ("destination-port-range" | "source-port-range" | "protocol" | "description")
      type traffic_mirror_filter_rule_field_list = ::Array[traffic_mirror_filter_rule_field]
      type traffic_mirror_filter_rule_id_with_resolver = ::String
      type traffic_mirror_filter_rule_list_output = ::Array[TrafficMirrorFilterRule]
      type traffic_mirror_filter_set_output = ::Array[TrafficMirrorFilter]
      type traffic_mirror_network_service = ("amazon-dns")
      type traffic_mirror_network_service_list = ::Array[traffic_mirror_network_service]
      class TrafficMirrorPortRange
        attr_accessor from_port: integer
        attr_accessor to_port: integer
      end
      type traffic_mirror_port_range_request = { from_port: integer?, to_port: integer? }
      type traffic_mirror_rule_action = ("accept" | "reject")
      class TrafficMirrorSession
        attr_accessor traffic_mirror_session_id: string
        attr_accessor traffic_mirror_target_id: string
        attr_accessor traffic_mirror_filter_id: string
        attr_accessor network_interface_id: string
        attr_accessor owner_id: string
        attr_accessor packet_length: integer
        attr_accessor session_number: integer
        attr_accessor virtual_network_id: integer
        attr_accessor description: string
        attr_accessor tags: tag_list_output
      end
      type traffic_mirror_session_field = ("packet-length" | "description" | "virtual-network-id")
      type traffic_mirror_session_field_list = ::Array[traffic_mirror_session_field]
      type traffic_mirror_session_id = ::String
      type traffic_mirror_session_id_list = ::Array[traffic_mirror_session_id]
      type traffic_mirror_session_set_output = ::Array[TrafficMirrorSession]
      class TrafficMirrorTarget
        attr_accessor traffic_mirror_target_id: string
        attr_accessor network_interface_id: string
        attr_accessor network_load_balancer_arn: string
        attr_accessor type_: traffic_mirror_target_type
        attr_accessor description: string
        attr_accessor owner_id: string
        attr_accessor tags: tag_list_output
        attr_accessor gateway_load_balancer_endpoint_id: string
      end
      type traffic_mirror_target_id = ::String
      type traffic_mirror_target_id_list = ::Array[traffic_mirror_target_id]
      type traffic_mirror_target_set_output = ::Array[TrafficMirrorTarget]
      type traffic_mirror_target_type = ("network-interface" | "network-load-balancer" | "gateway-load-balancer-endpoint")
      type traffic_mirroring_max_results = ::Integer
      type traffic_type = ("ACCEPT" | "REJECT" | "ALL")
      type transit_association_gateway_id = ::String
      class TransitGateway
        attr_accessor transit_gateway_id: string
        attr_accessor transit_gateway_arn: string
        attr_accessor state: transit_gateway_state
        attr_accessor owner_id: string
        attr_accessor description: string
        attr_accessor creation_time: date_time
        attr_accessor options: TransitGatewayOptions
        attr_accessor tags: tag_list_output
      end
      class TransitGatewayAssociation
        attr_accessor transit_gateway_route_table_id: transit_gateway_route_table_id
        attr_accessor transit_gateway_attachment_id: transit_gateway_attachment_id
        attr_accessor resource_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor state: transit_gateway_association_state
      end
      type transit_gateway_association_state = ("associating" | "associated" | "disassociating" | "disassociated")
      class TransitGatewayAttachment
        attr_accessor transit_gateway_attachment_id: string
        attr_accessor transit_gateway_id: string
        attr_accessor transit_gateway_owner_id: string
        attr_accessor resource_owner_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor resource_id: string
        attr_accessor state: transit_gateway_attachment_state
        attr_accessor association: TransitGatewayAttachmentAssociation
        attr_accessor creation_time: date_time
        attr_accessor tags: tag_list_output
      end
      class TransitGatewayAttachmentAssociation
        attr_accessor transit_gateway_route_table_id: string
        attr_accessor state: transit_gateway_association_state
      end
      class TransitGatewayAttachmentBgpConfiguration
        attr_accessor transit_gateway_asn: long
        attr_accessor peer_asn: long
        attr_accessor transit_gateway_address: string
        attr_accessor peer_address: string
        attr_accessor bgp_status: bgp_status
      end
      type transit_gateway_attachment_bgp_configuration_list = ::Array[TransitGatewayAttachmentBgpConfiguration]
      type transit_gateway_attachment_id = ::String
      type transit_gateway_attachment_id_string_list = ::Array[transit_gateway_attachment_id]
      type transit_gateway_attachment_list = ::Array[TransitGatewayAttachment]
      class TransitGatewayAttachmentPropagation
        attr_accessor transit_gateway_route_table_id: string
        attr_accessor state: transit_gateway_propagation_state
      end
      type transit_gateway_attachment_propagation_list = ::Array[TransitGatewayAttachmentPropagation]
      type transit_gateway_attachment_resource_type = ("vpc" | "vpn" | "direct-connect-gateway" | "connect" | "peering" | "tgw-peering")
      type transit_gateway_attachment_state = ("initiating" | "initiatingRequest" | "pendingAcceptance" | "rollingBack" | "pending" | "available" | "modifying" | "deleting" | "deleted" | "failed" | "rejected" | "rejecting" | "failing")
      type transit_gateway_cidr_block_string_list = ::Array[string]
      class TransitGatewayConnect
        attr_accessor transit_gateway_attachment_id: transit_gateway_attachment_id
        attr_accessor transport_transit_gateway_attachment_id: transit_gateway_attachment_id
        attr_accessor transit_gateway_id: transit_gateway_id
        attr_accessor state: transit_gateway_attachment_state
        attr_accessor creation_time: date_time
        attr_accessor options: TransitGatewayConnectOptions
        attr_accessor tags: tag_list_output
      end
      type transit_gateway_connect_list_output = ::Array[TransitGatewayConnect]
      class TransitGatewayConnectOptions
        attr_accessor protocol: protocol_value
      end
      class TransitGatewayConnectPeer
        attr_accessor transit_gateway_attachment_id: transit_gateway_attachment_id
        attr_accessor transit_gateway_connect_peer_id: transit_gateway_connect_peer_id
        attr_accessor state: transit_gateway_connect_peer_state
        attr_accessor creation_time: date_time
        attr_accessor connect_peer_configuration: TransitGatewayConnectPeerConfiguration
        attr_accessor tags: tag_list_output
      end
      class TransitGatewayConnectPeerConfiguration
        attr_accessor transit_gateway_address: string
        attr_accessor peer_address: string
        attr_accessor inside_cidr_blocks: inside_cidr_blocks_string_list
        attr_accessor protocol: protocol_value
        attr_accessor bgp_configurations: transit_gateway_attachment_bgp_configuration_list
      end
      type transit_gateway_connect_peer_id = ::String
      type transit_gateway_connect_peer_id_string_list = ::Array[transit_gateway_connect_peer_id]
      type transit_gateway_connect_peer_list_output = ::Array[TransitGatewayConnectPeer]
      type transit_gateway_connect_peer_state = ("pending" | "available" | "deleting" | "deleted")
      type transit_gateway_connect_request_bgp_options = { peer_asn: long? }
      type transit_gateway_id = ::String
      type transit_gateway_id_string_list = ::Array[transit_gateway_id]
      type transit_gateway_list_output = ::Array[TransitGateway]
      type transit_gateway_max_results = ::Integer
      type transit_gateway_mulitcast_domain_association_state = ("pendingAcceptance" | "associating" | "associated" | "disassociating" | "disassociated" | "rejected" | "failed")
      class TransitGatewayMulticastDeregisteredGroupMembers
        attr_accessor transit_gateway_multicast_domain_id: string
        attr_accessor deregistered_network_interface_ids: value_string_list
        attr_accessor group_ip_address: string
      end
      class TransitGatewayMulticastDeregisteredGroupSources
        attr_accessor transit_gateway_multicast_domain_id: string
        attr_accessor deregistered_network_interface_ids: value_string_list
        attr_accessor group_ip_address: string
      end
      class TransitGatewayMulticastDomain
        attr_accessor transit_gateway_multicast_domain_id: string
        attr_accessor transit_gateway_id: string
        attr_accessor transit_gateway_multicast_domain_arn: string
        attr_accessor owner_id: string
        attr_accessor options: TransitGatewayMulticastDomainOptions
        attr_accessor state: transit_gateway_multicast_domain_state
        attr_accessor creation_time: date_time
        attr_accessor tags: tag_list_output
      end
      class TransitGatewayMulticastDomainAssociation
        attr_accessor transit_gateway_attachment_id: string
        attr_accessor resource_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor resource_owner_id: string
        attr_accessor subnet: SubnetAssociation
      end
      type transit_gateway_multicast_domain_association_list = ::Array[TransitGatewayMulticastDomainAssociation]
      class TransitGatewayMulticastDomainAssociations
        attr_accessor transit_gateway_multicast_domain_id: string
        attr_accessor transit_gateway_attachment_id: string
        attr_accessor resource_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor resource_owner_id: string
        attr_accessor subnets: subnet_association_list_output
      end
      type transit_gateway_multicast_domain_id = ::String
      type transit_gateway_multicast_domain_id_string_list = ::Array[transit_gateway_multicast_domain_id]
      type transit_gateway_multicast_domain_list_output = ::Array[TransitGatewayMulticastDomain]
      class TransitGatewayMulticastDomainOptions
        attr_accessor igmpv_2_support: igmpv_2_support_value
        attr_accessor static_sources_support: static_sources_support_value
        attr_accessor auto_accept_shared_associations: auto_accept_shared_associations_value
      end
      type transit_gateway_multicast_domain_state = ("pending" | "available" | "deleting" | "deleted")
      class TransitGatewayMulticastGroup
        attr_accessor group_ip_address: string
        attr_accessor transit_gateway_attachment_id: string
        attr_accessor subnet_id: string
        attr_accessor resource_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor resource_owner_id: string
        attr_accessor network_interface_id: string
        attr_accessor group_member: boolean
        attr_accessor group_source: boolean
        attr_accessor member_type: membership_type
        attr_accessor source_type: membership_type
      end
      type transit_gateway_multicast_group_list = ::Array[TransitGatewayMulticastGroup]
      class TransitGatewayMulticastRegisteredGroupMembers
        attr_accessor transit_gateway_multicast_domain_id: string
        attr_accessor registered_network_interface_ids: value_string_list
        attr_accessor group_ip_address: string
      end
      class TransitGatewayMulticastRegisteredGroupSources
        attr_accessor transit_gateway_multicast_domain_id: string
        attr_accessor registered_network_interface_ids: value_string_list
        attr_accessor group_ip_address: string
      end
      type transit_gateway_network_interface_id_list = ::Array[network_interface_id]
      class TransitGatewayOptions
        attr_accessor amazon_side_asn: long
        attr_accessor transit_gateway_cidr_blocks: value_string_list
        attr_accessor auto_accept_shared_attachments: auto_accept_shared_attachments_value
        attr_accessor default_route_table_association: default_route_table_association_value
        attr_accessor association_default_route_table_id: string
        attr_accessor default_route_table_propagation: default_route_table_propagation_value
        attr_accessor propagation_default_route_table_id: string
        attr_accessor vpn_ecmp_support: vpn_ecmp_support_value
        attr_accessor dns_support: dns_support_value
        attr_accessor multicast_support: multicast_support_value
      end
      class TransitGatewayPeeringAttachment
        attr_accessor transit_gateway_attachment_id: string
        attr_accessor accepter_transit_gateway_attachment_id: string
        attr_accessor requester_tgw_info: PeeringTgwInfo
        attr_accessor accepter_tgw_info: PeeringTgwInfo
        attr_accessor options: TransitGatewayPeeringAttachmentOptions
        attr_accessor status: PeeringAttachmentStatus
        attr_accessor state: transit_gateway_attachment_state
        attr_accessor creation_time: date_time
        attr_accessor tags: tag_list_output
      end
      type transit_gateway_peering_attachment_list_output = ::Array[TransitGatewayPeeringAttachment]
      class TransitGatewayPeeringAttachmentOptions
        attr_accessor dynamic_routing: dynamic_routing_value
      end
      class TransitGatewayPolicyRule
        attr_accessor source_cidr_block: string
        attr_accessor source_port_range: string
        attr_accessor destination_cidr_block: string
        attr_accessor destination_port_range: string
        attr_accessor protocol: string
        attr_accessor meta_data: TransitGatewayPolicyRuleMetaData
      end
      class TransitGatewayPolicyRuleMetaData
        attr_accessor meta_data_key: string
        attr_accessor meta_data_value: string
      end
      class TransitGatewayPolicyTable
        attr_accessor transit_gateway_policy_table_id: transit_gateway_policy_table_id
        attr_accessor transit_gateway_id: transit_gateway_id
        attr_accessor state: transit_gateway_policy_table_state
        attr_accessor creation_time: date_time
        attr_accessor tags: tag_list_output
      end
      class TransitGatewayPolicyTableAssociation
        attr_accessor transit_gateway_policy_table_id: transit_gateway_policy_table_id
        attr_accessor transit_gateway_attachment_id: transit_gateway_attachment_id
        attr_accessor resource_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor state: transit_gateway_association_state
      end
      type transit_gateway_policy_table_association_list_output = ::Array[TransitGatewayPolicyTableAssociation]
      class TransitGatewayPolicyTableEntry
        attr_accessor policy_rule_number: string
        attr_accessor policy_rule: TransitGatewayPolicyRule
        attr_accessor target_route_table_id: transit_gateway_route_table_id
      end
      type transit_gateway_policy_table_entry_list = ::Array[TransitGatewayPolicyTableEntry]
      type transit_gateway_policy_table_id = ::String
      type transit_gateway_policy_table_id_string_list = ::Array[transit_gateway_policy_table_id]
      type transit_gateway_policy_table_list_output = ::Array[TransitGatewayPolicyTable]
      type transit_gateway_policy_table_state = ("pending" | "available" | "deleting" | "deleted")
      class TransitGatewayPrefixListAttachment
        attr_accessor transit_gateway_attachment_id: transit_gateway_attachment_id
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor resource_id: string
      end
      class TransitGatewayPrefixListReference
        attr_accessor transit_gateway_route_table_id: transit_gateway_route_table_id
        attr_accessor prefix_list_id: prefix_list_resource_id
        attr_accessor prefix_list_owner_id: string
        attr_accessor state: transit_gateway_prefix_list_reference_state
        attr_accessor blackhole: boolean
        attr_accessor transit_gateway_attachment: TransitGatewayPrefixListAttachment
      end
      type transit_gateway_prefix_list_reference_set_output = ::Array[TransitGatewayPrefixListReference]
      type transit_gateway_prefix_list_reference_state = ("pending" | "available" | "modifying" | "deleting")
      class TransitGatewayPropagation
        attr_accessor transit_gateway_attachment_id: transit_gateway_attachment_id
        attr_accessor resource_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor transit_gateway_route_table_id: string
        attr_accessor state: transit_gateway_propagation_state
        attr_accessor transit_gateway_route_table_announcement_id: transit_gateway_route_table_announcement_id
      end
      type transit_gateway_propagation_state = ("enabling" | "enabled" | "disabling" | "disabled")
      type transit_gateway_request_options = { amazon_side_asn: long?, auto_accept_shared_attachments: auto_accept_shared_attachments_value?, default_route_table_association: default_route_table_association_value?, default_route_table_propagation: default_route_table_propagation_value?, vpn_ecmp_support: vpn_ecmp_support_value?, dns_support: dns_support_value?, multicast_support: multicast_support_value?, transit_gateway_cidr_blocks: transit_gateway_cidr_block_string_list? }
      class TransitGatewayRoute
        attr_accessor destination_cidr_block: string
        attr_accessor prefix_list_id: prefix_list_resource_id
        attr_accessor transit_gateway_route_table_announcement_id: transit_gateway_route_table_announcement_id
        attr_accessor transit_gateway_attachments: transit_gateway_route_attachment_list
        attr_accessor type_: transit_gateway_route_type
        attr_accessor state: transit_gateway_route_state
      end
      class TransitGatewayRouteAttachment
        attr_accessor resource_id: string
        attr_accessor transit_gateway_attachment_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
      end
      type transit_gateway_route_attachment_list = ::Array[TransitGatewayRouteAttachment]
      type transit_gateway_route_list_output = ::Array[TransitGatewayRoute]
      type transit_gateway_route_state = ("pending" | "active" | "blackhole" | "deleting" | "deleted")
      class TransitGatewayRouteTable
        attr_accessor transit_gateway_route_table_id: string
        attr_accessor transit_gateway_id: string
        attr_accessor state: transit_gateway_route_table_state
        attr_accessor default_association_route_table: boolean
        attr_accessor default_propagation_route_table: boolean
        attr_accessor creation_time: date_time
        attr_accessor tags: tag_list_output
      end
      class TransitGatewayRouteTableAnnouncement
        attr_accessor transit_gateway_route_table_announcement_id: transit_gateway_route_table_announcement_id
        attr_accessor transit_gateway_id: transit_gateway_id
        attr_accessor core_network_id: string
        attr_accessor peer_transit_gateway_id: transit_gateway_id
        attr_accessor peer_core_network_id: string
        attr_accessor peering_attachment_id: transit_gateway_attachment_id
        attr_accessor announcement_direction: transit_gateway_route_table_announcement_direction
        attr_accessor transit_gateway_route_table_id: transit_gateway_route_table_id
        attr_accessor state: transit_gateway_route_table_announcement_state
        attr_accessor creation_time: date_time
        attr_accessor tags: tag_list_output
      end
      type transit_gateway_route_table_announcement_direction = ("outgoing" | "incoming")
      type transit_gateway_route_table_announcement_id = ::String
      type transit_gateway_route_table_announcement_id_string_list = ::Array[transit_gateway_route_table_announcement_id]
      type transit_gateway_route_table_announcement_list_output = ::Array[TransitGatewayRouteTableAnnouncement]
      type transit_gateway_route_table_announcement_state = ("available" | "pending" | "failing" | "failed" | "deleting" | "deleted")
      class TransitGatewayRouteTableAssociation
        attr_accessor transit_gateway_attachment_id: string
        attr_accessor resource_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor state: transit_gateway_association_state
      end
      type transit_gateway_route_table_association_list = ::Array[TransitGatewayRouteTableAssociation]
      type transit_gateway_route_table_id = ::String
      type transit_gateway_route_table_id_string_list = ::Array[transit_gateway_route_table_id]
      type transit_gateway_route_table_list_output = ::Array[TransitGatewayRouteTable]
      class TransitGatewayRouteTablePropagation
        attr_accessor transit_gateway_attachment_id: string
        attr_accessor resource_id: string
        attr_accessor resource_type: transit_gateway_attachment_resource_type
        attr_accessor state: transit_gateway_propagation_state
        attr_accessor transit_gateway_route_table_announcement_id: transit_gateway_route_table_announcement_id
      end
      type transit_gateway_route_table_propagation_list = ::Array[TransitGatewayRouteTablePropagation]
      class TransitGatewayRouteTableRoute
        attr_accessor destination_cidr: string
        attr_accessor state: string
        attr_accessor route_origin: string
        attr_accessor prefix_list_id: string
        attr_accessor attachment_id: string
        attr_accessor resource_id: string
        attr_accessor resource_type: string
      end
      type transit_gateway_route_table_state = ("pending" | "available" | "deleting" | "deleted")
      type transit_gateway_route_type = ("static" | "propagated")
      type transit_gateway_state = ("pending" | "available" | "modifying" | "deleting" | "deleted")
      type transit_gateway_subnet_id_list = ::Array[subnet_id]
      class TransitGatewayVpcAttachment
        attr_accessor transit_gateway_attachment_id: string
        attr_accessor transit_gateway_id: string
        attr_accessor vpc_id: string
        attr_accessor vpc_owner_id: string
        attr_accessor state: transit_gateway_attachment_state
        attr_accessor subnet_ids: value_string_list
        attr_accessor creation_time: date_time
        attr_accessor options: TransitGatewayVpcAttachmentOptions
        attr_accessor tags: tag_list_output
      end
      type transit_gateway_vpc_attachment_list_output = ::Array[TransitGatewayVpcAttachment]
      class TransitGatewayVpcAttachmentOptions
        attr_accessor dns_support: dns_support_value
        attr_accessor ipv_6_support: ipv_6_support_value
        attr_accessor appliance_mode_support: appliance_mode_support_value
      end
      type transport_protocol = ("tcp" | "udp")
      class TrunkInterfaceAssociation
        attr_accessor association_id: trunk_interface_association_id
        attr_accessor branch_interface_id: string
        attr_accessor trunk_interface_id: string
        attr_accessor interface_protocol: interface_protocol_type
        attr_accessor vlan_id: integer
        attr_accessor gre_key: integer
        attr_accessor tags: tag_list_output
      end
      type trunk_interface_association_id = ::String
      type trunk_interface_association_id_list = ::Array[trunk_interface_association_id]
      type trunk_interface_association_list_output = ::Array[TrunkInterfaceAssociation]
      type trust_provider_type = ("user" | "device")
      type tunnel_inside_ip_version = ("ipv4" | "ipv6")
      class TunnelOption
        attr_accessor outside_ip_address: string
        attr_accessor tunnel_inside_cidr: string
        attr_accessor tunnel_inside_ipv_6_cidr: string
        attr_accessor pre_shared_key: string
        attr_accessor phase_1_lifetime_seconds: integer
        attr_accessor phase_2_lifetime_seconds: integer
        attr_accessor rekey_margin_time_seconds: integer
        attr_accessor rekey_fuzz_percentage: integer
        attr_accessor replay_window_size: integer
        attr_accessor dpd_timeout_seconds: integer
        attr_accessor dpd_timeout_action: string
        attr_accessor phase_1_encryption_algorithms: phase_1_encryption_algorithms_list
        attr_accessor phase_2_encryption_algorithms: phase_2_encryption_algorithms_list
        attr_accessor phase_1_integrity_algorithms: phase_1_integrity_algorithms_list
        attr_accessor phase_2_integrity_algorithms: phase_2_integrity_algorithms_list
        attr_accessor phase_1_dh_group_numbers: phase_1_dh_group_numbers_list
        attr_accessor phase_2_dh_group_numbers: phase_2_dh_group_numbers_list
        attr_accessor ike_versions: ike_versions_list
        attr_accessor startup_action: string
        attr_accessor log_options: VpnTunnelLogOptions
        attr_accessor enable_tunnel_lifecycle_control: boolean
      end
      type tunnel_options_list = ::Array[TunnelOption]
      type unassign_ipv_6_addresses_request = { ipv_6_addresses: ipv_6_address_list?, ipv_6_prefixes: ip_prefix_list?, network_interface_id: network_interface_id }
      class UnassignIpv6AddressesResult
        attr_accessor network_interface_id: string
        attr_accessor unassigned_ipv_6_addresses: ipv_6_address_list
        attr_accessor unassigned_ipv_6_prefixes: ip_prefix_list
      end
      type unassign_private_ip_addresses_request = { network_interface_id: network_interface_id, private_ip_addresses: private_ip_address_string_list?, ipv_4_prefixes: ip_prefix_list? }
      type unassign_private_nat_gateway_address_request = { nat_gateway_id: nat_gateway_id, private_ip_addresses: ip_list, max_drain_duration_seconds: drain_seconds?, dry_run: boolean? }
      class UnassignPrivateNatGatewayAddressResult
        attr_accessor nat_gateway_id: nat_gateway_id
        attr_accessor nat_gateway_addresses: nat_gateway_address_list
      end
      type unlimited_supported_instance_family = ("t2" | "t3" | "t3a" | "t4g")
      type unmonitor_instances_request = { instance_ids: instance_id_string_list, dry_run: boolean? }
      class UnmonitorInstancesResult
        attr_accessor instance_monitorings: instance_monitoring_list
      end
      type unsuccessful_instance_credit_specification_error_code = ("InvalidInstanceID.Malformed" | "InvalidInstanceID.NotFound" | "IncorrectInstanceState" | "InstanceCreditSpecification.NotSupported")
      class UnsuccessfulInstanceCreditSpecificationItem
        attr_accessor instance_id: string
        attr_accessor error: UnsuccessfulInstanceCreditSpecificationItemError
      end
      class UnsuccessfulInstanceCreditSpecificationItemError
        attr_accessor code: unsuccessful_instance_credit_specification_error_code
        attr_accessor message: string
      end
      type unsuccessful_instance_credit_specification_set = ::Array[UnsuccessfulInstanceCreditSpecificationItem]
      class UnsuccessfulItem
        attr_accessor error: UnsuccessfulItemError
        attr_accessor resource_id: string
      end
      class UnsuccessfulItemError
        attr_accessor code: string
        attr_accessor message: string
      end
      type unsuccessful_item_list = ::Array[UnsuccessfulItem]
      type unsuccessful_item_set = ::Array[UnsuccessfulItem]
      type update_security_group_rule_descriptions_egress_request = { dry_run: boolean?, group_id: security_group_id?, group_name: security_group_name?, ip_permissions: ip_permission_list_input?, security_group_rule_descriptions: security_group_rule_description_list? }
      class UpdateSecurityGroupRuleDescriptionsEgressResult
        attr_accessor return: boolean
      end
      type update_security_group_rule_descriptions_ingress_request = { dry_run: boolean?, group_id: security_group_id?, group_name: security_group_name?, ip_permissions: ip_permission_list_input?, security_group_rule_descriptions: security_group_rule_description_list? }
      class UpdateSecurityGroupRuleDescriptionsIngressResult
        attr_accessor return: boolean
      end
      type usage_class_type = ("spot" | "on-demand")
      type usage_class_type_list = ::Array[usage_class_type]
      type user_bucket = { s3_bucket: string?, s3_key: string? }
      class UserBucketDetails
        attr_accessor s3_bucket: string
        attr_accessor s3_key: string
      end
      type user_data = { data: string? }
      type user_group_string_list = ::Array[string]
      type user_id_group_pair = { description: string?, group_id: string?, group_name: string?, peering_status: string?, user_id: string?, vpc_id: string?, vpc_peering_connection_id: string? }
      class UserIdGroupPair
        attr_accessor description: string
        attr_accessor group_id: string
        attr_accessor group_name: string
        attr_accessor peering_status: string
        attr_accessor user_id: string
        attr_accessor vpc_id: string
        attr_accessor vpc_peering_connection_id: string
      end
      type user_id_group_pair_list_input = ::Array[user_id_group_pair]
      type user_id_group_pair_list_output = ::Array[UserIdGroupPair]
      type user_id_group_pair_set_output = ::Array[UserIdGroupPair]
      type user_id_string_list = ::Array[string]
      type user_trust_provider_type = ("iam-identity-center" | "oidc")
      type v_cpu_count = ::Integer
      class VCpuCountRange
        attr_accessor min: integer
        attr_accessor max: integer
      end
      type v_cpu_count_range = { min: integer?, max: integer? }
      type v_cpu_count_range_request = { min: integer, max: integer? }
      class VCpuInfo
        attr_accessor default_v_cpus: v_cpu_count
        attr_accessor default_cores: core_count
        attr_accessor default_threads_per_core: threads_per_core
        attr_accessor valid_cores: core_count_list
        attr_accessor valid_threads_per_core: threads_per_core_list
      end
      class ValidationError
        attr_accessor code: string
        attr_accessor message: string
      end
      class ValidationWarning
        attr_accessor errors: error_set
      end
      type value_string_list = ::Array[string]
      class VerifiedAccessEndpoint
        attr_accessor verified_access_instance_id: string
        attr_accessor verified_access_group_id: string
        attr_accessor verified_access_endpoint_id: string
        attr_accessor application_domain: string
        attr_accessor endpoint_type: verified_access_endpoint_type
        attr_accessor attachment_type: verified_access_endpoint_attachment_type
        attr_accessor domain_certificate_arn: string
        attr_accessor endpoint_domain: string
        attr_accessor device_validation_domain: string
        attr_accessor security_group_ids: security_group_id_list
        attr_accessor load_balancer_options: VerifiedAccessEndpointLoadBalancerOptions
        attr_accessor network_interface_options: VerifiedAccessEndpointEniOptions
        attr_accessor status: VerifiedAccessEndpointStatus
        attr_accessor description: string
        attr_accessor creation_time: string
        attr_accessor last_updated_time: string
        attr_accessor deletion_time: string
        attr_accessor tags: tag_list_output
      end
      type verified_access_endpoint_attachment_type = ("vpc")
      class VerifiedAccessEndpointEniOptions
        attr_accessor network_interface_id: network_interface_id
        attr_accessor protocol: verified_access_endpoint_protocol
        attr_accessor port: verified_access_endpoint_port_number
      end
      type verified_access_endpoint_id = ::String
      type verified_access_endpoint_id_list = ::Array[verified_access_endpoint_id]
      type verified_access_endpoint_list_output = ::Array[VerifiedAccessEndpoint]
      class VerifiedAccessEndpointLoadBalancerOptions
        attr_accessor protocol: verified_access_endpoint_protocol
        attr_accessor port: verified_access_endpoint_port_number
        attr_accessor load_balancer_arn: string
        attr_accessor subnet_ids: verified_access_endpoint_subnet_id_list
      end
      type verified_access_endpoint_port_number = ::Integer
      type verified_access_endpoint_protocol = ("http" | "https")
      class VerifiedAccessEndpointStatus
        attr_accessor code: verified_access_endpoint_status_code
        attr_accessor message: string
      end
      type verified_access_endpoint_status_code = ("pending" | "active" | "updating" | "deleting" | "deleted")
      type verified_access_endpoint_subnet_id_list = ::Array[subnet_id]
      type verified_access_endpoint_type = ("load-balancer" | "network-interface")
      class VerifiedAccessGroup
        attr_accessor verified_access_group_id: string
        attr_accessor verified_access_instance_id: string
        attr_accessor description: string
        attr_accessor owner: string
        attr_accessor verified_access_group_arn: string
        attr_accessor creation_time: string
        attr_accessor last_updated_time: string
        attr_accessor deletion_time: string
        attr_accessor tags: tag_list_output
      end
      type verified_access_group_id = ::String
      type verified_access_group_id_list = ::Array[verified_access_group_id]
      type verified_access_group_list_output = ::Array[VerifiedAccessGroup]
      class VerifiedAccessInstance
        attr_accessor verified_access_instance_id: string
        attr_accessor description: string
        attr_accessor verified_access_trust_providers: verified_access_trust_provider_condensed_list
        attr_accessor creation_time: string
        attr_accessor last_updated_time: string
        attr_accessor tags: tag_list_output
      end
      type verified_access_instance_id = ::String
      type verified_access_instance_id_list = ::Array[verified_access_instance_id]
      type verified_access_instance_list_output = ::Array[VerifiedAccessInstance]
      class VerifiedAccessInstanceLoggingConfiguration
        attr_accessor verified_access_instance_id: string
        attr_accessor access_logs: VerifiedAccessLogs
      end
      type verified_access_instance_logging_configuration_list_output = ::Array[VerifiedAccessInstanceLoggingConfiguration]
      class VerifiedAccessLogCloudWatchLogsDestination
        attr_accessor enabled: boolean
        attr_accessor delivery_status: VerifiedAccessLogDeliveryStatus
        attr_accessor log_group: string
      end
      type verified_access_log_cloud_watch_logs_destination_options = { enabled: boolean, log_group: string? }
      class VerifiedAccessLogDeliveryStatus
        attr_accessor code: verified_access_log_delivery_status_code
        attr_accessor message: string
      end
      type verified_access_log_delivery_status_code = ("success" | "failed")
      class VerifiedAccessLogKinesisDataFirehoseDestination
        attr_accessor enabled: boolean
        attr_accessor delivery_status: VerifiedAccessLogDeliveryStatus
        attr_accessor delivery_stream: string
      end
      type verified_access_log_kinesis_data_firehose_destination_options = { enabled: boolean, delivery_stream: string? }
      type verified_access_log_options = { s3: verified_access_log_s3_destination_options?, cloud_watch_logs: verified_access_log_cloud_watch_logs_destination_options?, kinesis_data_firehose: verified_access_log_kinesis_data_firehose_destination_options? }
      class VerifiedAccessLogS3Destination
        attr_accessor enabled: boolean
        attr_accessor delivery_status: VerifiedAccessLogDeliveryStatus
        attr_accessor bucket_name: string
        attr_accessor prefix: string
        attr_accessor bucket_owner: string
      end
      type verified_access_log_s3_destination_options = { enabled: boolean, bucket_name: string?, prefix: string?, bucket_owner: string? }
      class VerifiedAccessLogs
        attr_accessor s3: VerifiedAccessLogS3Destination
        attr_accessor cloud_watch_logs: VerifiedAccessLogCloudWatchLogsDestination
        attr_accessor kinesis_data_firehose: VerifiedAccessLogKinesisDataFirehoseDestination
      end
      class VerifiedAccessTrustProvider
        attr_accessor verified_access_trust_provider_id: string
        attr_accessor description: string
        attr_accessor trust_provider_type: trust_provider_type
        attr_accessor user_trust_provider_type: user_trust_provider_type
        attr_accessor device_trust_provider_type: device_trust_provider_type
        attr_accessor oidc_options: OidcOptions
        attr_accessor device_options: DeviceOptions
        attr_accessor policy_reference_name: string
        attr_accessor creation_time: string
        attr_accessor last_updated_time: string
        attr_accessor tags: tag_list_output
      end
      class VerifiedAccessTrustProviderCondensed
        attr_accessor verified_access_trust_provider_id: string
        attr_accessor description: string
        attr_accessor trust_provider_type: trust_provider_type
        attr_accessor user_trust_provider_type: user_trust_provider_type
        attr_accessor device_trust_provider_type: device_trust_provider_type
      end
      type verified_access_trust_provider_condensed_list = ::Array[VerifiedAccessTrustProviderCondensed]
      type verified_access_trust_provider_id = ::String
      type verified_access_trust_provider_id_list = ::Array[verified_access_trust_provider_id]
      type verified_access_trust_provider_list_output = ::Array[VerifiedAccessTrustProvider]
      type version_description = ::String
      type version_string_list = ::Array[string]
      class VgwTelemetry
        attr_accessor accepted_route_count: integer
        attr_accessor last_status_change: date_time
        attr_accessor outside_ip_address: string
        attr_accessor status: telemetry_status
        attr_accessor status_message: string
        attr_accessor certificate_arn: string
      end
      type vgw_telemetry_list = ::Array[VgwTelemetry]
      type virtualization_type = ("hvm" | "paravirtual")
      type virtualization_type_list = ::Array[virtualization_type]
      type virtualization_type_set = ::Array[virtualization_type]
      class Volume
        attr_accessor attachments: volume_attachment_list_output
        attr_accessor availability_zone: string
        attr_accessor create_time: date_time
        attr_accessor encrypted: boolean
        attr_accessor kms_key_id: string
        attr_accessor outpost_arn: string
        attr_accessor size: integer
        attr_accessor snapshot_id: string
        attr_accessor state: volume_state
        attr_accessor volume_id: string
        attr_accessor iops: integer
        attr_accessor tags: tag_list_output
        attr_accessor volume_type: volume_type
        attr_accessor fast_restored: boolean
        attr_accessor multi_attach_enabled: boolean
        attr_accessor throughput: integer
      end
      class VolumeAttachment
        attr_accessor attach_time: date_time
        attr_accessor device: string
        attr_accessor instance_id: string
        attr_accessor state: volume_attachment_state
        attr_accessor volume_id: string
        attr_accessor delete_on_termination: boolean
      end
      type volume_attachment_list_output = ::Array[VolumeAttachment]
      type volume_attachment_state = ("attaching" | "attached" | "detaching" | "detached" | "busy")
      type volume_attribute_name = ("autoEnableIO" | "productCodes")
      type volume_detail = { size: long }
      type volume_id = ::String
      type volume_id_string_list = ::Array[volume_id]
      type volume_id_with_resolver = ::String
      type volume_list_output = ::Array[Volume]
      class VolumeModification
        attr_accessor volume_id: string
        attr_accessor modification_state: volume_modification_state
        attr_accessor status_message: string
        attr_accessor target_size: integer
        attr_accessor target_iops: integer
        attr_accessor target_volume_type: volume_type
        attr_accessor target_throughput: integer
        attr_accessor target_multi_attach_enabled: boolean
        attr_accessor original_size: integer
        attr_accessor original_iops: integer
        attr_accessor original_volume_type: volume_type
        attr_accessor original_throughput: integer
        attr_accessor original_multi_attach_enabled: boolean
        attr_accessor progress: long
        attr_accessor start_time: date_time
        attr_accessor end_time: date_time
      end
      type volume_modification_list_output = ::Array[VolumeModification]
      type volume_modification_state = ("modifying" | "optimizing" | "completed" | "failed")
      type volume_state = ("creating" | "available" | "in-use" | "deleting" | "deleted" | "error")
      class VolumeStatusAction
        attr_accessor code: string
        attr_accessor description: string
        attr_accessor event_id: string
        attr_accessor event_type: string
      end
      type volume_status_actions_list = ::Array[VolumeStatusAction]
      class VolumeStatusAttachmentStatus
        attr_accessor io_performance: string
        attr_accessor instance_id: string
      end
      type volume_status_attachment_status_list = ::Array[VolumeStatusAttachmentStatus]
      class VolumeStatusDetails
        attr_accessor name: volume_status_name
        attr_accessor status: string
      end
      type volume_status_details_list = ::Array[VolumeStatusDetails]
      class VolumeStatusEvent
        attr_accessor description: string
        attr_accessor event_id: string
        attr_accessor event_type: string
        attr_accessor not_after: millisecond_date_time
        attr_accessor not_before: millisecond_date_time
        attr_accessor instance_id: string
      end
      type volume_status_events_list = ::Array[VolumeStatusEvent]
      class VolumeStatusInfo
        attr_accessor details: volume_status_details_list
        attr_accessor status: volume_status_info_status
      end
      type volume_status_info_status = ("ok" | "impaired" | "insufficient-data")
      class VolumeStatusItem
        attr_accessor actions: volume_status_actions_list
        attr_accessor availability_zone: string
        attr_accessor outpost_arn: string
        attr_accessor events: volume_status_events_list
        attr_accessor volume_id: string
        attr_accessor volume_status: VolumeStatusInfo
        attr_accessor attachment_statuses: volume_status_attachment_status_list
      end
      type volume_status_list = ::Array[VolumeStatusItem]
      type volume_status_name = ("io-enabled" | "io-performance")
      type volume_type = ("standard" | "io1" | "io2" | "gp2" | "sc1" | "st1" | "gp3")
      class Vpc
        attr_accessor cidr_block: string
        attr_accessor dhcp_options_id: string
        attr_accessor state: vpc_state
        attr_accessor vpc_id: string
        attr_accessor owner_id: string
        attr_accessor instance_tenancy: tenancy
        attr_accessor ipv_6_cidr_block_association_set: vpc_ipv_6_cidr_block_association_set_output
        attr_accessor cidr_block_association_set: vpc_cidr_block_association_set_output
        attr_accessor is_default: boolean
        attr_accessor tags: tag_list_output
      end
      class VpcAttachment
        attr_accessor state: attachment_status
        attr_accessor vpc_id: string
      end
      type vpc_attachment_list_output = ::Array[VpcAttachment]
      type vpc_attribute_name = ("enableDnsSupport" | "enableDnsHostnames" | "enableNetworkAddressUsageMetrics")
      type vpc_cidr_association_id = ::String
      class VpcCidrBlockAssociation
        attr_accessor association_id: string
        attr_accessor cidr_block: string
        attr_accessor cidr_block_state: VpcCidrBlockState
      end
      type vpc_cidr_block_association_set_output = ::Array[VpcCidrBlockAssociation]
      class VpcCidrBlockState
        attr_accessor state: vpc_cidr_block_state_code
        attr_accessor status_message: string
      end
      type vpc_cidr_block_state_code = ("associating" | "associated" | "disassociating" | "disassociated" | "failing" | "failed")
      class VpcClassicLink
        attr_accessor classic_link_enabled: boolean
        attr_accessor tags: tag_list_output
        attr_accessor vpc_id: string
      end
      type vpc_classic_link_id_list = ::Array[vpc_id]
      type vpc_classic_link_list = ::Array[VpcClassicLink]
      class VpcEndpoint
        attr_accessor vpc_endpoint_id: string
        attr_accessor vpc_endpoint_type: vpc_endpoint_type
        attr_accessor vpc_id: string
        attr_accessor service_name: string
        attr_accessor state: state
        attr_accessor policy_document: string
        attr_accessor route_table_ids: value_string_list
        attr_accessor subnet_ids: value_string_list
        attr_accessor groups: group_identifier_set
        attr_accessor ip_address_type: ip_address_type
        attr_accessor dns_options: DnsOptions
        attr_accessor private_dns_enabled: boolean
        attr_accessor requester_managed: boolean
        attr_accessor network_interface_ids: value_string_list
        attr_accessor dns_entries: dns_entry_set
        attr_accessor creation_timestamp: millisecond_date_time
        attr_accessor tags: tag_list_output
        attr_accessor owner_id: string
        attr_accessor last_error: LastError
      end
      class VpcEndpointConnection
        attr_accessor service_id: string
        attr_accessor vpc_endpoint_id: string
        attr_accessor vpc_endpoint_owner: string
        attr_accessor vpc_endpoint_state: state
        attr_accessor creation_timestamp: millisecond_date_time
        attr_accessor dns_entries: dns_entry_set
        attr_accessor network_load_balancer_arns: value_string_list
        attr_accessor gateway_load_balancer_arns: value_string_list
        attr_accessor ip_address_type: ip_address_type
        attr_accessor vpc_endpoint_connection_id: string
        attr_accessor tags: tag_list_output
      end
      type vpc_endpoint_connection_set = ::Array[VpcEndpointConnection]
      type vpc_endpoint_id = ::String
      type vpc_endpoint_id_list = ::Array[vpc_endpoint_id]
      type vpc_endpoint_route_table_id_list = ::Array[route_table_id]
      type vpc_endpoint_security_group_id_list = ::Array[security_group_id]
      type vpc_endpoint_service_id = ::String
      type vpc_endpoint_service_id_list = ::Array[vpc_endpoint_service_id]
      type vpc_endpoint_set_output = ::Array[VpcEndpoint]
      type vpc_endpoint_subnet_id_list = ::Array[subnet_id]
      type vpc_endpoint_type = ("Interface" | "Gateway" | "GatewayLoadBalancer")
      type vpc_flow_log_id = ::String
      type vpc_id = ::String
      type vpc_id_string_list = ::Array[vpc_id]
      class VpcIpv6CidrBlockAssociation
        attr_accessor association_id: string
        attr_accessor ipv_6_cidr_block: string
        attr_accessor ipv_6_cidr_block_state: VpcCidrBlockState
        attr_accessor network_border_group: string
        attr_accessor ipv_6_pool: string
      end
      type vpc_ipv_6_cidr_block_association_set_output = ::Array[VpcIpv6CidrBlockAssociation]
      type vpc_list_output = ::Array[Vpc]
      class VpcPeeringConnection
        attr_accessor accepter_vpc_info: VpcPeeringConnectionVpcInfo
        attr_accessor expiration_time: date_time
        attr_accessor requester_vpc_info: VpcPeeringConnectionVpcInfo
        attr_accessor status: VpcPeeringConnectionStateReason
        attr_accessor tags: tag_list_output
        attr_accessor vpc_peering_connection_id: string
      end
      type vpc_peering_connection_id = ::String
      type vpc_peering_connection_id_list = ::Array[vpc_peering_connection_id]
      type vpc_peering_connection_id_with_resolver = ::String
      type vpc_peering_connection_list_output = ::Array[VpcPeeringConnection]
      class VpcPeeringConnectionOptionsDescription
        attr_accessor allow_dns_resolution_from_remote_vpc: boolean
        attr_accessor allow_egress_from_local_classic_link_to_remote_vpc: boolean
        attr_accessor allow_egress_from_local_vpc_to_remote_classic_link: boolean
      end
      class VpcPeeringConnectionStateReason
        attr_accessor code: vpc_peering_connection_state_reason_code
        attr_accessor message: string
      end
      type vpc_peering_connection_state_reason_code = ("initiating-request" | "pending-acceptance" | "active" | "deleted" | "rejected" | "failed" | "expired" | "provisioning" | "deleting")
      class VpcPeeringConnectionVpcInfo
        attr_accessor cidr_block: string
        attr_accessor ipv_6_cidr_block_set: ipv_6_cidr_block_set
        attr_accessor cidr_block_set: cidr_block_set
        attr_accessor owner_id: string
        attr_accessor peering_options: VpcPeeringConnectionOptionsDescription
        attr_accessor vpc_id: string
        attr_accessor region: string
      end
      type vpc_state = ("pending" | "available")
      type vpc_tenancy = ("default")
      class VpnConnection
        attr_accessor customer_gateway_configuration: string
        attr_accessor customer_gateway_id: string
        attr_accessor category: string
        attr_accessor state: vpn_state
        attr_accessor type_: gateway_type
        attr_accessor vpn_connection_id: string
        attr_accessor vpn_gateway_id: string
        attr_accessor transit_gateway_id: string
        attr_accessor core_network_arn: string
        attr_accessor core_network_attachment_arn: string
        attr_accessor gateway_association_state: gateway_association_state
        attr_accessor options: VpnConnectionOptions
        attr_accessor routes: vpn_static_route_list
        attr_accessor tags: tag_list_output
        attr_accessor vgw_telemetry: vgw_telemetry_list
      end
      type vpn_connection_device_sample_configuration = ::String
      class VpnConnectionDeviceType
        attr_accessor vpn_connection_device_type_id: string
        attr_accessor vendor: string
        attr_accessor platform: string
        attr_accessor software: string
      end
      type vpn_connection_device_type_id = ::String
      type vpn_connection_device_type_list = ::Array[VpnConnectionDeviceType]
      type vpn_connection_id = ::String
      type vpn_connection_id_string_list = ::Array[vpn_connection_id]
      type vpn_connection_list_output = ::Array[VpnConnection]
      class VpnConnectionOptions
        attr_accessor enable_acceleration: boolean
        attr_accessor static_routes_only: boolean
        attr_accessor local_ipv_4_network_cidr: string
        attr_accessor remote_ipv_4_network_cidr: string
        attr_accessor local_ipv_6_network_cidr: string
        attr_accessor remote_ipv_6_network_cidr: string
        attr_accessor outside_ip_address_type: string
        attr_accessor transport_transit_gateway_attachment_id: string
        attr_accessor tunnel_inside_ip_version: tunnel_inside_ip_version
        attr_accessor tunnel_options: tunnel_options_list
      end
      type vpn_connection_options_specification = { enable_acceleration: boolean?, static_routes_only: boolean?, tunnel_inside_ip_version: tunnel_inside_ip_version?, tunnel_options: vpn_tunnel_options_specifications_list?, local_ipv_4_network_cidr: string?, remote_ipv_4_network_cidr: string?, local_ipv_6_network_cidr: string?, remote_ipv_6_network_cidr: string?, outside_ip_address_type: string?, transport_transit_gateway_attachment_id: transit_gateway_attachment_id? }
      type vpn_ecmp_support_value = ("enable" | "disable")
      class VpnGateway
        attr_accessor availability_zone: string
        attr_accessor state: vpn_state
        attr_accessor type_: gateway_type
        attr_accessor vpc_attachments: vpc_attachment_list_output
        attr_accessor vpn_gateway_id: string
        attr_accessor amazon_side_asn: long
        attr_accessor tags: tag_list_output
      end
      type vpn_gateway_id = ::String
      type vpn_gateway_id_string_list = ::Array[vpn_gateway_id]
      type vpn_gateway_list_output = ::Array[VpnGateway]
      type vpn_protocol = ("openvpn")
      type vpn_state = ("pending" | "available" | "deleting" | "deleted")
      class VpnStaticRoute
        attr_accessor destination_cidr_block: string
        attr_accessor source: vpn_static_route_source
        attr_accessor state: vpn_state
      end
      type vpn_static_route_list = ::Array[VpnStaticRoute]
      type vpn_static_route_source = ("Static")
      class VpnTunnelLogOptions
        attr_accessor cloud_watch_log_options: CloudWatchLogOptions
      end
      type vpn_tunnel_log_options_specification = { cloud_watch_log_options: cloud_watch_log_options_specification? }
      type vpn_tunnel_options_specification = { tunnel_inside_cidr: string?, tunnel_inside_ipv_6_cidr: string?, pre_shared_key: string?, phase_1_lifetime_seconds: integer?, phase_2_lifetime_seconds: integer?, rekey_margin_time_seconds: integer?, rekey_fuzz_percentage: integer?, replay_window_size: integer?, dpd_timeout_seconds: integer?, dpd_timeout_action: string?, phase_1_encryption_algorithms: phase_1_encryption_algorithms_request_list?, phase_2_encryption_algorithms: phase_2_encryption_algorithms_request_list?, phase_1_integrity_algorithms: phase_1_integrity_algorithms_request_list?, phase_2_integrity_algorithms: phase_2_integrity_algorithms_request_list?, phase_1_dh_group_numbers: phase_1_dh_group_numbers_request_list?, phase_2_dh_group_numbers: phase_2_dh_group_numbers_request_list?, ike_versions: ike_versions_request_list?, startup_action: string?, log_options: vpn_tunnel_log_options_specification?, enable_tunnel_lifecycle_control: boolean? }
      type vpn_tunnel_options_specifications_list = ::Array[vpn_tunnel_options_specification]
      type week_day = ("sunday" | "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday")
      type withdraw_byoip_cidr_request = { cidr: string, dry_run: boolean? }
      class WithdrawByoipCidrResult
        attr_accessor byoip_cidr: ByoipCidr
      end
      type zone_id_string_list = ::Array[string]
      type zone_name_string_list = ::Array[string]
      type scope = ("Availability Zone" | "Region")
      type snapshot_tier_status_set = ::Array[SnapshotTierStatus]
      type total_fpga_memory = ::Integer
      type total_gpu_memory = ::Integer
    end
  end
end
