# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the generator README.md for more information:
# https://github.com/ruby/gem_rbs_collection/blob/main/generators/aws-sdk-rbs-generator/README.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module EC2
    class Image
      # identifiers

      def initialize: (id: String, ?client: Client, **untyped) -> void
      def id: () -> String

      # data_attribute

      def architecture: () -> Types::architecture_values
      def creation_date: () -> Types::string
      def image_location: () -> Types::string
      def image_type: () -> Types::image_type_values
      def public: () -> Types::boolean
      def kernel_id: () -> Types::string
      def owner_id: () -> Types::string
      def platform: () -> Types::platform_values
      def platform_details: () -> Types::string
      def usage_operation: () -> Types::string
      def product_codes: () -> Types::product_code_list
      def ramdisk_id: () -> Types::string
      def state: () -> Types::image_state
      def block_device_mappings: () -> Types::block_device_mapping_list_output
      def description: () -> Types::string
      def ena_support: () -> Types::boolean
      def hypervisor: () -> Types::hypervisor_type
      def image_owner_alias: () -> Types::string
      def name: () -> Types::string
      def root_device_name: () -> Types::string
      def root_device_type: () -> Types::device_type
      def sriov_net_support: () -> Types::string
      def state_reason: () -> Types::StateReason
      def tags: () -> Types::tag_list_output
      def virtualization_type: () -> Types::virtualization_type
      def boot_mode: () -> Types::boot_mode_values
      def tpm_support: () -> Types::tpm_support_values
      def deprecation_time: () -> Types::string
      def imds_support: () -> Types::imds_support_values

      # client_method

      def client: () -> Client

      # load_method

      def load: () -> self
      alias reload load

      # data_method

      def data: () -> Types::Image

      def data_loaded?: () -> bool

      # waiters

      def exists?: (?Aws::Waiters::waiter_options) -> bool
      def wait_until_exists: (?Aws::Waiters::waiter_options) -> self

      # actions

      def create_tags: (?dry_run: Types::boolean, tags: Types::tag_list_input) -> Tag::Collection
      def delete_tags: (?dry_run: Types::boolean, ?tags: Types::tag_list_input) -> Tag::Collection
      def deregister: (?dry_run: Types::boolean) -> EmptyStructure
      def describe_attribute: (attribute: Types::image_attribute_name, ?dry_run: Types::boolean) -> Types::ImageAttribute
      def modify_attribute: (?attribute: Types::string, ?description: Types::attribute_value, ?launch_permission: Types::launch_permission_modifications, ?operation_type: Types::operation_type, ?product_codes: Types::product_code_string_list, ?user_groups: Types::user_group_string_list, ?user_ids: Types::user_id_string_list, ?value: Types::string, ?dry_run: Types::boolean, ?organization_arns: Types::organization_arn_string_list, ?organizational_unit_arns: Types::organizational_unit_arn_string_list, ?imds_support: Types::attribute_value) -> EmptyStructure
      def reset_attribute: (attribute: Types::reset_image_attribute_name, ?dry_run: Types::boolean) -> EmptyStructure

      # associations


      # batch_actions

      class Collection < ::Aws::Resources::Collection[Image]
      end
    end
  end
end
