# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the generator README.md for more information:
# https://github.com/ruby/gem_rbs_collection/blob/main/generators/aws-sdk-rbs-generator/README.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module SSM
    module Errors
      class ServiceError < Aws::Errors::ServiceError
      end

      class AlreadyExistsException < ServiceError
        def message: () -> Types::string
      end
      class AssociatedInstances < ServiceError
      end
      class AssociationAlreadyExists < ServiceError
      end
      class AssociationDoesNotExist < ServiceError
        def message: () -> Types::string
      end
      class AssociationExecutionDoesNotExist < ServiceError
        def message: () -> Types::string
      end
      class AssociationLimitExceeded < ServiceError
      end
      class AssociationVersionLimitExceeded < ServiceError
        def message: () -> Types::string
      end
      class AutomationDefinitionNotApprovedException < ServiceError
        def message: () -> Types::string
      end
      class AutomationDefinitionNotFoundException < ServiceError
        def message: () -> Types::string
      end
      class AutomationDefinitionVersionNotFoundException < ServiceError
        def message: () -> Types::string
      end
      class AutomationExecutionLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class AutomationExecutionNotFoundException < ServiceError
        def message: () -> Types::string
      end
      class AutomationStepNotFoundException < ServiceError
        def message: () -> Types::string
      end
      class ComplianceTypeCountLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class CustomSchemaCountLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class DocumentAlreadyExists < ServiceError
        def message: () -> Types::string
      end
      class DocumentLimitExceeded < ServiceError
        def message: () -> Types::string
      end
      class DocumentPermissionLimit < ServiceError
        def message: () -> Types::string
      end
      class DocumentVersionLimitExceeded < ServiceError
        def message: () -> Types::string
      end
      class DoesNotExistException < ServiceError
        def message: () -> Types::string
      end
      class DuplicateDocumentContent < ServiceError
        def message: () -> Types::string
      end
      class DuplicateDocumentVersionName < ServiceError
        def message: () -> Types::string
      end
      class DuplicateInstanceId < ServiceError
      end
      class FeatureNotAvailableException < ServiceError
        def message: () -> Types::string
      end
      class HierarchyLevelLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class HierarchyTypeMismatchException < ServiceError
        def message: () -> Types::string
      end
      class IdempotentParameterMismatch < ServiceError
        def message: () -> Types::string
      end
      class IncompatiblePolicyException < ServiceError
        def message: () -> Types::string
      end
      class InternalServerError < ServiceError
        def message: () -> Types::string
      end
      class InvalidActivation < ServiceError
        def message: () -> Types::string
      end
      class InvalidActivationId < ServiceError
        def message: () -> Types::string
      end
      class InvalidAggregatorException < ServiceError
        def message: () -> Types::string
      end
      class InvalidAllowedPatternException < ServiceError
        def message: () -> Types::string
      end
      class InvalidAssociation < ServiceError
        def message: () -> Types::string
      end
      class InvalidAssociationVersion < ServiceError
        def message: () -> Types::string
      end
      class InvalidAutomationExecutionParametersException < ServiceError
        def message: () -> Types::string
      end
      class InvalidAutomationSignalException < ServiceError
        def message: () -> Types::string
      end
      class InvalidAutomationStatusUpdateException < ServiceError
        def message: () -> Types::string
      end
      class InvalidCommandId < ServiceError
      end
      class InvalidDeleteInventoryParametersException < ServiceError
        def message: () -> Types::string
      end
      class InvalidDeletionIdException < ServiceError
        def message: () -> Types::string
      end
      class InvalidDocument < ServiceError
        def message: () -> Types::string
      end
      class InvalidDocumentContent < ServiceError
        def message: () -> Types::string
      end
      class InvalidDocumentOperation < ServiceError
        def message: () -> Types::string
      end
      class InvalidDocumentSchemaVersion < ServiceError
        def message: () -> Types::string
      end
      class InvalidDocumentType < ServiceError
        def message: () -> Types::string
      end
      class InvalidDocumentVersion < ServiceError
        def message: () -> Types::string
      end
      class InvalidFilter < ServiceError
        def message: () -> Types::string
      end
      class InvalidFilterKey < ServiceError
      end
      class InvalidFilterOption < ServiceError
        def message: () -> Types::string
      end
      class InvalidFilterValue < ServiceError
        def message: () -> Types::string
      end
      class InvalidInstanceId < ServiceError
        def message: () -> Types::string
      end
      class InvalidInstanceInformationFilterValue < ServiceError
        def message: () -> Types::string
      end
      class InvalidInventoryGroupException < ServiceError
        def message: () -> Types::string
      end
      class InvalidInventoryItemContextException < ServiceError
        def message: () -> Types::string
      end
      class InvalidInventoryRequestException < ServiceError
        def message: () -> Types::string
      end
      class InvalidItemContentException < ServiceError
        def type_name: () -> Types::inventory_item_type_name
        def message: () -> Types::string
      end
      class InvalidKeyId < ServiceError
        def message: () -> Types::string
      end
      class InvalidNextToken < ServiceError
        def message: () -> Types::string
      end
      class InvalidNotificationConfig < ServiceError
        def message: () -> Types::string
      end
      class InvalidOptionException < ServiceError
        def message: () -> Types::string
      end
      class InvalidOutputFolder < ServiceError
      end
      class InvalidOutputLocation < ServiceError
      end
      class InvalidParameters < ServiceError
        def message: () -> Types::string
      end
      class InvalidPermissionType < ServiceError
        def message: () -> Types::string
      end
      class InvalidPluginName < ServiceError
      end
      class InvalidPolicyAttributeException < ServiceError
        def message: () -> Types::string
      end
      class InvalidPolicyTypeException < ServiceError
        def message: () -> Types::string
      end
      class InvalidResourceId < ServiceError
      end
      class InvalidResourceType < ServiceError
      end
      class InvalidResultAttributeException < ServiceError
        def message: () -> Types::string
      end
      class InvalidRole < ServiceError
        def message: () -> Types::string
      end
      class InvalidSchedule < ServiceError
        def message: () -> Types::string
      end
      class InvalidTag < ServiceError
        def message: () -> Types::string
      end
      class InvalidTarget < ServiceError
        def message: () -> Types::string
      end
      class InvalidTargetMaps < ServiceError
        def message: () -> Types::string
      end
      class InvalidTypeNameException < ServiceError
        def message: () -> Types::string
      end
      class InvalidUpdate < ServiceError
        def message: () -> Types::string
      end
      class InvocationDoesNotExist < ServiceError
      end
      class ItemContentMismatchException < ServiceError
        def type_name: () -> Types::inventory_item_type_name
        def message: () -> Types::string
      end
      class ItemSizeLimitExceededException < ServiceError
        def type_name: () -> Types::inventory_item_type_name
        def message: () -> Types::string
      end
      class MaxDocumentSizeExceeded < ServiceError
        def message: () -> Types::string
      end
      class OpsItemAccessDeniedException < ServiceError
        def message: () -> Types::string
      end
      class OpsItemAlreadyExistsException < ServiceError
        def message: () -> Types::string
        def ops_item_id: () -> Types::string
      end
      class OpsItemInvalidParameterException < ServiceError
        def parameter_names: () -> Types::ops_item_parameter_names_list
        def message: () -> Types::string
      end
      class OpsItemLimitExceededException < ServiceError
        def resource_types: () -> Types::ops_item_parameter_names_list
        def limit: () -> Types::integer
        def limit_type: () -> Types::string
        def message: () -> Types::string
      end
      class OpsItemNotFoundException < ServiceError
        def message: () -> Types::string
      end
      class OpsItemRelatedItemAlreadyExistsException < ServiceError
        def message: () -> Types::string
        def resource_uri: () -> Types::ops_item_related_item_association_resource_uri
        def ops_item_id: () -> Types::ops_item_id
      end
      class OpsItemRelatedItemAssociationNotFoundException < ServiceError
        def message: () -> Types::string
      end
      class OpsMetadataAlreadyExistsException < ServiceError
        def message: () -> Types::string
      end
      class OpsMetadataInvalidArgumentException < ServiceError
        def message: () -> Types::string
      end
      class OpsMetadataKeyLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class OpsMetadataLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class OpsMetadataNotFoundException < ServiceError
        def message: () -> Types::string
      end
      class OpsMetadataTooManyUpdatesException < ServiceError
        def message: () -> Types::string
      end
      class ParameterAlreadyExists < ServiceError
        def message: () -> Types::string
      end
      class ParameterLimitExceeded < ServiceError
        def message: () -> Types::string
      end
      class ParameterMaxVersionLimitExceeded < ServiceError
        def message: () -> Types::string
      end
      class ParameterNotFound < ServiceError
        def message: () -> Types::string
      end
      class ParameterPatternMismatchException < ServiceError
        def message: () -> Types::string
      end
      class ParameterVersionLabelLimitExceeded < ServiceError
        def message: () -> Types::string
      end
      class ParameterVersionNotFound < ServiceError
        def message: () -> Types::string
      end
      class PoliciesLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class ResourceDataSyncAlreadyExistsException < ServiceError
        def sync_name: () -> Types::resource_data_sync_name
      end
      class ResourceDataSyncConflictException < ServiceError
        def message: () -> Types::string
      end
      class ResourceDataSyncCountExceededException < ServiceError
        def message: () -> Types::string
      end
      class ResourceDataSyncInvalidConfigurationException < ServiceError
        def message: () -> Types::string
      end
      class ResourceDataSyncNotFoundException < ServiceError
        def sync_name: () -> Types::resource_data_sync_name
        def sync_type: () -> Types::resource_data_sync_type
        def message: () -> Types::string
      end
      class ResourceInUseException < ServiceError
        def message: () -> Types::string
      end
      class ResourceLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class ResourcePolicyConflictException < ServiceError
        def message: () -> Types::string
      end
      class ResourcePolicyInvalidParameterException < ServiceError
        def parameter_names: () -> Types::resource_policy_parameter_names_list
        def message: () -> Types::string
      end
      class ResourcePolicyLimitExceededException < ServiceError
        def limit: () -> Types::integer
        def limit_type: () -> Types::string
        def message: () -> Types::string
      end
      class ServiceSettingNotFound < ServiceError
        def message: () -> Types::string
      end
      class StatusUnchanged < ServiceError
      end
      class SubTypeCountLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class TargetInUseException < ServiceError
        def message: () -> Types::string
      end
      class TargetNotConnected < ServiceError
        def message: () -> Types::string
      end
      class TooManyTagsError < ServiceError
      end
      class TooManyUpdates < ServiceError
        def message: () -> Types::string
      end
      class TotalSizeLimitExceededException < ServiceError
        def message: () -> Types::string
      end
      class UnsupportedCalendarException < ServiceError
        def message: () -> Types::string
      end
      class UnsupportedFeatureRequiredException < ServiceError
        def message: () -> Types::string
      end
      class UnsupportedInventoryItemContextException < ServiceError
        def type_name: () -> Types::inventory_item_type_name
        def message: () -> Types::string
      end
      class UnsupportedInventorySchemaVersionException < ServiceError
        def message: () -> Types::string
      end
      class UnsupportedOperatingSystem < ServiceError
        def message: () -> Types::string
      end
      class UnsupportedParameterType < ServiceError
        def message: () -> Types::string
      end
      class UnsupportedPlatformType < ServiceError
        def message: () -> Types::string
      end
    end
  end
end
