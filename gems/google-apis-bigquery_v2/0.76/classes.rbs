module Google
  module Apis
    module BigqueryV2
      # Aggregate metrics for classification/classifier models. For multi-class models,
      # the metrics are either macro-averaged or micro-averaged. When macro-averaged,
      # the metrics are calculated for each label and then an unweighted average is
      # taken of those values. When micro-averaged, the metric is calculated globally
      # by counting the total number of correctly predicted rows.
      class AggregateClassificationMetrics
        @accuracy: untyped

        @f1_score: untyped

        @log_loss: untyped

        @precision: untyped

        @recall: untyped

        @roc_auc: untyped

        @threshold: untyped

        include Google::Apis::Core::Hashable

        # Accuracy is the fraction of predictions given the correct label. For
        # multiclass this is a micro-averaged metric.
        # Corresponds to the JSON property `accuracy`
        # @return [Float]
        attr_accessor accuracy: untyped

        # The F1 score is an average of recall and precision. For multiclass this is a
        # macro-averaged metric.
        # Corresponds to the JSON property `f1Score`
        # @return [Float]
        attr_accessor f1_score: untyped

        # Logarithmic Loss. For multiclass this is a macro-averaged metric.
        # Corresponds to the JSON property `logLoss`
        # @return [Float]
        attr_accessor log_loss: untyped

        # Precision is the fraction of actual positive predictions that had positive
        # actual labels. For multiclass this is a macro-averaged metric treating each
        # class as a binary classifier.
        # Corresponds to the JSON property `precision`
        # @return [Float]
        attr_accessor precision: untyped

        # Recall is the fraction of actual positive labels that were given a positive
        # prediction. For multiclass this is a macro-averaged metric.
        # Corresponds to the JSON property `recall`
        # @return [Float]
        attr_accessor recall: untyped

        # Area Under a ROC Curve. For multiclass this is a macro-averaged metric.
        # Corresponds to the JSON property `rocAuc`
        # @return [Float]
        attr_accessor roc_auc: untyped

        # Threshold at which the metrics are computed. For binary classification models
        # this is the positive class threshold. For multi-class classfication models
        # this is the confidence threshold.
        # Corresponds to the JSON property `threshold`
        # @return [Float]
        attr_accessor threshold: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Represents privacy policy associated with "aggregation threshold" method.
      class AggregationThresholdPolicy
        @privacy_unit_columns: untyped

        @threshold: untyped

        include Google::Apis::Core::Hashable

        # Optional. The privacy unit column(s) associated with this policy. For now,
        # only one column per data source object (table, view) is allowed as a privacy
        # unit column. Representing as a repeated field in metadata for extensibility to
        # multiple columns in future. Duplicates and Repeated struct fields are not
        # allowed. For nested fields, use dot notation ("outer.inner")
        # Corresponds to the JSON property `privacyUnitColumns`
        # @return [Array<String>]
        attr_accessor privacy_unit_columns: untyped

        # Optional. The threshold for the "aggregation threshold" policy.
        # Corresponds to the JSON property `threshold`
        # @return [Fixnum]
        attr_accessor threshold: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Input/output argument of a function or a stored procedure.
      class Argument
        @argument_kind: untyped

        @data_type: untyped

        @is_aggregate: untyped

        @mode: untyped

        @name: untyped

        include Google::Apis::Core::Hashable

        # Optional. Defaults to FIXED_TYPE.
        # Corresponds to the JSON property `argumentKind`
        # @return [String]
        attr_accessor argument_kind: untyped

        # The data type of a variable such as a function argument. Examples include: *
        # INT64: ``"typeKind": "INT64"`` * ARRAY: ` "typeKind": "ARRAY", "
        # arrayElementType": `"typeKind": "STRING"` ` * STRUCT>: ` "typeKind": "STRUCT",
        # "structType": ` "fields": [ ` "name": "x", "type": `"typeKind": "STRING"` `, `
        # "name": "y", "type": ` "typeKind": "ARRAY", "arrayElementType": `"typeKind": "
        # DATE"` ` ` ] ` ` * RANGE: ` "typeKind": "RANGE", "rangeElementType": `"
        # typeKind": "DATE"` `
        # Corresponds to the JSON property `dataType`
        # @return [Google::Apis::BigqueryV2::StandardSqlDataType]
        attr_accessor data_type: untyped

        # Optional. Whether the argument is an aggregate function parameter. Must be
        # Unset for routine types other than AGGREGATE_FUNCTION. For AGGREGATE_FUNCTION,
        # if set to false, it is equivalent to adding "NOT AGGREGATE" clause in DDL;
        # Otherwise, it is equivalent to omitting "NOT AGGREGATE" clause in DDL.
        # Corresponds to the JSON property `isAggregate`
        # @return [Boolean]
        attr_accessor is_aggregate: untyped

        alias is_aggregate? is_aggregate

        # Optional. Specifies whether the argument is input or output. Can be set for
        # procedures only.
        # Corresponds to the JSON property `mode`
        # @return [String]
        attr_accessor mode: untyped

        # Optional. The name of this argument. Can be absent for function return
        # argument.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor name: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Arima coefficients.
      class ArimaCoefficients
        @auto_regressive_coefficients: untyped

        @intercept_coefficient: untyped

        @moving_average_coefficients: untyped

        include Google::Apis::Core::Hashable

        # Auto-regressive coefficients, an array of double.
        # Corresponds to the JSON property `autoRegressiveCoefficients`
        # @return [Array<Float>]
        attr_accessor auto_regressive_coefficients: untyped

        # Intercept coefficient, just a double not an array.
        # Corresponds to the JSON property `interceptCoefficient`
        # @return [Float]
        attr_accessor intercept_coefficient: untyped

        # Moving-average coefficients, an array of double.
        # Corresponds to the JSON property `movingAverageCoefficients`
        # @return [Array<Float>]
        attr_accessor moving_average_coefficients: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # ARIMA model fitting metrics.
      class ArimaFittingMetrics
        @aic: untyped

        @log_likelihood: untyped

        @variance: untyped

        include Google::Apis::Core::Hashable

        # AIC.
        # Corresponds to the JSON property `aic`
        # @return [Float]
        attr_accessor aic: untyped

        # Log-likelihood.
        # Corresponds to the JSON property `logLikelihood`
        # @return [Float]
        attr_accessor log_likelihood: untyped

        # Variance.
        # Corresponds to the JSON property `variance`
        # @return [Float]
        attr_accessor variance: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Model evaluation metrics for ARIMA forecasting models.
      class ArimaForecastingMetrics
        @arima_fitting_metrics: untyped

        @arima_single_model_forecasting_metrics: untyped

        @has_drift: untyped

        @non_seasonal_order: untyped

        @seasonal_periods: untyped

        @time_series_id: untyped

        include Google::Apis::Core::Hashable

        # Arima model fitting metrics.
        # Corresponds to the JSON property `arimaFittingMetrics`
        # @return [Array<Google::Apis::BigqueryV2::ArimaFittingMetrics>]
        attr_accessor arima_fitting_metrics: untyped

        # Repeated as there can be many metric sets (one for each model) in auto-arima
        # and the large-scale case.
        # Corresponds to the JSON property `arimaSingleModelForecastingMetrics`
        # @return [Array<Google::Apis::BigqueryV2::ArimaSingleModelForecastingMetrics>]
        attr_accessor arima_single_model_forecasting_metrics: untyped

        # Whether Arima model fitted with drift or not. It is always false when d is not
        # 1.
        # Corresponds to the JSON property `hasDrift`
        # @return [Array<Boolean>]
        attr_accessor has_drift: untyped

        # Non-seasonal order.
        # Corresponds to the JSON property `nonSeasonalOrder`
        # @return [Array<Google::Apis::BigqueryV2::ArimaOrder>]
        attr_accessor non_seasonal_order: untyped

        # Seasonal periods. Repeated because multiple periods are supported for one time
        # series.
        # Corresponds to the JSON property `seasonalPeriods`
        # @return [Array<String>]
        attr_accessor seasonal_periods: untyped

        # Id to differentiate different time series for the large-scale case.
        # Corresponds to the JSON property `timeSeriesId`
        # @return [Array<String>]
        attr_accessor time_series_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Arima model information.
      class ArimaModelInfo
        @arima_coefficients: untyped

        @arima_fitting_metrics: untyped

        @has_drift: untyped

        @has_holiday_effect: untyped

        @has_spikes_and_dips: untyped

        @has_step_changes: untyped

        @non_seasonal_order: untyped

        @seasonal_periods: untyped

        @time_series_id: untyped

        @time_series_ids: untyped

        include Google::Apis::Core::Hashable

        # Arima coefficients.
        # Corresponds to the JSON property `arimaCoefficients`
        # @return [Google::Apis::BigqueryV2::ArimaCoefficients]
        attr_accessor arima_coefficients: untyped

        # ARIMA model fitting metrics.
        # Corresponds to the JSON property `arimaFittingMetrics`
        # @return [Google::Apis::BigqueryV2::ArimaFittingMetrics]
        attr_accessor arima_fitting_metrics: untyped

        # Whether Arima model fitted with drift or not. It is always false when d is not
        # 1.
        # Corresponds to the JSON property `hasDrift`
        # @return [Boolean]
        attr_accessor has_drift: untyped

        alias has_drift? has_drift

        # If true, holiday_effect is a part of time series decomposition result.
        # Corresponds to the JSON property `hasHolidayEffect`
        # @return [Boolean]
        attr_accessor has_holiday_effect: untyped

        alias has_holiday_effect? has_holiday_effect

        # If true, spikes_and_dips is a part of time series decomposition result.
        # Corresponds to the JSON property `hasSpikesAndDips`
        # @return [Boolean]
        attr_accessor has_spikes_and_dips: untyped

        alias has_spikes_and_dips? has_spikes_and_dips

        # If true, step_changes is a part of time series decomposition result.
        # Corresponds to the JSON property `hasStepChanges`
        # @return [Boolean]
        attr_accessor has_step_changes: untyped

        alias has_step_changes? has_step_changes

        # Arima order, can be used for both non-seasonal and seasonal parts.
        # Corresponds to the JSON property `nonSeasonalOrder`
        # @return [Google::Apis::BigqueryV2::ArimaOrder]
        attr_accessor non_seasonal_order: untyped

        # Seasonal periods. Repeated because multiple periods are supported for one time
        # series.
        # Corresponds to the JSON property `seasonalPeriods`
        # @return [Array<String>]
        attr_accessor seasonal_periods: untyped

        # The time_series_id value for this time series. It will be one of the unique
        # values from the time_series_id_column specified during ARIMA model training.
        # Only present when time_series_id_column training option was used.
        # Corresponds to the JSON property `timeSeriesId`
        # @return [String]
        attr_accessor time_series_id: untyped

        # The tuple of time_series_ids identifying this time series. It will be one of
        # the unique tuples of values present in the time_series_id_columns specified
        # during ARIMA model training. Only present when time_series_id_columns training
        # option was used and the order of values here are same as the order of
        # time_series_id_columns.
        # Corresponds to the JSON property `timeSeriesIds`
        # @return [Array<String>]
        attr_accessor time_series_ids: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Arima order, can be used for both non-seasonal and seasonal parts.
      class ArimaOrder
        @d: untyped

        @p: untyped

        @q: untyped

        include Google::Apis::Core::Hashable

        # Order of the differencing part.
        # Corresponds to the JSON property `d`
        # @return [Fixnum]
        attr_accessor d: untyped

        # Order of the autoregressive part.
        # Corresponds to the JSON property `p`
        # @return [Fixnum]
        attr_accessor p: untyped

        # Order of the moving-average part.
        # Corresponds to the JSON property `q`
        # @return [Fixnum]
        attr_accessor q: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # (Auto-)arima fitting result. Wrap everything in ArimaResult for easier
      # refactoring if we want to use model-specific iteration results.
      class ArimaResult
        @arima_model_info: untyped

        @seasonal_periods: untyped

        include Google::Apis::Core::Hashable

        # This message is repeated because there are multiple arima models fitted in
        # auto-arima. For non-auto-arima model, its size is one.
        # Corresponds to the JSON property `arimaModelInfo`
        # @return [Array<Google::Apis::BigqueryV2::ArimaModelInfo>]
        attr_accessor arima_model_info: untyped

        # Seasonal periods. Repeated because multiple periods are supported for one time
        # series.
        # Corresponds to the JSON property `seasonalPeriods`
        # @return [Array<String>]
        attr_accessor seasonal_periods: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Model evaluation metrics for a single ARIMA forecasting model.
      class ArimaSingleModelForecastingMetrics
        @arima_fitting_metrics: untyped

        @has_drift: untyped

        @has_holiday_effect: untyped

        @has_spikes_and_dips: untyped

        @has_step_changes: untyped

        @non_seasonal_order: untyped

        @seasonal_periods: untyped

        @time_series_id: untyped

        @time_series_ids: untyped

        include Google::Apis::Core::Hashable

        # ARIMA model fitting metrics.
        # Corresponds to the JSON property `arimaFittingMetrics`
        # @return [Google::Apis::BigqueryV2::ArimaFittingMetrics]
        attr_accessor arima_fitting_metrics: untyped

        # Is arima model fitted with drift or not. It is always false when d is not 1.
        # Corresponds to the JSON property `hasDrift`
        # @return [Boolean]
        attr_accessor has_drift: untyped

        alias has_drift? has_drift

        # If true, holiday_effect is a part of time series decomposition result.
        # Corresponds to the JSON property `hasHolidayEffect`
        # @return [Boolean]
        attr_accessor has_holiday_effect: untyped

        alias has_holiday_effect? has_holiday_effect

        # If true, spikes_and_dips is a part of time series decomposition result.
        # Corresponds to the JSON property `hasSpikesAndDips`
        # @return [Boolean]
        attr_accessor has_spikes_and_dips: untyped

        alias has_spikes_and_dips? has_spikes_and_dips

        # If true, step_changes is a part of time series decomposition result.
        # Corresponds to the JSON property `hasStepChanges`
        # @return [Boolean]
        attr_accessor has_step_changes: untyped

        alias has_step_changes? has_step_changes

        # Arima order, can be used for both non-seasonal and seasonal parts.
        # Corresponds to the JSON property `nonSeasonalOrder`
        # @return [Google::Apis::BigqueryV2::ArimaOrder]
        attr_accessor non_seasonal_order: untyped

        # Seasonal periods. Repeated because multiple periods are supported for one time
        # series.
        # Corresponds to the JSON property `seasonalPeriods`
        # @return [Array<String>]
        attr_accessor seasonal_periods: untyped

        # The time_series_id value for this time series. It will be one of the unique
        # values from the time_series_id_column specified during ARIMA model training.
        # Only present when time_series_id_column training option was used.
        # Corresponds to the JSON property `timeSeriesId`
        # @return [String]
        attr_accessor time_series_id: untyped

        # The tuple of time_series_ids identifying this time series. It will be one of
        # the unique tuples of values present in the time_series_id_columns specified
        # during ARIMA model training. Only present when time_series_id_columns training
        # option was used and the order of values here are same as the order of
        # time_series_id_columns.
        # Corresponds to the JSON property `timeSeriesIds`
        # @return [Array<String>]
        attr_accessor time_series_ids: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Specifies the audit configuration for a service. The configuration determines
      # which permission types are logged, and what identities, if any, are exempted
      # from logging. An AuditConfig must have one or more AuditLogConfigs. If there
      # are AuditConfigs for both `allServices` and a specific service, the union of
      # the two AuditConfigs is used for that service: the log_types specified in each
      # AuditConfig are enabled, and the exempted_members in each AuditLogConfig are
      # exempted. Example Policy with multiple AuditConfigs: ` "audit_configs": [ ` "
      # service": "allServices", "audit_log_configs": [ ` "log_type": "DATA_READ", "
      # exempted_members": [ "user:jose@example.com" ] `, ` "log_type": "DATA_WRITE" `,
      # ` "log_type": "ADMIN_READ" ` ] `, ` "service": "sampleservice.googleapis.com",
      # "audit_log_configs": [ ` "log_type": "DATA_READ" `, ` "log_type": "DATA_WRITE"
      # , "exempted_members": [ "user:aliya@example.com" ] ` ] ` ] ` For sampleservice,
      # this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also
      # exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com`
      # from DATA_WRITE logging.
      class AuditConfig
        @audit_log_configs: untyped

        @service: untyped

        include Google::Apis::Core::Hashable

        # The configuration for logging of each type of permission.
        # Corresponds to the JSON property `auditLogConfigs`
        # @return [Array<Google::Apis::BigqueryV2::AuditLogConfig>]
        attr_accessor audit_log_configs: untyped

        # Specifies a service that will be enabled for audit logging. For example, `
        # storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special
        # value that covers all services.
        # Corresponds to the JSON property `service`
        # @return [String]
        attr_accessor service: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Provides the configuration for logging a type of permissions. Example: ` "
      # audit_log_configs": [ ` "log_type": "DATA_READ", "exempted_members": [ "user:
      # jose@example.com" ] `, ` "log_type": "DATA_WRITE" ` ] ` This enables '
      # DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from
      # DATA_READ logging.
      class AuditLogConfig
        @exempted_members: untyped

        @log_type: untyped

        include Google::Apis::Core::Hashable

        # Specifies the identities that do not cause logging for this type of permission.
        # Follows the same format of Binding.members.
        # Corresponds to the JSON property `exemptedMembers`
        # @return [Array<String>]
        attr_accessor exempted_members: untyped

        # The log type that this config enables.
        # Corresponds to the JSON property `logType`
        # @return [String]
        attr_accessor log_type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Options for external data sources.
      class AvroOptions
        @use_avro_logical_types: untyped

        include Google::Apis::Core::Hashable

        # Optional. If sourceFormat is set to "AVRO", indicates whether to interpret
        # logical types as the corresponding BigQuery data type (for example, TIMESTAMP),
        # instead of using the raw type (for example, INTEGER).
        # Corresponds to the JSON property `useAvroLogicalTypes`
        # @return [Boolean]
        attr_accessor use_avro_logical_types: untyped

        alias use_avro_logical_types? use_avro_logical_types

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Reason why BI Engine didn't accelerate the query (or sub-query).
      class BiEngineReason
        @code: untyped

        @message: untyped

        include Google::Apis::Core::Hashable

        # Output only. High-level BI Engine reason for partial or disabled acceleration
        # Corresponds to the JSON property `code`
        # @return [String]
        attr_accessor code: untyped

        # Output only. Free form human-readable reason for partial or disabled
        # acceleration.
        # Corresponds to the JSON property `message`
        # @return [String]
        attr_accessor message: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for a BI Engine specific query. Populated as part of JobStatistics2
      class BiEngineStatistics
        @acceleration_mode: untyped

        @bi_engine_mode: untyped

        @bi_engine_reasons: untyped

        include Google::Apis::Core::Hashable

        # Output only. Specifies which mode of BI Engine acceleration was performed (if
        # any).
        # Corresponds to the JSON property `accelerationMode`
        # @return [String]
        attr_accessor acceleration_mode: untyped

        # Output only. Specifies which mode of BI Engine acceleration was performed (if
        # any).
        # Corresponds to the JSON property `biEngineMode`
        # @return [String]
        attr_accessor bi_engine_mode: untyped

        # In case of DISABLED or PARTIAL bi_engine_mode, these contain the explanatory
        # reasons as to why BI Engine could not accelerate. In case the full query was
        # accelerated, this field is not populated.
        # Corresponds to the JSON property `biEngineReasons`
        # @return [Array<Google::Apis::BigqueryV2::BiEngineReason>]
        attr_accessor bi_engine_reasons: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Configuration for BigLake managed tables.
      class BigLakeConfiguration
        @connection_id: untyped

        @file_format: untyped

        @storage_uri: untyped

        @table_format: untyped

        include Google::Apis::Core::Hashable

        # Required. The connection specifying the credentials to be used to read and
        # write to external storage, such as Cloud Storage. The connection_id can have
        # the form ``project`.`location`.`connection_id`` or `projects/`project`/
        # locations/`location`/connections/`connection_id`".
        # Corresponds to the JSON property `connectionId`
        # @return [String]
        attr_accessor connection_id: untyped

        # Required. The file format the table data is stored in.
        # Corresponds to the JSON property `fileFormat`
        # @return [String]
        attr_accessor file_format: untyped

        # Required. The fully qualified location prefix of the external folder where
        # table data is stored. The '*' wildcard character is not allowed. The URI
        # should be in the format `gs://bucket/path_to_table/`
        # Corresponds to the JSON property `storageUri`
        # @return [String]
        attr_accessor storage_uri: untyped

        # Required. The table format the metadata only snapshots are stored in.
        # Corresponds to the JSON property `tableFormat`
        # @return [String]
        attr_accessor table_format: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class BigQueryModelTraining
        @current_iteration: untyped

        @expected_total_iterations: untyped

        include Google::Apis::Core::Hashable

        # Deprecated.
        # Corresponds to the JSON property `currentIteration`
        # @return [Fixnum]
        attr_accessor current_iteration: untyped

        # Deprecated.
        # Corresponds to the JSON property `expectedTotalIterations`
        # @return [Fixnum]
        attr_accessor expected_total_iterations: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Information related to a Bigtable column.
      class BigtableColumn
        @encoding: untyped

        @field_name: untyped

        @only_read_latest: untyped

        @qualifier_encoded: untyped

        @qualifier_string: untyped

        @type: untyped

        include Google::Apis::Core::Hashable

        # Optional. The encoding of the values when the type is not STRING. Acceptable
        # encoding values are: TEXT - indicates values are alphanumeric text strings.
        # BINARY - indicates values are encoded using HBase Bytes.toBytes family of
        # functions. 'encoding' can also be set at the column family level. However, the
        # setting at this level takes precedence if 'encoding' is set at both levels.
        # Corresponds to the JSON property `encoding`
        # @return [String]
        attr_accessor encoding: untyped

        # Optional. If the qualifier is not a valid BigQuery field identifier i.e. does
        # not match a-zA-Z*, a valid identifier must be provided as the column field
        # name and is used as field name in queries.
        # Corresponds to the JSON property `fieldName`
        # @return [String]
        attr_accessor field_name: untyped

        # Optional. If this is set, only the latest version of value in this column are
        # exposed. 'onlyReadLatest' can also be set at the column family level. However,
        # the setting at this level takes precedence if 'onlyReadLatest' is set at both
        # levels.
        # Corresponds to the JSON property `onlyReadLatest`
        # @return [Boolean]
        attr_accessor only_read_latest: untyped

        alias only_read_latest? only_read_latest

        # [Required] Qualifier of the column. Columns in the parent column family that
        # has this exact qualifier are exposed as `.` field. If the qualifier is valid
        # UTF-8 string, it can be specified in the qualifier_string field. Otherwise, a
        # base-64 encoded value must be set to qualifier_encoded. The column field name
        # is the same as the column qualifier. However, if the qualifier is not a valid
        # BigQuery field identifier i.e. does not match a-zA-Z*, a valid identifier must
        # be provided as field_name.
        # Corresponds to the JSON property `qualifierEncoded`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor qualifier_encoded: untyped

        # Qualifier string.
        # Corresponds to the JSON property `qualifierString`
        # @return [String]
        attr_accessor qualifier_string: untyped

        # Optional. The type to convert the value in cells of this column. The values
        # are expected to be encoded using HBase Bytes.toBytes function when using the
        # BINARY encoding value. Following BigQuery types are allowed (case-sensitive): *
        # BYTES * STRING * INTEGER * FLOAT * BOOLEAN * JSON Default type is BYTES. '
        # type' can also be set at the column family level. However, the setting at this
        # level takes precedence if 'type' is set at both levels.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Information related to a Bigtable column family.
      class BigtableColumnFamily
        @columns: untyped

        @encoding: untyped

        @family_id: untyped

        @only_read_latest: untyped

        @type: untyped

        include Google::Apis::Core::Hashable

        # Optional. Lists of columns that should be exposed as individual fields as
        # opposed to a list of (column name, value) pairs. All columns whose qualifier
        # matches a qualifier in this list can be accessed as `.`. Other columns can be
        # accessed as a list through the `.Column` field.
        # Corresponds to the JSON property `columns`
        # @return [Array<Google::Apis::BigqueryV2::BigtableColumn>]
        attr_accessor columns: untyped

        # Optional. The encoding of the values when the type is not STRING. Acceptable
        # encoding values are: TEXT - indicates values are alphanumeric text strings.
        # BINARY - indicates values are encoded using HBase Bytes.toBytes family of
        # functions. This can be overridden for a specific column by listing that column
        # in 'columns' and specifying an encoding for it.
        # Corresponds to the JSON property `encoding`
        # @return [String]
        attr_accessor encoding: untyped

        # Identifier of the column family.
        # Corresponds to the JSON property `familyId`
        # @return [String]
        attr_accessor family_id: untyped

        # Optional. If this is set only the latest version of value are exposed for all
        # columns in this column family. This can be overridden for a specific column by
        # listing that column in 'columns' and specifying a different setting for that
        # column.
        # Corresponds to the JSON property `onlyReadLatest`
        # @return [Boolean]
        attr_accessor only_read_latest: untyped

        alias only_read_latest? only_read_latest

        # Optional. The type to convert the value in cells of this column family. The
        # values are expected to be encoded using HBase Bytes.toBytes function when
        # using the BINARY encoding value. Following BigQuery types are allowed (case-
        # sensitive): * BYTES * STRING * INTEGER * FLOAT * BOOLEAN * JSON Default type
        # is BYTES. This can be overridden for a specific column by listing that column
        # in 'columns' and specifying a type for it.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Options specific to Google Cloud Bigtable data sources.
      class BigtableOptions
        @column_families: untyped

        @ignore_unspecified_column_families: untyped

        @output_column_families_as_json: untyped

        @read_rowkey_as_string: untyped

        include Google::Apis::Core::Hashable

        # Optional. List of column families to expose in the table schema along with
        # their types. This list restricts the column families that can be referenced in
        # queries and specifies their value types. You can use this list to do type
        # conversions - see the 'type' field for more details. If you leave this list
        # empty, all column families are present in the table schema and their values
        # are read as BYTES. During a query only the column families referenced in that
        # query are read from Bigtable.
        # Corresponds to the JSON property `columnFamilies`
        # @return [Array<Google::Apis::BigqueryV2::BigtableColumnFamily>]
        attr_accessor column_families: untyped

        # Optional. If field is true, then the column families that are not specified in
        # columnFamilies list are not exposed in the table schema. Otherwise, they are
        # read with BYTES type values. The default value is false.
        # Corresponds to the JSON property `ignoreUnspecifiedColumnFamilies`
        # @return [Boolean]
        attr_accessor ignore_unspecified_column_families: untyped

        alias ignore_unspecified_column_families? ignore_unspecified_column_families

        # Optional. If field is true, then each column family will be read as a single
        # JSON column. Otherwise they are read as a repeated cell structure containing
        # timestamp/value tuples. The default value is false.
        # Corresponds to the JSON property `outputColumnFamiliesAsJson`
        # @return [Boolean]
        attr_accessor output_column_families_as_json: untyped

        alias output_column_families_as_json? output_column_families_as_json

        # Optional. If field is true, then the rowkey column families will be read and
        # converted to string. Otherwise they are read with BYTES type values and users
        # need to manually cast them with CAST if necessary. The default value is false.
        # Corresponds to the JSON property `readRowkeyAsString`
        # @return [Boolean]
        attr_accessor read_rowkey_as_string: untyped

        alias read_rowkey_as_string? read_rowkey_as_string

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Evaluation metrics for binary classification/classifier models.
      class BinaryClassificationMetrics
        @aggregate_classification_metrics: untyped

        @binary_confusion_matrix_list: untyped

        @negative_label: untyped

        @positive_label: untyped

        include Google::Apis::Core::Hashable

        # Aggregate metrics for classification/classifier models. For multi-class models,
        # the metrics are either macro-averaged or micro-averaged. When macro-averaged,
        # the metrics are calculated for each label and then an unweighted average is
        # taken of those values. When micro-averaged, the metric is calculated globally
        # by counting the total number of correctly predicted rows.
        # Corresponds to the JSON property `aggregateClassificationMetrics`
        # @return [Google::Apis::BigqueryV2::AggregateClassificationMetrics]
        attr_accessor aggregate_classification_metrics: untyped

        # Binary confusion matrix at multiple thresholds.
        # Corresponds to the JSON property `binaryConfusionMatrixList`
        # @return [Array<Google::Apis::BigqueryV2::BinaryConfusionMatrix>]
        attr_accessor binary_confusion_matrix_list: untyped

        # Label representing the negative class.
        # Corresponds to the JSON property `negativeLabel`
        # @return [String]
        attr_accessor negative_label: untyped

        # Label representing the positive class.
        # Corresponds to the JSON property `positiveLabel`
        # @return [String]
        attr_accessor positive_label: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Confusion matrix for binary classification models.
      class BinaryConfusionMatrix
        @accuracy: untyped

        @f1_score: untyped

        @false_negatives: untyped

        @false_positives: untyped

        @positive_class_threshold: untyped

        @precision: untyped

        @recall: untyped

        @true_negatives: untyped

        @true_positives: untyped

        include Google::Apis::Core::Hashable

        # The fraction of predictions given the correct label.
        # Corresponds to the JSON property `accuracy`
        # @return [Float]
        attr_accessor accuracy: untyped

        # The equally weighted average of recall and precision.
        # Corresponds to the JSON property `f1Score`
        # @return [Float]
        attr_accessor f1_score: untyped

        # Number of false samples predicted as false.
        # Corresponds to the JSON property `falseNegatives`
        # @return [Fixnum]
        attr_accessor false_negatives: untyped

        # Number of false samples predicted as true.
        # Corresponds to the JSON property `falsePositives`
        # @return [Fixnum]
        attr_accessor false_positives: untyped

        # Threshold value used when computing each of the following metric.
        # Corresponds to the JSON property `positiveClassThreshold`
        # @return [Float]
        attr_accessor positive_class_threshold: untyped

        # The fraction of actual positive predictions that had positive actual labels.
        # Corresponds to the JSON property `precision`
        # @return [Float]
        attr_accessor precision: untyped

        # The fraction of actual positive labels that were given a positive prediction.
        # Corresponds to the JSON property `recall`
        # @return [Float]
        attr_accessor recall: untyped

        # Number of true samples predicted as false.
        # Corresponds to the JSON property `trueNegatives`
        # @return [Fixnum]
        attr_accessor true_negatives: untyped

        # Number of true samples predicted as true.
        # Corresponds to the JSON property `truePositives`
        # @return [Fixnum]
        attr_accessor true_positives: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Associates `members`, or principals, with a `role`.
      class Binding
        @condition: untyped

        @members: untyped

        @role: untyped

        include Google::Apis::Core::Hashable

        # Represents a textual expression in the Common Expression Language (CEL) syntax.
        # CEL is a C-like expression language. The syntax and semantics of CEL are
        # documented at https://github.com/google/cel-spec. Example (Comparison): title:
        # "Summary size limit" description: "Determines if a summary is less than 100
        # chars" expression: "document.summary.size() < 100" Example (Equality): title: "
        # Requestor is owner" description: "Determines if requestor is the document
        # owner" expression: "document.owner == request.auth.claims.email" Example (
        # Logic): title: "Public documents" description: "Determine whether the document
        # should be publicly visible" expression: "document.type != 'private' &&
        # document.type != 'internal'" Example (Data Manipulation): title: "Notification
        # string" description: "Create a notification string with a timestamp."
        # expression: "'New message received at ' + string(document.create_time)" The
        # exact variables and functions that may be referenced within an expression are
        # determined by the service that evaluates it. See the service documentation for
        # additional information.
        # Corresponds to the JSON property `condition`
        # @return [Google::Apis::BigqueryV2::Expr]
        attr_accessor condition: untyped

        # Specifies the principals requesting access for a Google Cloud resource. `
        # members` can have the following values: * `allUsers`: A special identifier
        # that represents anyone who is on the internet; with or without a Google
        # account. * `allAuthenticatedUsers`: A special identifier that represents
        # anyone who is authenticated with a Google account or a service account. Does
        # not include identities that come from external identity providers (IdPs)
        # through identity federation. * `user:`emailid``: An email address that
        # represents a specific Google account. For example, `alice@example.com` . * `
        # serviceAccount:`emailid``: An email address that represents a Google service
        # account. For example, `my-other-app@appspot.gserviceaccount.com`. * `
        # serviceAccount:`projectid`.svc.id.goog[`namespace`/`kubernetes-sa`]`: An
        # identifier for a [Kubernetes service account](https://cloud.google.com/
        # kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-
        # project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:`emailid``: An
        # email address that represents a Google group. For example, `admins@example.com`
        # . * `domain:`domain``: The G Suite domain (primary) that represents all the
        # users of that domain. For example, `google.com` or `example.com`. * `principal:
        # //iam.googleapis.com/locations/global/workforcePools/`pool_id`/subject/`
        # subject_attribute_value``: A single identity in a workforce identity pool. * `
        # principalSet://iam.googleapis.com/locations/global/workforcePools/`pool_id`/
        # group/`group_id``: All workforce identities in a group. * `principalSet://iam.
        # googleapis.com/locations/global/workforcePools/`pool_id`/attribute.`
        # attribute_name`/`attribute_value``: All workforce identities with a specific
        # attribute value. * `principalSet://iam.googleapis.com/locations/global/
        # workforcePools/`pool_id`/*`: All identities in a workforce identity pool. * `
        # principal://iam.googleapis.com/projects/`project_number`/locations/global/
        # workloadIdentityPools/`pool_id`/subject/`subject_attribute_value``: A single
        # identity in a workload identity pool. * `principalSet://iam.googleapis.com/
        # projects/`project_number`/locations/global/workloadIdentityPools/`pool_id`/
        # group/`group_id``: A workload identity pool group. * `principalSet://iam.
        # googleapis.com/projects/`project_number`/locations/global/
        # workloadIdentityPools/`pool_id`/attribute.`attribute_name`/`attribute_value``:
        # All identities in a workload identity pool with a certain attribute. * `
        # principalSet://iam.googleapis.com/projects/`project_number`/locations/global/
        # workloadIdentityPools/`pool_id`/*`: All identities in a workload identity pool.
        # * `deleted:user:`emailid`?uid=`uniqueid``: An email address (plus unique
        # identifier) representing a user that has been recently deleted. For example, `
        # alice@example.com?uid=123456789012345678901`. If the user is recovered, this
        # value reverts to `user:`emailid`` and the recovered user retains the role in
        # the binding. * `deleted:serviceAccount:`emailid`?uid=`uniqueid``: An email
        # address (plus unique identifier) representing a service account that has been
        # recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=
        # 123456789012345678901`. If the service account is undeleted, this value
        # reverts to `serviceAccount:`emailid`` and the undeleted service account
        # retains the role in the binding. * `deleted:group:`emailid`?uid=`uniqueid``:
        # An email address (plus unique identifier) representing a Google group that has
        # been recently deleted. For example, `admins@example.com?uid=
        # 123456789012345678901`. If the group is recovered, this value reverts to `
        # group:`emailid`` and the recovered group retains the role in the binding. * `
        # deleted:principal://iam.googleapis.com/locations/global/workforcePools/`
        # pool_id`/subject/`subject_attribute_value``: Deleted single identity in a
        # workforce identity pool. For example, `deleted:principal://iam.googleapis.com/
        # locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
        # Corresponds to the JSON property `members`
        # @return [Array<String>]
        attr_accessor members: untyped

        # Role that is assigned to the list of `members`, or principals. For example, `
        # roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM
        # roles and permissions, see the [IAM documentation](https://cloud.google.com/
        # iam/docs/roles-overview). For a list of the available pre-defined roles, see [
        # here](https://cloud.google.com/iam/docs/understanding-roles).
        # Corresponds to the JSON property `role`
        # @return [String]
        attr_accessor role: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class BqmlIterationResult
        @duration_ms: untyped

        @eval_loss: untyped

        @index: untyped

        @learn_rate: untyped

        @training_loss: untyped

        include Google::Apis::Core::Hashable

        # Deprecated.
        # Corresponds to the JSON property `durationMs`
        # @return [Fixnum]
        attr_accessor duration_ms: untyped

        # Deprecated.
        # Corresponds to the JSON property `evalLoss`
        # @return [Float]
        attr_accessor eval_loss: untyped

        # Deprecated.
        # Corresponds to the JSON property `index`
        # @return [Fixnum]
        attr_accessor index: untyped

        # Deprecated.
        # Corresponds to the JSON property `learnRate`
        # @return [Float]
        attr_accessor learn_rate: untyped

        # Deprecated.
        # Corresponds to the JSON property `trainingLoss`
        # @return [Float]
        attr_accessor training_loss: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class BqmlTrainingRun
        @iteration_results: untyped

        @start_time: untyped

        @state: untyped

        @training_options: untyped

        include Google::Apis::Core::Hashable

        # Deprecated.
        # Corresponds to the JSON property `iterationResults`
        # @return [Array<Google::Apis::BigqueryV2::BqmlIterationResult>]
        attr_accessor iteration_results: untyped

        # Deprecated.
        # Corresponds to the JSON property `startTime`
        # @return [DateTime]
        attr_accessor start_time: untyped

        # Deprecated.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor state: untyped

        # Deprecated.
        # Corresponds to the JSON property `trainingOptions`
        # @return [Google::Apis::BigqueryV2::BqmlTrainingRun::TrainingOptions]
        attr_accessor training_options: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # Deprecated.
        class TrainingOptions
          @early_stop: untyped

          @l1_reg: untyped

          @l2_reg: untyped

          @learn_rate: untyped

          @learn_rate_strategy: untyped

          @line_search_init_learn_rate: untyped

          @max_iteration: untyped

          @min_rel_progress: untyped

          @warm_start: untyped

          include Google::Apis::Core::Hashable

          #
          # Corresponds to the JSON property `earlyStop`
          # @return [Boolean]
          attr_accessor early_stop: untyped

          alias early_stop? early_stop

          #
          # Corresponds to the JSON property `l1Reg`
          # @return [Float]
          attr_accessor l1_reg: untyped

          #
          # Corresponds to the JSON property `l2Reg`
          # @return [Float]
          attr_accessor l2_reg: untyped

          #
          # Corresponds to the JSON property `learnRate`
          # @return [Float]
          attr_accessor learn_rate: untyped

          #
          # Corresponds to the JSON property `learnRateStrategy`
          # @return [String]
          attr_accessor learn_rate_strategy: untyped

          #
          # Corresponds to the JSON property `lineSearchInitLearnRate`
          # @return [Float]
          attr_accessor line_search_init_learn_rate: untyped

          #
          # Corresponds to the JSON property `maxIteration`
          # @return [Fixnum]
          attr_accessor max_iteration: untyped

          #
          # Corresponds to the JSON property `minRelProgress`
          # @return [Float]
          attr_accessor min_rel_progress: untyped

          #
          # Corresponds to the JSON property `warmStart`
          # @return [Boolean]
          attr_accessor warm_start: untyped

          alias warm_start? warm_start

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # Representative value of a categorical feature.
      class CategoricalValue
        @category_counts: untyped

        include Google::Apis::Core::Hashable

        # Counts of all categories for the categorical feature. If there are more than
        # ten categories, we return top ten (by count) and return one more CategoryCount
        # with category "_OTHER_" and count as aggregate counts of remaining categories.
        # Corresponds to the JSON property `categoryCounts`
        # @return [Array<Google::Apis::BigqueryV2::CategoryCount>]
        attr_accessor category_counts: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Represents the count of a single category within the cluster.
      class CategoryCount
        @category: untyped

        @count: untyped

        include Google::Apis::Core::Hashable

        # The name of category.
        # Corresponds to the JSON property `category`
        # @return [String]
        attr_accessor category: untyped

        # The count of training samples matching the category within the cluster.
        # Corresponds to the JSON property `count`
        # @return [Fixnum]
        attr_accessor count: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Information about base table and clone time of a table clone.
      class CloneDefinition
        @base_table_reference: untyped

        @clone_time: untyped

        include Google::Apis::Core::Hashable

        # Required. Reference describing the ID of the table that was cloned.
        # Corresponds to the JSON property `baseTableReference`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor base_table_reference: untyped

        # Required. The time at which the base table was cloned. This value is reported
        # in the JSON response using RFC3339 format.
        # Corresponds to the JSON property `cloneTime`
        # @return [DateTime]
        attr_accessor clone_time: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Message containing the information about one cluster.
      class Cluster
        @centroid_id: untyped

        @count: untyped

        @feature_values: untyped

        include Google::Apis::Core::Hashable

        # Centroid id.
        # Corresponds to the JSON property `centroidId`
        # @return [Fixnum]
        attr_accessor centroid_id: untyped

        # Count of training data rows that were assigned to this cluster.
        # Corresponds to the JSON property `count`
        # @return [Fixnum]
        attr_accessor count: untyped

        # Values of highly variant features for this cluster.
        # Corresponds to the JSON property `featureValues`
        # @return [Array<Google::Apis::BigqueryV2::FeatureValue>]
        attr_accessor feature_values: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Information about a single cluster for clustering model.
      class ClusterInfo
        @centroid_id: untyped

        @cluster_radius: untyped

        @cluster_size: untyped

        include Google::Apis::Core::Hashable

        # Centroid id.
        # Corresponds to the JSON property `centroidId`
        # @return [Fixnum]
        attr_accessor centroid_id: untyped

        # Cluster radius, the average distance from centroid to each point assigned to
        # the cluster.
        # Corresponds to the JSON property `clusterRadius`
        # @return [Float]
        attr_accessor cluster_radius: untyped

        # Cluster size, the total number of points assigned to the cluster.
        # Corresponds to the JSON property `clusterSize`
        # @return [Fixnum]
        attr_accessor cluster_size: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Configures table clustering.
      class Clustering
        @fields: untyped

        include Google::Apis::Core::Hashable

        # One or more fields on which data should be clustered. Only top-level, non-
        # repeated, simple-type fields are supported. The ordering of the clustering
        # fields should be prioritized from most to least important for filtering
        # purposes. Additional information on limitations can be found here: https://
        # cloud.google.com/bigquery/docs/creating-clustered-tables#limitations
        # Corresponds to the JSON property `fields`
        # @return [Array<String>]
        attr_accessor fields: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Evaluation metrics for clustering models.
      class ClusteringMetrics
        @clusters: untyped

        @davies_bouldin_index: untyped

        @mean_squared_distance: untyped

        include Google::Apis::Core::Hashable

        # Information for all clusters.
        # Corresponds to the JSON property `clusters`
        # @return [Array<Google::Apis::BigqueryV2::Cluster>]
        attr_accessor clusters: untyped

        # Davies-Bouldin index.
        # Corresponds to the JSON property `daviesBouldinIndex`
        # @return [Float]
        attr_accessor davies_bouldin_index: untyped

        # Mean of squared distances between each sample to its cluster centroid.
        # Corresponds to the JSON property `meanSquaredDistance`
        # @return [Float]
        attr_accessor mean_squared_distance: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Confusion matrix for multi-class classification models.
      class ConfusionMatrix
        @confidence_threshold: untyped

        @rows: untyped

        include Google::Apis::Core::Hashable

        # Confidence threshold used when computing the entries of the confusion matrix.
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor confidence_threshold: untyped

        # One row per actual label.
        # Corresponds to the JSON property `rows`
        # @return [Array<Google::Apis::BigqueryV2::Row>]
        attr_accessor rows: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # A connection-level property to customize query behavior. Under JDBC, these
      # correspond directly to connection properties passed to the DriverManager.
      # Under ODBC, these correspond to properties in the connection string. Currently
      # supported connection properties: * **dataset_project_id**: represents the
      # default project for datasets that are used in the query. Setting the system
      # variable `@@dataset_project_id` achieves the same behavior. For more
      # information about system variables, see: https://cloud.google.com/bigquery/
      # docs/reference/system-variables * **time_zone**: represents the default
      # timezone used to run the query. * **session_id**: associates the query with a
      # given session. * **query_label**: associates the query with a given job label.
      # If set, all subsequent queries in a script or session will have this label.
      # For the format in which a you can specify a query label, see labels in the
      # JobConfiguration resource type: https://cloud.google.com/bigquery/docs/
      # reference/rest/v2/Job#jobconfiguration * **service_account**: indicates the
      # service account to use to run a continuous query. If set, the query job uses
      # the service account to access Google Cloud resources. Service account access
      # is bounded by the IAM permissions that you have granted to the service account.
      # Additional properties are allowed, but ignored. Specifying multiple
      # connection properties with the same key returns an error.
      class ConnectionProperty
        @key: untyped

        @value: untyped

        include Google::Apis::Core::Hashable

        # The key of the property to set.
        # Corresponds to the JSON property `key`
        # @return [String]
        attr_accessor key: untyped

        # The value of the property to set.
        # Corresponds to the JSON property `value`
        # @return [String]
        attr_accessor value: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Information related to a CSV data source.
      class CsvOptions
        @allow_jagged_rows: untyped

        @allow_quoted_newlines: untyped

        @encoding: untyped

        @field_delimiter: untyped

        @null_marker: untyped

        @preserve_ascii_control_characters: untyped

        @quote: untyped

        @skip_leading_rows: untyped

        include Google::Apis::Core::Hashable

        # Optional. Indicates if BigQuery should accept rows that are missing trailing
        # optional columns. If true, BigQuery treats missing trailing columns as null
        # values. If false, records with missing trailing columns are treated as bad
        # records, and if there are too many bad records, an invalid error is returned
        # in the job result. The default value is false.
        # Corresponds to the JSON property `allowJaggedRows`
        # @return [Boolean]
        attr_accessor allow_jagged_rows: untyped

        alias allow_jagged_rows? allow_jagged_rows

        # Optional. Indicates if BigQuery should allow quoted data sections that contain
        # newline characters in a CSV file. The default value is false.
        # Corresponds to the JSON property `allowQuotedNewlines`
        # @return [Boolean]
        attr_accessor allow_quoted_newlines: untyped

        alias allow_quoted_newlines? allow_quoted_newlines

        # Optional. The character encoding of the data. The supported values are UTF-8,
        # ISO-8859-1, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is
        # UTF-8. BigQuery decodes the data after the raw, binary data has been split
        # using the values of the quote and fieldDelimiter properties.
        # Corresponds to the JSON property `encoding`
        # @return [String]
        attr_accessor encoding: untyped

        # Optional. The separator character for fields in a CSV file. The separator is
        # interpreted as a single byte. For files encoded in ISO-8859-1, any single
        # character can be used as a separator. For files encoded in UTF-8, characters
        # represented in decimal range 1-127 (U+0001-U+007F) can be used without any
        # modification. UTF-8 characters encoded with multiple bytes (i.e. U+0080 and
        # above) will have only the first byte used for separating fields. The remaining
        # bytes will be treated as a part of the field. BigQuery also supports the
        # escape sequence "\t" (U+0009) to specify a tab separator. The default value is
        # comma (",", U+002C).
        # Corresponds to the JSON property `fieldDelimiter`
        # @return [String]
        attr_accessor field_delimiter: untyped

        # Optional. Specifies a string that represents a null value in a CSV file. For
        # example, if you specify "\N", BigQuery interprets "\N" as a null value when
        # querying a CSV file. The default value is the empty string. If you set this
        # property to a custom value, BigQuery throws an error if an empty string is
        # present for all data types except for STRING and BYTE. For STRING and BYTE
        # columns, BigQuery interprets the empty string as an empty value.
        # Corresponds to the JSON property `nullMarker`
        # @return [String]
        attr_accessor null_marker: untyped

        # Optional. Indicates if the embedded ASCII control characters (the first 32
        # characters in the ASCII-table, from '\x00' to '\x1F') are preserved.
        # Corresponds to the JSON property `preserveAsciiControlCharacters`
        # @return [Boolean]
        attr_accessor preserve_ascii_control_characters: untyped

        alias preserve_ascii_control_characters? preserve_ascii_control_characters

        # Optional. The value that is used to quote data sections in a CSV file.
        # BigQuery converts the string to ISO-8859-1 encoding, and then uses the first
        # byte of the encoded string to split the data in its raw, binary state. The
        # default value is a double-quote ("). If your data does not contain quoted
        # sections, set the property value to an empty string. If your data contains
        # quoted newline characters, you must also set the allowQuotedNewlines property
        # to true. To include the specific quote character within a quoted value,
        # precede it with an additional matching quote character. For example, if you
        # want to escape the default character ' " ', use ' "" '.
        # Corresponds to the JSON property `quote`
        # @return [String]
        attr_accessor quote: untyped

        # Optional. The number of rows at the top of a CSV file that BigQuery will skip
        # when reading the data. The default value is 0. This property is useful if you
        # have header rows in the file that should be skipped. When autodetect is on,
        # the behavior is the following: * skipLeadingRows unspecified - Autodetect
        # tries to detect headers in the first row. If they are not detected, the row is
        # read as data. Otherwise data is read starting from the second row. *
        # skipLeadingRows is 0 - Instructs autodetect that there are no headers and data
        # should be read starting from the first row. * skipLeadingRows = N > 0 -
        # Autodetect skips N-1 rows and tries to detect headers in row N. If headers are
        # not detected, row N is just skipped. Otherwise row N is used to extract column
        # names for the detected schema.
        # Corresponds to the JSON property `skipLeadingRows`
        # @return [Fixnum]
        attr_accessor skip_leading_rows: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Options for data format adjustments.
      class DataFormatOptions
        @use_int64_timestamp: untyped

        include Google::Apis::Core::Hashable

        # Optional. Output timestamp as usec int64. Default is false.
        # Corresponds to the JSON property `useInt64Timestamp`
        # @return [Boolean]
        attr_accessor use_int64_timestamp: untyped

        alias use_int64_timestamp? use_int64_timestamp

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Statistics for data-masking.
      class DataMaskingStatistics
        @data_masking_applied: untyped

        include Google::Apis::Core::Hashable

        # Whether any accessed data was protected by the data masking.
        # Corresponds to the JSON property `dataMaskingApplied`
        # @return [Boolean]
        attr_accessor data_masking_applied: untyped

        alias data_masking_applied? data_masking_applied

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Data policy option proto, it currently supports name only, will support
      # precedence later.
      class DataPolicyOption
        @name: untyped

        include Google::Apis::Core::Hashable

        # Data policy resource name in the form of projects/project_id/locations/
        # location_id/dataPolicies/data_policy_id.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor name: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Data split result. This contains references to the training and evaluation
      # data tables that were used to train the model.
      class DataSplitResult
        @evaluation_table: untyped

        @test_table: untyped

        @training_table: untyped

        include Google::Apis::Core::Hashable

        # Table reference of the evaluation data after split.
        # Corresponds to the JSON property `evaluationTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor evaluation_table: untyped

        # Table reference of the test data after split.
        # Corresponds to the JSON property `testTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor test_table: untyped

        # Table reference of the training data after split.
        # Corresponds to the JSON property `trainingTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor training_table: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Represents a BigQuery dataset.
      class Dataset
        @access: untyped

        @creation_time: untyped

        @dataset_reference: untyped

        @default_collation: untyped

        @default_encryption_configuration: untyped

        @default_partition_expiration_ms: untyped

        @default_rounding_mode: untyped

        @default_table_expiration_ms: untyped

        @description: untyped

        @etag: untyped

        @external_catalog_dataset_options: untyped

        @external_dataset_reference: untyped

        @friendly_name: untyped

        @id: untyped

        @is_case_insensitive: untyped

        @kind: untyped

        @labels: untyped

        @last_modified_time: untyped

        @linked_dataset_metadata: untyped

        @linked_dataset_source: untyped

        @location: untyped

        @max_time_travel_hours: untyped

        @resource_tags: untyped

        @restrictions: untyped

        @satisfies_pzi: untyped

        @satisfies_pzs: untyped

        @self_link: untyped

        @storage_billing_model: untyped

        @tags: untyped

        @type: untyped

        include Google::Apis::Core::Hashable

        # Optional. An array of objects that define dataset access for one or more
        # entities. You can set this property when inserting or updating a dataset in
        # order to control who is allowed to access the data. If unspecified at dataset
        # creation time, BigQuery adds default dataset access for the following entities:
        # access.specialGroup: projectReaders; access.role: READER; access.specialGroup:
        # projectWriters; access.role: WRITER; access.specialGroup: projectOwners;
        # access.role: OWNER; access.userByEmail: [dataset creator email]; access.role:
        # OWNER; If you patch a dataset, then this field is overwritten by the patched
        # dataset's access field. To add entities, you must supply the entire existing
        # access array in addition to any new entities that you want to add.
        # Corresponds to the JSON property `access`
        # @return [Array<Google::Apis::BigqueryV2::Dataset::Access>]
        attr_accessor access: untyped

        # Output only. The time when this dataset was created, in milliseconds since the
        # epoch.
        # Corresponds to the JSON property `creationTime`
        # @return [Fixnum]
        attr_accessor creation_time: untyped

        # Identifier for a dataset.
        # Corresponds to the JSON property `datasetReference`
        # @return [Google::Apis::BigqueryV2::DatasetReference]
        attr_accessor dataset_reference: untyped

        # Optional. Defines the default collation specification of future tables created
        # in the dataset. If a table is created in this dataset without table-level
        # default collation, then the table inherits the dataset default collation,
        # which is applied to the string fields that do not have explicit collation
        # specified. A change to this field affects only tables created afterwards, and
        # does not alter the existing tables. The following values are supported: * 'und:
        # ci': undetermined locale, case insensitive. * '': empty string. Default to
        # case-sensitive behavior.
        # Corresponds to the JSON property `defaultCollation`
        # @return [String]
        attr_accessor default_collation: untyped

        # Configuration for Cloud KMS encryption settings.
        # Corresponds to the JSON property `defaultEncryptionConfiguration`
        # @return [Google::Apis::BigqueryV2::EncryptionConfiguration]
        attr_accessor default_encryption_configuration: untyped

        # This default partition expiration, expressed in milliseconds. When new time-
        # partitioned tables are created in a dataset where this property is set, the
        # table will inherit this value, propagated as the `TimePartitioning.
        # expirationMs` property on the new table. If you set `TimePartitioning.
        # expirationMs` explicitly when creating a table, the `
        # defaultPartitionExpirationMs` of the containing dataset is ignored. When
        # creating a partitioned table, if `defaultPartitionExpirationMs` is set, the `
        # defaultTableExpirationMs` value is ignored and the table will not be inherit a
        # table expiration deadline.
        # Corresponds to the JSON property `defaultPartitionExpirationMs`
        # @return [Fixnum]
        attr_accessor default_partition_expiration_ms: untyped

        # Optional. Defines the default rounding mode specification of new tables
        # created within this dataset. During table creation, if this field is specified,
        # the table within this dataset will inherit the default rounding mode of the
        # dataset. Setting the default rounding mode on a table overrides this option.
        # Existing tables in the dataset are unaffected. If columns are defined during
        # that table creation, they will immediately inherit the table's default
        # rounding mode, unless otherwise specified.
        # Corresponds to the JSON property `defaultRoundingMode`
        # @return [String]
        attr_accessor default_rounding_mode: untyped

        # Optional. The default lifetime of all tables in the dataset, in milliseconds.
        # The minimum lifetime value is 3600000 milliseconds (one hour). To clear an
        # existing default expiration with a PATCH request, set to 0. Once this property
        # is set, all newly-created tables in the dataset will have an expirationTime
        # property set to the creation time plus the value in this property, and
        # changing the value will only affect new tables, not existing ones. When the
        # expirationTime for a given table is reached, that table will be deleted
        # automatically. If a table's expirationTime is modified or removed before the
        # table expires, or if you provide an explicit expirationTime when creating a
        # table, that value takes precedence over the default expiration time indicated
        # by this property.
        # Corresponds to the JSON property `defaultTableExpirationMs`
        # @return [Fixnum]
        attr_accessor default_table_expiration_ms: untyped

        # Optional. A user-friendly description of the dataset.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor description: untyped

        # Output only. A hash of the resource.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # Options defining open source compatible datasets living in the BigQuery
        # catalog. Contains metadata of open source database, schema or namespace
        # represented by the current dataset.
        # Corresponds to the JSON property `externalCatalogDatasetOptions`
        # @return [Google::Apis::BigqueryV2::ExternalCatalogDatasetOptions]
        attr_accessor external_catalog_dataset_options: untyped

        # Configures the access a dataset defined in an external metadata storage.
        # Corresponds to the JSON property `externalDatasetReference`
        # @return [Google::Apis::BigqueryV2::ExternalDatasetReference]
        attr_accessor external_dataset_reference: untyped

        # Optional. A descriptive name for the dataset.
        # Corresponds to the JSON property `friendlyName`
        # @return [String]
        attr_accessor friendly_name: untyped

        # Output only. The fully-qualified unique name of the dataset in the format
        # projectId:datasetId. The dataset name without the project name is given in the
        # datasetId field. When creating a new dataset, leave this field blank, and
        # instead specify the datasetId field.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor id: untyped

        # Optional. TRUE if the dataset and its table names are case-insensitive,
        # otherwise FALSE. By default, this is FALSE, which means the dataset and its
        # table names are case-sensitive. This field does not affect routine references.
        # Corresponds to the JSON property `isCaseInsensitive`
        # @return [Boolean]
        attr_accessor is_case_insensitive: untyped

        alias is_case_insensitive? is_case_insensitive

        # Output only. The resource type.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # The labels associated with this dataset. You can use these to organize and
        # group your datasets. You can set this property when inserting or updating a
        # dataset. See [Creating and Updating Dataset Labels](https://cloud.google.com/
        # bigquery/docs/creating-managing-labels#creating_and_updating_dataset_labels)
        # for more information.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor labels: untyped

        # Output only. The date when this dataset was last modified, in milliseconds
        # since the epoch.
        # Corresponds to the JSON property `lastModifiedTime`
        # @return [Fixnum]
        attr_accessor last_modified_time: untyped

        # Metadata about the Linked Dataset.
        # Corresponds to the JSON property `linkedDatasetMetadata`
        # @return [Google::Apis::BigqueryV2::LinkedDatasetMetadata]
        attr_accessor linked_dataset_metadata: untyped

        # A dataset source type which refers to another BigQuery dataset.
        # Corresponds to the JSON property `linkedDatasetSource`
        # @return [Google::Apis::BigqueryV2::LinkedDatasetSource]
        attr_accessor linked_dataset_source: untyped

        # The geographic location where the dataset should reside. See https://cloud.
        # google.com/bigquery/docs/locations for supported locations.
        # Corresponds to the JSON property `location`
        # @return [String]
        attr_accessor location: untyped

        # Optional. Defines the time travel window in hours. The value can be from 48 to
        # 168 hours (2 to 7 days). The default value is 168 hours if this is not set.
        # Corresponds to the JSON property `maxTimeTravelHours`
        # @return [Fixnum]
        attr_accessor max_time_travel_hours: untyped

        # Optional. The [tags](/bigquery/docs/tags) attached to this dataset. Tag keys
        # are globally unique. Tag key is expected to be in the namespaced format, for
        # example "123456789012/environment" where 123456789012 is the ID of the parent
        # organization or project resource for this tag key. Tag value is expected to be
        # the short name, for example "Production". See [Tag definitions](/iam/docs/tags-
        # access-control#definitions) for more details.
        # Corresponds to the JSON property `resourceTags`
        # @return [Hash<String,String>]
        attr_accessor resource_tags: untyped

        # Optional. Output only. Restriction config for all tables and dataset. If set,
        # restrict certain accesses on the dataset and all its tables based on the
        # config. See [Data egress](/bigquery/docs/analytics-hub-introduction#
        # data_egress) for more details.
        # Corresponds to the JSON property `restrictions`
        # @return [Google::Apis::BigqueryV2::RestrictionConfig]
        attr_accessor restrictions: untyped

        # Output only. Reserved for future use.
        # Corresponds to the JSON property `satisfiesPzi`
        # @return [Boolean]
        attr_accessor satisfies_pzi: untyped

        alias satisfies_pzi? satisfies_pzi

        # Output only. Reserved for future use.
        # Corresponds to the JSON property `satisfiesPzs`
        # @return [Boolean]
        attr_accessor satisfies_pzs: untyped

        alias satisfies_pzs? satisfies_pzs

        # Output only. A URL that can be used to access the resource again. You can use
        # this URL in Get or Update requests to the resource.
        # Corresponds to the JSON property `selfLink`
        # @return [String]
        attr_accessor self_link: untyped

        # Optional. Updates storage_billing_model for the dataset.
        # Corresponds to the JSON property `storageBillingModel`
        # @return [String]
        attr_accessor storage_billing_model: untyped

        # Output only. Tags for the dataset. To provide tags as inputs, use the `
        # resourceTags` field.
        # Corresponds to the JSON property `tags`
        # @return [Array<Google::Apis::BigqueryV2::Dataset::Tag>]
        attr_accessor tags: untyped

        # Output only. Same as `type` in `ListFormatDataset`. The type of the dataset,
        # one of: * DEFAULT - only accessible by owner and authorized accounts, * PUBLIC
        # - accessible by everyone, * LINKED - linked dataset, * EXTERNAL - dataset with
        # definition in external metadata catalog.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # An object that defines dataset access for an entity.
        class Access
          @dataset: untyped

          @domain: untyped

          @group_by_email: untyped

          @iam_member: untyped

          @role: untyped

          @routine: untyped

          @special_group: untyped

          @user_by_email: untyped

          @view: untyped

          include Google::Apis::Core::Hashable

          # Grants all resources of particular types in a particular dataset read access
          # to the current dataset. Similar to how individually authorized views work,
          # updates to any resource granted through its dataset (including creation of new
          # resources) requires read permission to referenced resources, plus write
          # permission to the authorizing dataset.
          # Corresponds to the JSON property `dataset`
          # @return [Google::Apis::BigqueryV2::DatasetAccessEntry]
          attr_accessor dataset: untyped

          # [Pick one] A domain to grant access to. Any users signed in with the domain
          # specified will be granted the specified access. Example: "example.com". Maps
          # to IAM policy member "domain:DOMAIN".
          # Corresponds to the JSON property `domain`
          # @return [String]
          attr_accessor domain: untyped

          # [Pick one] An email address of a Google Group to grant access to. Maps to IAM
          # policy member "group:GROUP".
          # Corresponds to the JSON property `groupByEmail`
          # @return [String]
          attr_accessor group_by_email: untyped

          # [Pick one] Some other type of member that appears in the IAM Policy but isn't
          # a user, group, domain, or special group.
          # Corresponds to the JSON property `iamMember`
          # @return [String]
          attr_accessor iam_member: untyped

          # An IAM role ID that should be granted to the user, group, or domain specified
          # in this access entry. The following legacy mappings will be applied: * `OWNER`:
          # `roles/bigquery.dataOwner` * `WRITER`: `roles/bigquery.dataEditor` * `READER`:
          # `roles/bigquery.dataViewer` This field will accept any of the above formats,
          # but will return only the legacy format. For example, if you set this field to "
          # roles/bigquery.dataOwner", it will be returned back as "OWNER".
          # Corresponds to the JSON property `role`
          # @return [String]
          attr_accessor role: untyped

          # Id path of a routine.
          # Corresponds to the JSON property `routine`
          # @return [Google::Apis::BigqueryV2::RoutineReference]
          attr_accessor routine: untyped

          # [Pick one] A special group to grant access to. Possible values include: *
          # projectOwners: Owners of the enclosing project. * projectReaders: Readers of
          # the enclosing project. * projectWriters: Writers of the enclosing project. *
          # allAuthenticatedUsers: All authenticated BigQuery users. Maps to similarly-
          # named IAM members.
          # Corresponds to the JSON property `specialGroup`
          # @return [String]
          attr_accessor special_group: untyped

          # [Pick one] An email address of a user to grant access to. For example: fred@
          # example.com. Maps to IAM policy member "user:EMAIL" or "serviceAccount:EMAIL".
          # Corresponds to the JSON property `userByEmail`
          # @return [String]
          attr_accessor user_by_email: untyped

          # [Pick one] A view from a different dataset to grant access to. Queries
          # executed against that view will have read access to views/tables/routines in
          # this dataset. The role field is not required when this field is set. If that
          # view is updated by any user, access to the view needs to be granted again via
          # an update operation.
          # Corresponds to the JSON property `view`
          # @return [Google::Apis::BigqueryV2::TableReference]
          attr_accessor view: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end

        # A global tag managed by Resource Manager. https://cloud.google.com/iam/docs/
        # tags-access-control#definitions
        class Tag
          @tag_key: untyped

          @tag_value: untyped

          include Google::Apis::Core::Hashable

          # Required. The namespaced friendly name of the tag key, e.g. "12345/environment"
          # where 12345 is org id.
          # Corresponds to the JSON property `tagKey`
          # @return [String]
          attr_accessor tag_key: untyped

          # Required. The friendly short name of the tag value, e.g. "production".
          # Corresponds to the JSON property `tagValue`
          # @return [String]
          attr_accessor tag_value: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # Grants all resources of particular types in a particular dataset read access
      # to the current dataset. Similar to how individually authorized views work,
      # updates to any resource granted through its dataset (including creation of new
      # resources) requires read permission to referenced resources, plus write
      # permission to the authorizing dataset.
      class DatasetAccessEntry
        @dataset: untyped

        @target_types: untyped

        include Google::Apis::Core::Hashable

        # Identifier for a dataset.
        # Corresponds to the JSON property `dataset`
        # @return [Google::Apis::BigqueryV2::DatasetReference]
        attr_accessor dataset: untyped

        # Which resources in the dataset this entry applies to. Currently, only views
        # are supported, but additional target types may be added in the future.
        # Corresponds to the JSON property `targetTypes`
        # @return [Array<String>]
        attr_accessor target_types: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Response format for a page of results when listing datasets.
      class DatasetList
        @datasets: untyped

        @etag: untyped

        @kind: untyped

        @next_page_token: untyped

        @unreachable: untyped

        include Google::Apis::Core::Hashable

        # An array of the dataset resources in the project. Each resource contains basic
        # information. For full information about a particular dataset resource, use the
        # Datasets: get method. This property is omitted when there are no datasets in
        # the project.
        # Corresponds to the JSON property `datasets`
        # @return [Array<Google::Apis::BigqueryV2::DatasetList::Dataset>]
        attr_accessor datasets: untyped

        # Output only. A hash value of the results page. You can use this property to
        # determine if the page has changed since the last request.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # Output only. The resource type. This property always returns the value "
        # bigquery#datasetList"
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # A token that can be used to request the next results page. This property is
        # omitted on the final results page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor next_page_token: untyped

        # A list of skipped locations that were unreachable. For more information about
        # BigQuery locations, see: https://cloud.google.com/bigquery/docs/locations.
        # Example: "europe-west5"
        # Corresponds to the JSON property `unreachable`
        # @return [Array<String>]
        attr_accessor unreachable: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # A dataset resource with only a subset of fields, to be returned in a list of
        # datasets.
        class Dataset
          @dataset_reference: untyped

          @friendly_name: untyped

          @id: untyped

          @kind: untyped

          @labels: untyped

          @location: untyped

          include Google::Apis::Core::Hashable

          # Identifier for a dataset.
          # Corresponds to the JSON property `datasetReference`
          # @return [Google::Apis::BigqueryV2::DatasetReference]
          attr_accessor dataset_reference: untyped

          # An alternate name for the dataset. The friendly name is purely decorative in
          # nature.
          # Corresponds to the JSON property `friendlyName`
          # @return [String]
          attr_accessor friendly_name: untyped

          # The fully-qualified, unique, opaque ID of the dataset.
          # Corresponds to the JSON property `id`
          # @return [String]
          attr_accessor id: untyped

          # The resource type. This property always returns the value "bigquery#dataset"
          # Corresponds to the JSON property `kind`
          # @return [String]
          attr_accessor kind: untyped

          # The labels associated with this dataset. You can use these to organize and
          # group your datasets.
          # Corresponds to the JSON property `labels`
          # @return [Hash<String,String>]
          attr_accessor labels: untyped

          # The geographic location where the dataset resides.
          # Corresponds to the JSON property `location`
          # @return [String]
          attr_accessor location: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # Identifier for a dataset.
      class DatasetReference
        @dataset_id: untyped

        @project_id: untyped

        include Google::Apis::Core::Hashable

        # Required. A unique ID for this dataset, without the project name. The ID must
        # contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The
        # maximum length is 1,024 characters.
        # Corresponds to the JSON property `datasetId`
        # @return [String]
        attr_accessor dataset_id: untyped

        # Optional. The ID of the project containing this dataset.
        # Corresponds to the JSON property `projectId`
        # @return [String]
        attr_accessor project_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Properties for the destination table.
      class DestinationTableProperties
        @description: untyped

        @expiration_time: untyped

        @friendly_name: untyped

        @labels: untyped

        include Google::Apis::Core::Hashable

        # Optional. The description for the destination table. This will only be used if
        # the destination table is newly created. If the table already exists and a
        # value different than the current description is provided, the job will fail.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor description: untyped

        # Internal use only.
        # Corresponds to the JSON property `expirationTime`
        # @return [DateTime]
        attr_accessor expiration_time: untyped

        # Optional. Friendly name for the destination table. If the table already exists,
        # it should be same as the existing friendly name.
        # Corresponds to the JSON property `friendlyName`
        # @return [String]
        attr_accessor friendly_name: untyped

        # Optional. The labels associated with this table. You can use these to organize
        # and group your tables. This will only be used if the destination table is
        # newly created. If the table already exists and labels are different than the
        # current labels are provided, the job will fail.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor labels: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Represents privacy policy associated with "differential privacy" method.
      class DifferentialPrivacyPolicy
        @delta_budget: untyped

        @delta_budget_remaining: untyped

        @delta_per_query: untyped

        @epsilon_budget: untyped

        @epsilon_budget_remaining: untyped

        @max_epsilon_per_query: untyped

        @max_groups_contributed: untyped

        @privacy_unit_column: untyped

        include Google::Apis::Core::Hashable

        # Optional. The total delta budget for all queries against the privacy-protected
        # view. Each subscriber query against this view charges the amount of delta that
        # is pre-defined by the contributor through the privacy policy delta_per_query
        # field. If there is sufficient budget, then the subscriber query attempts to
        # complete. It might still fail due to other reasons, in which case the charge
        # is refunded. If there is insufficient budget the query is rejected. There
        # might be multiple charge attempts if a single query references multiple views.
        # In this case there must be sufficient budget for all charges or the query is
        # rejected and charges are refunded in best effort. The budget does not have a
        # refresh policy and can only be updated via ALTER VIEW or circumvented by
        # creating a new view that can be queried with a fresh budget.
        # Corresponds to the JSON property `deltaBudget`
        # @return [Float]
        attr_accessor delta_budget: untyped

        # Output only. The delta budget remaining. If budget is exhausted, no more
        # queries are allowed. Note that the budget for queries that are in progress is
        # deducted before the query executes. If the query fails or is cancelled then
        # the budget is refunded. In this case the amount of budget remaining can
        # increase.
        # Corresponds to the JSON property `deltaBudgetRemaining`
        # @return [Float]
        attr_accessor delta_budget_remaining: untyped

        # Optional. The delta value that is used per query. Delta represents the
        # probability that any row will fail to be epsilon differentially private.
        # Indicates the risk associated with exposing aggregate rows in the result of a
        # query.
        # Corresponds to the JSON property `deltaPerQuery`
        # @return [Float]
        attr_accessor delta_per_query: untyped

        # Optional. The total epsilon budget for all queries against the privacy-
        # protected view. Each subscriber query against this view charges the amount of
        # epsilon they request in their query. If there is sufficient budget, then the
        # subscriber query attempts to complete. It might still fail due to other
        # reasons, in which case the charge is refunded. If there is insufficient budget
        # the query is rejected. There might be multiple charge attempts if a single
        # query references multiple views. In this case there must be sufficient budget
        # for all charges or the query is rejected and charges are refunded in best
        # effort. The budget does not have a refresh policy and can only be updated via
        # ALTER VIEW or circumvented by creating a new view that can be queried with a
        # fresh budget.
        # Corresponds to the JSON property `epsilonBudget`
        # @return [Float]
        attr_accessor epsilon_budget: untyped

        # Output only. The epsilon budget remaining. If budget is exhausted, no more
        # queries are allowed. Note that the budget for queries that are in progress is
        # deducted before the query executes. If the query fails or is cancelled then
        # the budget is refunded. In this case the amount of budget remaining can
        # increase.
        # Corresponds to the JSON property `epsilonBudgetRemaining`
        # @return [Float]
        attr_accessor epsilon_budget_remaining: untyped

        # Optional. The maximum epsilon value that a query can consume. If the
        # subscriber specifies epsilon as a parameter in a SELECT query, it must be less
        # than or equal to this value. The epsilon parameter controls the amount of
        # noise that is added to the groups — a higher epsilon means less noise.
        # Corresponds to the JSON property `maxEpsilonPerQuery`
        # @return [Float]
        attr_accessor max_epsilon_per_query: untyped

        # Optional. The maximum groups contributed value that is used per query.
        # Represents the maximum number of groups to which each protected entity can
        # contribute. Changing this value does not improve or worsen privacy. The best
        # value for accuracy and utility depends on the query and data.
        # Corresponds to the JSON property `maxGroupsContributed`
        # @return [Fixnum]
        attr_accessor max_groups_contributed: untyped

        # Optional. The privacy unit column associated with this policy. Differential
        # privacy policies can only have one privacy unit column per data source object (
        # table, view).
        # Corresponds to the JSON property `privacyUnitColumn`
        # @return [String]
        attr_accessor privacy_unit_column: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Model evaluation metrics for dimensionality reduction models.
      class DimensionalityReductionMetrics
        @total_explained_variance_ratio: untyped

        include Google::Apis::Core::Hashable

        # Total percentage of variance explained by the selected principal components.
        # Corresponds to the JSON property `totalExplainedVarianceRatio`
        # @return [Float]
        attr_accessor total_explained_variance_ratio: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Detailed statistics for DML statements
      class DmlStatistics
        @deleted_row_count: untyped

        @inserted_row_count: untyped

        @updated_row_count: untyped

        include Google::Apis::Core::Hashable

        # Output only. Number of deleted Rows. populated by DML DELETE, MERGE and
        # TRUNCATE statements.
        # Corresponds to the JSON property `deletedRowCount`
        # @return [Fixnum]
        attr_accessor deleted_row_count: untyped

        # Output only. Number of inserted Rows. Populated by DML INSERT and MERGE
        # statements
        # Corresponds to the JSON property `insertedRowCount`
        # @return [Fixnum]
        attr_accessor inserted_row_count: untyped

        # Output only. Number of updated Rows. Populated by DML UPDATE and MERGE
        # statements.
        # Corresponds to the JSON property `updatedRowCount`
        # @return [Fixnum]
        attr_accessor updated_row_count: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Discrete candidates of a double hyperparameter.
      class DoubleCandidates
        @candidates: untyped

        include Google::Apis::Core::Hashable

        # Candidates for the double parameter in increasing order.
        # Corresponds to the JSON property `candidates`
        # @return [Array<Float>]
        attr_accessor candidates: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Search space for a double hyperparameter.
      class DoubleHparamSearchSpace
        @candidates: untyped

        @range: untyped

        include Google::Apis::Core::Hashable

        # Discrete candidates of a double hyperparameter.
        # Corresponds to the JSON property `candidates`
        # @return [Google::Apis::BigqueryV2::DoubleCandidates]
        attr_accessor candidates: untyped

        # Range of a double hyperparameter.
        # Corresponds to the JSON property `range`
        # @return [Google::Apis::BigqueryV2::DoubleRange]
        attr_accessor range: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Range of a double hyperparameter.
      class DoubleRange
        @max: untyped

        @min: untyped

        include Google::Apis::Core::Hashable

        # Max value of the double parameter.
        # Corresponds to the JSON property `max`
        # @return [Float]
        attr_accessor max: untyped

        # Min value of the double parameter.
        # Corresponds to the JSON property `min`
        # @return [Float]
        attr_accessor min: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Configuration for Cloud KMS encryption settings.
      class EncryptionConfiguration
        @kms_key_name: untyped

        include Google::Apis::Core::Hashable

        # Optional. Describes the Cloud KMS encryption key that will be used to protect
        # destination BigQuery table. The BigQuery Service Account associated with your
        # project requires access to this encryption key.
        # Corresponds to the JSON property `kmsKeyName`
        # @return [String]
        attr_accessor kms_key_name: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # A single entry in the confusion matrix.
      class Entry
        @item_count: untyped

        @predicted_label: untyped

        include Google::Apis::Core::Hashable

        # Number of items being predicted as this label.
        # Corresponds to the JSON property `itemCount`
        # @return [Fixnum]
        attr_accessor item_count: untyped

        # The predicted label. For confidence_threshold > 0, we will also add an entry
        # indicating the number of items under the confidence threshold.
        # Corresponds to the JSON property `predictedLabel`
        # @return [String]
        attr_accessor predicted_label: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Error details.
      class ErrorProto
        @debug_info: untyped

        @location: untyped

        @message: untyped

        @reason: untyped

        include Google::Apis::Core::Hashable

        # Debugging information. This property is internal to Google and should not be
        # used.
        # Corresponds to the JSON property `debugInfo`
        # @return [String]
        attr_accessor debug_info: untyped

        # Specifies where the error occurred, if present.
        # Corresponds to the JSON property `location`
        # @return [String]
        attr_accessor location: untyped

        # A human-readable description of the error.
        # Corresponds to the JSON property `message`
        # @return [String]
        attr_accessor message: untyped

        # A short error code that summarizes the error.
        # Corresponds to the JSON property `reason`
        # @return [String]
        attr_accessor reason: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Evaluation metrics of a model. These are either computed on all training data
      # or just the eval data based on whether eval data was used during training.
      # These are not present for imported models.
      class EvaluationMetrics
        @arima_forecasting_metrics: untyped

        @binary_classification_metrics: untyped

        @clustering_metrics: untyped

        @dimensionality_reduction_metrics: untyped

        @multi_class_classification_metrics: untyped

        @ranking_metrics: untyped

        @regression_metrics: untyped

        include Google::Apis::Core::Hashable

        # Model evaluation metrics for ARIMA forecasting models.
        # Corresponds to the JSON property `arimaForecastingMetrics`
        # @return [Google::Apis::BigqueryV2::ArimaForecastingMetrics]
        attr_accessor arima_forecasting_metrics: untyped

        # Evaluation metrics for binary classification/classifier models.
        # Corresponds to the JSON property `binaryClassificationMetrics`
        # @return [Google::Apis::BigqueryV2::BinaryClassificationMetrics]
        attr_accessor binary_classification_metrics: untyped

        # Evaluation metrics for clustering models.
        # Corresponds to the JSON property `clusteringMetrics`
        # @return [Google::Apis::BigqueryV2::ClusteringMetrics]
        attr_accessor clustering_metrics: untyped

        # Model evaluation metrics for dimensionality reduction models.
        # Corresponds to the JSON property `dimensionalityReductionMetrics`
        # @return [Google::Apis::BigqueryV2::DimensionalityReductionMetrics]
        attr_accessor dimensionality_reduction_metrics: untyped

        # Evaluation metrics for multi-class classification/classifier models.
        # Corresponds to the JSON property `multiClassClassificationMetrics`
        # @return [Google::Apis::BigqueryV2::MultiClassClassificationMetrics]
        attr_accessor multi_class_classification_metrics: untyped

        # Evaluation metrics used by weighted-ALS models specified by feedback_type=
        # implicit.
        # Corresponds to the JSON property `rankingMetrics`
        # @return [Google::Apis::BigqueryV2::RankingMetrics]
        attr_accessor ranking_metrics: untyped

        # Evaluation metrics for regression and explicit feedback type matrix
        # factorization models.
        # Corresponds to the JSON property `regressionMetrics`
        # @return [Google::Apis::BigqueryV2::RegressionMetrics]
        attr_accessor regression_metrics: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # A single stage of query execution.
      class ExplainQueryStage
        @completed_parallel_inputs: untyped

        @compute_mode: untyped

        @compute_ms_avg: untyped

        @compute_ms_max: untyped

        @compute_ratio_avg: untyped

        @compute_ratio_max: untyped

        @end_ms: untyped

        @id: untyped

        @input_stages: untyped

        @name: untyped

        @parallel_inputs: untyped

        @read_ms_avg: untyped

        @read_ms_max: untyped

        @read_ratio_avg: untyped

        @read_ratio_max: untyped

        @records_read: untyped

        @records_written: untyped

        @shuffle_output_bytes: untyped

        @shuffle_output_bytes_spilled: untyped

        @slot_ms: untyped

        @start_ms: untyped

        @status: untyped

        @steps: untyped

        @wait_ms_avg: untyped

        @wait_ms_max: untyped

        @wait_ratio_avg: untyped

        @wait_ratio_max: untyped

        @write_ms_avg: untyped

        @write_ms_max: untyped

        @write_ratio_avg: untyped

        @write_ratio_max: untyped

        include Google::Apis::Core::Hashable

        # Number of parallel input segments completed.
        # Corresponds to the JSON property `completedParallelInputs`
        # @return [Fixnum]
        attr_accessor completed_parallel_inputs: untyped

        # Output only. Compute mode for this stage.
        # Corresponds to the JSON property `computeMode`
        # @return [String]
        attr_accessor compute_mode: untyped

        # Milliseconds the average shard spent on CPU-bound tasks.
        # Corresponds to the JSON property `computeMsAvg`
        # @return [Fixnum]
        attr_accessor compute_ms_avg: untyped

        # Milliseconds the slowest shard spent on CPU-bound tasks.
        # Corresponds to the JSON property `computeMsMax`
        # @return [Fixnum]
        attr_accessor compute_ms_max: untyped

        # Relative amount of time the average shard spent on CPU-bound tasks.
        # Corresponds to the JSON property `computeRatioAvg`
        # @return [Float]
        attr_accessor compute_ratio_avg: untyped

        # Relative amount of time the slowest shard spent on CPU-bound tasks.
        # Corresponds to the JSON property `computeRatioMax`
        # @return [Float]
        attr_accessor compute_ratio_max: untyped

        # Stage end time represented as milliseconds since the epoch.
        # Corresponds to the JSON property `endMs`
        # @return [Fixnum]
        attr_accessor end_ms: untyped

        # Unique ID for the stage within the plan.
        # Corresponds to the JSON property `id`
        # @return [Fixnum]
        attr_accessor id: untyped

        # IDs for stages that are inputs to this stage.
        # Corresponds to the JSON property `inputStages`
        # @return [Array<Fixnum>]
        attr_accessor input_stages: untyped

        # Human-readable name for the stage.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor name: untyped

        # Number of parallel input segments to be processed
        # Corresponds to the JSON property `parallelInputs`
        # @return [Fixnum]
        attr_accessor parallel_inputs: untyped

        # Milliseconds the average shard spent reading input.
        # Corresponds to the JSON property `readMsAvg`
        # @return [Fixnum]
        attr_accessor read_ms_avg: untyped

        # Milliseconds the slowest shard spent reading input.
        # Corresponds to the JSON property `readMsMax`
        # @return [Fixnum]
        attr_accessor read_ms_max: untyped

        # Relative amount of time the average shard spent reading input.
        # Corresponds to the JSON property `readRatioAvg`
        # @return [Float]
        attr_accessor read_ratio_avg: untyped

        # Relative amount of time the slowest shard spent reading input.
        # Corresponds to the JSON property `readRatioMax`
        # @return [Float]
        attr_accessor read_ratio_max: untyped

        # Number of records read into the stage.
        # Corresponds to the JSON property `recordsRead`
        # @return [Fixnum]
        attr_accessor records_read: untyped

        # Number of records written by the stage.
        # Corresponds to the JSON property `recordsWritten`
        # @return [Fixnum]
        attr_accessor records_written: untyped

        # Total number of bytes written to shuffle.
        # Corresponds to the JSON property `shuffleOutputBytes`
        # @return [Fixnum]
        attr_accessor shuffle_output_bytes: untyped

        # Total number of bytes written to shuffle and spilled to disk.
        # Corresponds to the JSON property `shuffleOutputBytesSpilled`
        # @return [Fixnum]
        attr_accessor shuffle_output_bytes_spilled: untyped

        # Slot-milliseconds used by the stage.
        # Corresponds to the JSON property `slotMs`
        # @return [Fixnum]
        attr_accessor slot_ms: untyped

        # Stage start time represented as milliseconds since the epoch.
        # Corresponds to the JSON property `startMs`
        # @return [Fixnum]
        attr_accessor start_ms: untyped

        # Current status for this stage.
        # Corresponds to the JSON property `status`
        # @return [String]
        attr_accessor status: untyped

        # List of operations within the stage in dependency order (approximately
        # chronological).
        # Corresponds to the JSON property `steps`
        # @return [Array<Google::Apis::BigqueryV2::ExplainQueryStep>]
        attr_accessor steps: untyped

        # Milliseconds the average shard spent waiting to be scheduled.
        # Corresponds to the JSON property `waitMsAvg`
        # @return [Fixnum]
        attr_accessor wait_ms_avg: untyped

        # Milliseconds the slowest shard spent waiting to be scheduled.
        # Corresponds to the JSON property `waitMsMax`
        # @return [Fixnum]
        attr_accessor wait_ms_max: untyped

        # Relative amount of time the average shard spent waiting to be scheduled.
        # Corresponds to the JSON property `waitRatioAvg`
        # @return [Float]
        attr_accessor wait_ratio_avg: untyped

        # Relative amount of time the slowest shard spent waiting to be scheduled.
        # Corresponds to the JSON property `waitRatioMax`
        # @return [Float]
        attr_accessor wait_ratio_max: untyped

        # Milliseconds the average shard spent on writing output.
        # Corresponds to the JSON property `writeMsAvg`
        # @return [Fixnum]
        attr_accessor write_ms_avg: untyped

        # Milliseconds the slowest shard spent on writing output.
        # Corresponds to the JSON property `writeMsMax`
        # @return [Fixnum]
        attr_accessor write_ms_max: untyped

        # Relative amount of time the average shard spent on writing output.
        # Corresponds to the JSON property `writeRatioAvg`
        # @return [Float]
        attr_accessor write_ratio_avg: untyped

        # Relative amount of time the slowest shard spent on writing output.
        # Corresponds to the JSON property `writeRatioMax`
        # @return [Float]
        attr_accessor write_ratio_max: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # An operation within a stage.
      class ExplainQueryStep
        @kind: untyped

        @substeps: untyped

        include Google::Apis::Core::Hashable

        # Machine-readable operation type.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # Human-readable description of the step(s).
        # Corresponds to the JSON property `substeps`
        # @return [Array<String>]
        attr_accessor substeps: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Explanation for a single feature.
      class Explanation
        @attribution: untyped

        @feature_name: untyped

        include Google::Apis::Core::Hashable

        # Attribution of feature.
        # Corresponds to the JSON property `attribution`
        # @return [Float]
        attr_accessor attribution: untyped

        # The full feature name. For non-numerical features, will be formatted like `.`.
        # Overall size of feature name will always be truncated to first 120 characters.
        # Corresponds to the JSON property `featureName`
        # @return [String]
        attr_accessor feature_name: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for the EXPORT DATA statement as part of Query Job. EXTRACT JOB
      # statistics are populated in JobStatistics4.
      class ExportDataStatistics
        @file_count: untyped

        @row_count: untyped

        include Google::Apis::Core::Hashable

        # Number of destination files generated in case of EXPORT DATA statement only.
        # Corresponds to the JSON property `fileCount`
        # @return [Fixnum]
        attr_accessor file_count: untyped

        # [Alpha] Number of destination rows generated in case of EXPORT DATA statement
        # only.
        # Corresponds to the JSON property `rowCount`
        # @return [Fixnum]
        attr_accessor row_count: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Represents a textual expression in the Common Expression Language (CEL) syntax.
      # CEL is a C-like expression language. The syntax and semantics of CEL are
      # documented at https://github.com/google/cel-spec. Example (Comparison): title:
      # "Summary size limit" description: "Determines if a summary is less than 100
      # chars" expression: "document.summary.size() < 100" Example (Equality): title: "
      # Requestor is owner" description: "Determines if requestor is the document
      # owner" expression: "document.owner == request.auth.claims.email" Example (
      # Logic): title: "Public documents" description: "Determine whether the document
      # should be publicly visible" expression: "document.type != 'private' &&
      # document.type != 'internal'" Example (Data Manipulation): title: "Notification
      # string" description: "Create a notification string with a timestamp."
      # expression: "'New message received at ' + string(document.create_time)" The
      # exact variables and functions that may be referenced within an expression are
      # determined by the service that evaluates it. See the service documentation for
      # additional information.
      class Expr
        @description: untyped

        @expression: untyped

        @location: untyped

        @title: untyped

        include Google::Apis::Core::Hashable

        # Optional. Description of the expression. This is a longer text which describes
        # the expression, e.g. when hovered over it in a UI.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor description: untyped

        # Textual representation of an expression in Common Expression Language syntax.
        # Corresponds to the JSON property `expression`
        # @return [String]
        attr_accessor expression: untyped

        # Optional. String indicating the location of the expression for error reporting,
        # e.g. a file name and a position in the file.
        # Corresponds to the JSON property `location`
        # @return [String]
        attr_accessor location: untyped

        # Optional. Title for the expression, i.e. a short string describing its purpose.
        # This can be used e.g. in UIs which allow to enter the expression.
        # Corresponds to the JSON property `title`
        # @return [String]
        attr_accessor title: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Options defining open source compatible datasets living in the BigQuery
      # catalog. Contains metadata of open source database, schema or namespace
      # represented by the current dataset.
      class ExternalCatalogDatasetOptions
        @default_storage_location_uri: untyped

        @parameters: untyped

        include Google::Apis::Core::Hashable

        # Optional. The storage location URI for all tables in the dataset. Equivalent
        # to hive metastore's database locationUri. Maximum length of 1024 characters.
        # Corresponds to the JSON property `defaultStorageLocationUri`
        # @return [String]
        attr_accessor default_storage_location_uri: untyped

        # Optional. A map of key value pairs defining the parameters and properties of
        # the open source schema. Maximum size of 2Mib.
        # Corresponds to the JSON property `parameters`
        # @return [Hash<String,String>]
        attr_accessor parameters: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Metadata about open source compatible table. The fields contained in these
      # options correspond to hive metastore's table level properties.
      class ExternalCatalogTableOptions
        @connection_id: untyped

        @parameters: untyped

        @storage_descriptor: untyped

        include Google::Apis::Core::Hashable

        # Optional. The connection specifying the credentials to be used to read
        # external storage, such as Azure Blob, Cloud Storage, or S3. The connection is
        # needed to read the open source table from BigQuery Engine. The connection_id
        # can have the form `..` or `projects//locations//connections/`.
        # Corresponds to the JSON property `connectionId`
        # @return [String]
        attr_accessor connection_id: untyped

        # Optional. A map of key value pairs defining the parameters and properties of
        # the open source table. Corresponds with hive meta store table parameters.
        # Maximum size of 4Mib.
        # Corresponds to the JSON property `parameters`
        # @return [Hash<String,String>]
        attr_accessor parameters: untyped

        # Contains information about how a table's data is stored and accessed by open
        # source query engines.
        # Corresponds to the JSON property `storageDescriptor`
        # @return [Google::Apis::BigqueryV2::StorageDescriptor]
        attr_accessor storage_descriptor: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class ExternalDataConfiguration
        @autodetect: untyped

        @avro_options: untyped

        @bigtable_options: untyped

        @compression: untyped

        @connection_id: untyped

        @csv_options: untyped

        @decimal_target_types: untyped

        @file_set_spec_type: untyped

        @google_sheets_options: untyped

        @hive_partitioning_options: untyped

        @ignore_unknown_values: untyped

        @json_extension: untyped

        @json_options: untyped

        @max_bad_records: untyped

        @metadata_cache_mode: untyped

        @object_metadata: untyped

        @parquet_options: untyped

        @reference_file_schema_uri: untyped

        @schema: untyped

        @source_format: untyped

        @source_uris: untyped

        include Google::Apis::Core::Hashable

        # Try to detect schema and format options automatically. Any option specified
        # explicitly will be honored.
        # Corresponds to the JSON property `autodetect`
        # @return [Boolean]
        attr_accessor autodetect: untyped

        alias autodetect? autodetect

        # Options for external data sources.
        # Corresponds to the JSON property `avroOptions`
        # @return [Google::Apis::BigqueryV2::AvroOptions]
        attr_accessor avro_options: untyped

        # Options specific to Google Cloud Bigtable data sources.
        # Corresponds to the JSON property `bigtableOptions`
        # @return [Google::Apis::BigqueryV2::BigtableOptions]
        attr_accessor bigtable_options: untyped

        # Optional. The compression type of the data source. Possible values include
        # GZIP and NONE. The default value is NONE. This setting is ignored for Google
        # Cloud Bigtable, Google Cloud Datastore backups, Avro, ORC and Parquet formats.
        # An empty string is an invalid value.
        # Corresponds to the JSON property `compression`
        # @return [String]
        attr_accessor compression: untyped

        # Optional. The connection specifying the credentials to be used to read
        # external storage, such as Azure Blob, Cloud Storage, or S3. The connection_id
        # can have the form ``project_id`.`location_id`;`connection_id`` or `projects/`
        # project_id`/locations/`location_id`/connections/`connection_id``.
        # Corresponds to the JSON property `connectionId`
        # @return [String]
        attr_accessor connection_id: untyped

        # Information related to a CSV data source.
        # Corresponds to the JSON property `csvOptions`
        # @return [Google::Apis::BigqueryV2::CsvOptions]
        attr_accessor csv_options: untyped

        # Defines the list of possible SQL data types to which the source decimal values
        # are converted. This list and the precision and the scale parameters of the
        # decimal field determine the target type. In the order of NUMERIC, BIGNUMERIC,
        # and STRING, a type is picked if it is in the specified list and if it supports
        # the precision and the scale. STRING supports all precision and scale values.
        # If none of the listed types supports the precision and the scale, the type
        # supporting the widest range in the specified list is picked, and if a value
        # exceeds the supported range when reading the data, an error will be thrown.
        # Example: Suppose the value of this field is ["NUMERIC", "BIGNUMERIC"]. If (
        # precision,scale) is: * (38,9) -> NUMERIC; * (39,9) -> BIGNUMERIC (NUMERIC
        # cannot hold 30 integer digits); * (38,10) -> BIGNUMERIC (NUMERIC cannot hold
        # 10 fractional digits); * (76,38) -> BIGNUMERIC; * (77,38) -> BIGNUMERIC (error
        # if value exeeds supported range). This field cannot contain duplicate types.
        # The order of the types in this field is ignored. For example, ["BIGNUMERIC", "
        # NUMERIC"] is the same as ["NUMERIC", "BIGNUMERIC"] and NUMERIC always takes
        # precedence over BIGNUMERIC. Defaults to ["NUMERIC", "STRING"] for ORC and ["
        # NUMERIC"] for the other file formats.
        # Corresponds to the JSON property `decimalTargetTypes`
        # @return [Array<String>]
        attr_accessor decimal_target_types: untyped

        # Optional. Specifies how source URIs are interpreted for constructing the file
        # set to load. By default source URIs are expanded against the underlying
        # storage. Other options include specifying manifest files. Only applicable to
        # object storage systems.
        # Corresponds to the JSON property `fileSetSpecType`
        # @return [String]
        attr_accessor file_set_spec_type: untyped

        # Options specific to Google Sheets data sources.
        # Corresponds to the JSON property `googleSheetsOptions`
        # @return [Google::Apis::BigqueryV2::GoogleSheetsOptions]
        attr_accessor google_sheets_options: untyped

        # Options for configuring hive partitioning detect.
        # Corresponds to the JSON property `hivePartitioningOptions`
        # @return [Google::Apis::BigqueryV2::HivePartitioningOptions]
        attr_accessor hive_partitioning_options: untyped

        # Optional. Indicates if BigQuery should allow extra values that are not
        # represented in the table schema. If true, the extra values are ignored. If
        # false, records with extra columns are treated as bad records, and if there are
        # too many bad records, an invalid error is returned in the job result. The
        # default value is false. The sourceFormat property determines what BigQuery
        # treats as an extra value: CSV: Trailing columns JSON: Named values that don't
        # match any column names Google Cloud Bigtable: This setting is ignored. Google
        # Cloud Datastore backups: This setting is ignored. Avro: This setting is
        # ignored. ORC: This setting is ignored. Parquet: This setting is ignored.
        # Corresponds to the JSON property `ignoreUnknownValues`
        # @return [Boolean]
        attr_accessor ignore_unknown_values: untyped

        alias ignore_unknown_values? ignore_unknown_values

        # Optional. Load option to be used together with source_format newline-delimited
        # JSON to indicate that a variant of JSON is being loaded. To load newline-
        # delimited GeoJSON, specify GEOJSON (and source_format must be set to
        # NEWLINE_DELIMITED_JSON).
        # Corresponds to the JSON property `jsonExtension`
        # @return [String]
        attr_accessor json_extension: untyped

        # Json Options for load and make external tables.
        # Corresponds to the JSON property `jsonOptions`
        # @return [Google::Apis::BigqueryV2::JsonOptions]
        attr_accessor json_options: untyped

        # Optional. The maximum number of bad records that BigQuery can ignore when
        # reading data. If the number of bad records exceeds this value, an invalid
        # error is returned in the job result. The default value is 0, which requires
        # that all records are valid. This setting is ignored for Google Cloud Bigtable,
        # Google Cloud Datastore backups, Avro, ORC and Parquet formats.
        # Corresponds to the JSON property `maxBadRecords`
        # @return [Fixnum]
        attr_accessor max_bad_records: untyped

        # Optional. Metadata Cache Mode for the table. Set this to enable caching of
        # metadata from external data source.
        # Corresponds to the JSON property `metadataCacheMode`
        # @return [String]
        attr_accessor metadata_cache_mode: untyped

        # Optional. ObjectMetadata is used to create Object Tables. Object Tables
        # contain a listing of objects (with their metadata) found at the source_uris.
        # If ObjectMetadata is set, source_format should be omitted. Currently SIMPLE is
        # the only supported Object Metadata type.
        # Corresponds to the JSON property `objectMetadata`
        # @return [String]
        attr_accessor object_metadata: untyped

        # Parquet Options for load and make external tables.
        # Corresponds to the JSON property `parquetOptions`
        # @return [Google::Apis::BigqueryV2::ParquetOptions]
        attr_accessor parquet_options: untyped

        # Optional. When creating an external table, the user can provide a reference
        # file with the table schema. This is enabled for the following formats: AVRO,
        # PARQUET, ORC.
        # Corresponds to the JSON property `referenceFileSchemaUri`
        # @return [String]
        attr_accessor reference_file_schema_uri: untyped

        # Schema of a table
        # Corresponds to the JSON property `schema`
        # @return [Google::Apis::BigqueryV2::TableSchema]
        attr_accessor schema: untyped

        # [Required] The data format. For CSV files, specify "CSV". For Google sheets,
        # specify "GOOGLE_SHEETS". For newline-delimited JSON, specify "
        # NEWLINE_DELIMITED_JSON". For Avro files, specify "AVRO". For Google Cloud
        # Datastore backups, specify "DATASTORE_BACKUP". For Apache Iceberg tables,
        # specify "ICEBERG". For ORC files, specify "ORC". For Parquet files, specify "
        # PARQUET". [Beta] For Google Cloud Bigtable, specify "BIGTABLE".
        # Corresponds to the JSON property `sourceFormat`
        # @return [String]
        attr_accessor source_format: untyped

        # [Required] The fully-qualified URIs that point to your data in Google Cloud.
        # For Google Cloud Storage URIs: Each URI can contain one '*' wildcard character
        # and it must come after the 'bucket' name. Size limits related to load jobs
        # apply to external data sources. For Google Cloud Bigtable URIs: Exactly one
        # URI can be specified and it has be a fully specified and valid HTTPS URL for a
        # Google Cloud Bigtable table. For Google Cloud Datastore backups, exactly one
        # URI can be specified. Also, the '*' wildcard character is not allowed.
        # Corresponds to the JSON property `sourceUris`
        # @return [Array<String>]
        attr_accessor source_uris: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Configures the access a dataset defined in an external metadata storage.
      class ExternalDatasetReference
        @connection: untyped

        @external_source: untyped

        include Google::Apis::Core::Hashable

        # Required. The connection id that is used to access the external_source. Format:
        # projects/`project_id`/locations/`location_id`/connections/`connection_id`
        # Corresponds to the JSON property `connection`
        # @return [String]
        attr_accessor connection: untyped

        # Required. External source that backs this dataset.
        # Corresponds to the JSON property `externalSource`
        # @return [String]
        attr_accessor external_source: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # The external service cost is a portion of the total cost, these costs are not
      # additive with total_bytes_billed. Moreover, this field only track external
      # service costs that will show up as BigQuery costs (e.g. training BigQuery ML
      # job with google cloud CAIP or Automl Tables services), not other costs which
      # may be accrued by running the query (e.g. reading from Bigtable or Cloud
      # Storage). The external service costs with different billing sku (e.g. CAIP job
      # is charged based on VM usage) are converted to BigQuery billed_bytes and
      # slot_ms with equivalent amount of US dollars. Services may not directly
      # correlate to these metrics, but these are the equivalents for billing purposes.
      # Output only.
      class ExternalServiceCost
        @bytes_billed: untyped

        @bytes_processed: untyped

        @external_service: untyped

        @reserved_slot_count: untyped

        @slot_ms: untyped

        include Google::Apis::Core::Hashable

        # External service cost in terms of bigquery bytes billed.
        # Corresponds to the JSON property `bytesBilled`
        # @return [Fixnum]
        attr_accessor bytes_billed: untyped

        # External service cost in terms of bigquery bytes processed.
        # Corresponds to the JSON property `bytesProcessed`
        # @return [Fixnum]
        attr_accessor bytes_processed: untyped

        # External service name.
        # Corresponds to the JSON property `externalService`
        # @return [String]
        attr_accessor external_service: untyped

        # Non-preemptable reserved slots used for external job. For example, reserved
        # slots for Cloua AI Platform job are the VM usages converted to BigQuery slot
        # with equivalent mount of price.
        # Corresponds to the JSON property `reservedSlotCount`
        # @return [Fixnum]
        attr_accessor reserved_slot_count: untyped

        # External service cost in terms of bigquery slot milliseconds.
        # Corresponds to the JSON property `slotMs`
        # @return [Fixnum]
        attr_accessor slot_ms: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Representative value of a single feature within the cluster.
      class FeatureValue
        @categorical_value: untyped

        @feature_column: untyped

        @numerical_value: untyped

        include Google::Apis::Core::Hashable

        # Representative value of a categorical feature.
        # Corresponds to the JSON property `categoricalValue`
        # @return [Google::Apis::BigqueryV2::CategoricalValue]
        attr_accessor categorical_value: untyped

        # The feature column name.
        # Corresponds to the JSON property `featureColumn`
        # @return [String]
        attr_accessor feature_column: untyped

        # The numerical feature value. This is the centroid value for this feature.
        # Corresponds to the JSON property `numericalValue`
        # @return [Float]
        attr_accessor numerical_value: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Metadata about the foreign data type definition such as the system in which
      # the type is defined.
      class ForeignTypeInfo
        @type_system: untyped

        include Google::Apis::Core::Hashable

        # Required. Specifies the system which defines the foreign data type.
        # Corresponds to the JSON property `typeSystem`
        # @return [String]
        attr_accessor type_system: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # A view can be represented in multiple ways. Each representation has its own
      # dialect. This message stores the metadata required for these representations.
      class ForeignViewDefinition
        @dialect: untyped

        @query: untyped

        include Google::Apis::Core::Hashable

        # Optional. Represents the dialect of the query.
        # Corresponds to the JSON property `dialect`
        # @return [String]
        attr_accessor dialect: untyped

        # Required. The query that defines the view.
        # Corresponds to the JSON property `query`
        # @return [String]
        attr_accessor query: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Request message for `GetIamPolicy` method.
      class GetIamPolicyRequest
        @options: untyped

        include Google::Apis::Core::Hashable

        # Encapsulates settings provided to GetIamPolicy.
        # Corresponds to the JSON property `options`
        # @return [Google::Apis::BigqueryV2::GetPolicyOptions]
        attr_accessor options: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Encapsulates settings provided to GetIamPolicy.
      class GetPolicyOptions
        @requested_policy_version: untyped

        include Google::Apis::Core::Hashable

        # Optional. The maximum policy version that will be used to format the policy.
        # Valid values are 0, 1, and 3. Requests specifying an invalid value will be
        # rejected. Requests for policies with any conditional role bindings must
        # specify version 3. Policies with no conditional role bindings may specify any
        # valid value or leave the field unset. The policy in the response might use the
        # policy version that you specified, or it might use a lower policy version. For
        # example, if you specify version 3, but the policy has no conditional role
        # bindings, the response uses version 1. To learn which resources support
        # conditions in their IAM policies, see the [IAM documentation](https://cloud.
        # google.com/iam/help/conditions/resource-policies).
        # Corresponds to the JSON property `requestedPolicyVersion`
        # @return [Fixnum]
        attr_accessor requested_policy_version: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Response object of GetQueryResults.
      class GetQueryResultsResponse
        @cache_hit: untyped

        @errors: untyped

        @etag: untyped

        @job_complete: untyped

        @job_reference: untyped

        @kind: untyped

        @num_dml_affected_rows: untyped

        @page_token: untyped

        @rows: untyped

        @schema: untyped

        @total_bytes_processed: untyped

        @total_rows: untyped

        include Google::Apis::Core::Hashable

        # Whether the query result was fetched from the query cache.
        # Corresponds to the JSON property `cacheHit`
        # @return [Boolean]
        attr_accessor cache_hit: untyped

        alias cache_hit? cache_hit

        # Output only. The first errors or warnings encountered during the running of
        # the job. The final message includes the number of errors that caused the
        # process to stop. Errors here do not necessarily mean that the job has
        # completed or was unsuccessful. For more information about error messages, see [
        # Error messages](https://cloud.google.com/bigquery/docs/error-messages).
        # Corresponds to the JSON property `errors`
        # @return [Array<Google::Apis::BigqueryV2::ErrorProto>]
        attr_accessor errors: untyped

        # A hash of this response.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # Whether the query has completed or not. If rows or totalRows are present, this
        # will always be true. If this is false, totalRows will not be available.
        # Corresponds to the JSON property `jobComplete`
        # @return [Boolean]
        attr_accessor job_complete: untyped

        alias job_complete? job_complete

        # A job reference is a fully qualified identifier for referring to a job.
        # Corresponds to the JSON property `jobReference`
        # @return [Google::Apis::BigqueryV2::JobReference]
        attr_accessor job_reference: untyped

        # The resource type of the response.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # Output only. The number of rows affected by a DML statement. Present only for
        # DML statements INSERT, UPDATE or DELETE.
        # Corresponds to the JSON property `numDmlAffectedRows`
        # @return [Fixnum]
        attr_accessor num_dml_affected_rows: untyped

        # A token used for paging results. When this token is non-empty, it indicates
        # additional results are available.
        # Corresponds to the JSON property `pageToken`
        # @return [String]
        attr_accessor page_token: untyped

        # An object with as many results as can be contained within the maximum
        # permitted reply size. To get any additional rows, you can call GetQueryResults
        # and specify the jobReference returned above. Present only when the query
        # completes successfully. The REST-based representation of this data leverages a
        # series of JSON f,v objects for indicating fields and values.
        # Corresponds to the JSON property `rows`
        # @return [Array<Google::Apis::BigqueryV2::TableRow>]
        attr_accessor rows: untyped

        # Schema of a table
        # Corresponds to the JSON property `schema`
        # @return [Google::Apis::BigqueryV2::TableSchema]
        attr_accessor schema: untyped

        # The total number of bytes processed for this query.
        # Corresponds to the JSON property `totalBytesProcessed`
        # @return [Fixnum]
        attr_accessor total_bytes_processed: untyped

        # The total number of rows in the complete query result set, which can be more
        # than the number of rows in this single page of results. Present only when the
        # query completes successfully.
        # Corresponds to the JSON property `totalRows`
        # @return [Fixnum]
        attr_accessor total_rows: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Response object of GetServiceAccount
      class GetServiceAccountResponse
        @email: untyped

        @kind: untyped

        include Google::Apis::Core::Hashable

        # The service account email address.
        # Corresponds to the JSON property `email`
        # @return [String]
        attr_accessor email: untyped

        # The resource type of the response.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Global explanations containing the top most important features after training.
      class GlobalExplanation
        @class_label: untyped

        @explanations: untyped

        include Google::Apis::Core::Hashable

        # Class label for this set of global explanations. Will be empty/null for binary
        # logistic and linear regression models. Sorted alphabetically in descending
        # order.
        # Corresponds to the JSON property `classLabel`
        # @return [String]
        attr_accessor class_label: untyped

        # A list of the top global explanations. Sorted by absolute value of attribution
        # in descending order.
        # Corresponds to the JSON property `explanations`
        # @return [Array<Google::Apis::BigqueryV2::Explanation>]
        attr_accessor explanations: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Options specific to Google Sheets data sources.
      class GoogleSheetsOptions
        @range: untyped

        @skip_leading_rows: untyped

        include Google::Apis::Core::Hashable

        # Optional. Range of a sheet to query from. Only used when non-empty. Typical
        # format: sheet_name!top_left_cell_id:bottom_right_cell_id For example: sheet1!
        # A1:B20
        # Corresponds to the JSON property `range`
        # @return [String]
        attr_accessor range: untyped

        # Optional. The number of rows at the top of a sheet that BigQuery will skip
        # when reading the data. The default value is 0. This property is useful if you
        # have header rows that should be skipped. When autodetect is on, the behavior
        # is the following: * skipLeadingRows unspecified - Autodetect tries to detect
        # headers in the first row. If they are not detected, the row is read as data.
        # Otherwise data is read starting from the second row. * skipLeadingRows is 0 -
        # Instructs autodetect that there are no headers and data should be read
        # starting from the first row. * skipLeadingRows = N > 0 - Autodetect skips N-1
        # rows and tries to detect headers in row N. If headers are not detected, row N
        # is just skipped. Otherwise row N is used to extract column names for the
        # detected schema.
        # Corresponds to the JSON property `skipLeadingRows`
        # @return [Fixnum]
        attr_accessor skip_leading_rows: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # High cardinality join detailed information.
      class HighCardinalityJoin
        @left_rows: untyped

        @output_rows: untyped

        @right_rows: untyped

        @step_index: untyped

        include Google::Apis::Core::Hashable

        # Output only. Count of left input rows.
        # Corresponds to the JSON property `leftRows`
        # @return [Fixnum]
        attr_accessor left_rows: untyped

        # Output only. Count of the output rows.
        # Corresponds to the JSON property `outputRows`
        # @return [Fixnum]
        attr_accessor output_rows: untyped

        # Output only. Count of right input rows.
        # Corresponds to the JSON property `rightRows`
        # @return [Fixnum]
        attr_accessor right_rows: untyped

        # Output only. The index of the join operator in the ExplainQueryStep lists.
        # Corresponds to the JSON property `stepIndex`
        # @return [Fixnum]
        attr_accessor step_index: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Options for configuring hive partitioning detect.
      class HivePartitioningOptions
        @fields: untyped

        @mode: untyped

        @require_partition_filter: untyped

        @source_uri_prefix: untyped

        include Google::Apis::Core::Hashable

        # Output only. For permanent external tables, this field is populated with the
        # hive partition keys in the order they were inferred. The types of the
        # partition keys can be deduced by checking the table schema (which will include
        # the partition keys). Not every API will populate this field in the output. For
        # example, Tables.Get will populate it, but Tables.List will not contain this
        # field.
        # Corresponds to the JSON property `fields`
        # @return [Array<String>]
        attr_accessor fields: untyped

        # Optional. When set, what mode of hive partitioning to use when reading data.
        # The following modes are supported: * AUTO: automatically infer partition key
        # name(s) and type(s). * STRINGS: automatically infer partition key name(s). All
        # types are strings. * CUSTOM: partition key schema is encoded in the source URI
        # prefix. Not all storage formats support hive partitioning. Requesting hive
        # partitioning on an unsupported format will lead to an error. Currently
        # supported formats are: JSON, CSV, ORC, Avro and Parquet.
        # Corresponds to the JSON property `mode`
        # @return [String]
        attr_accessor mode: untyped

        # Optional. If set to true, queries over this table require a partition filter
        # that can be used for partition elimination to be specified. Note that this
        # field should only be true when creating a permanent external table or querying
        # a temporary external table. Hive-partitioned loads with
        # require_partition_filter explicitly set to true will fail.
        # Corresponds to the JSON property `requirePartitionFilter`
        # @return [Boolean]
        attr_accessor require_partition_filter: untyped

        alias require_partition_filter? require_partition_filter

        # Optional. When hive partition detection is requested, a common prefix for all
        # source uris must be required. The prefix must end immediately before the
        # partition key encoding begins. For example, consider files following this data
        # layout: gs://bucket/path_to_table/dt=2019-06-01/country=USA/id=7/file.avro gs:/
        # /bucket/path_to_table/dt=2019-05-31/country=CA/id=3/file.avro When hive
        # partitioning is requested with either AUTO or STRINGS detection, the common
        # prefix can be either of gs://bucket/path_to_table or gs://bucket/path_to_table/
        # . CUSTOM detection requires encoding the partitioning schema immediately after
        # the common prefix. For CUSTOM, any of * gs://bucket/path_to_table/`dt:DATE`/`
        # country:STRING`/`id:INTEGER` * gs://bucket/path_to_table/`dt:STRING`/`country:
        # STRING`/`id:INTEGER` * gs://bucket/path_to_table/`dt:DATE`/`country:STRING`/`
        # id:STRING` would all be valid source URI prefixes.
        # Corresponds to the JSON property `sourceUriPrefix`
        # @return [String]
        attr_accessor source_uri_prefix: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Hyperparameter search spaces. These should be a subset of training_options.
      class HparamSearchSpaces
        @activation_fn: untyped

        @batch_size: untyped

        @booster_type: untyped

        @colsample_bylevel: untyped

        @colsample_bynode: untyped

        @colsample_bytree: untyped

        @dart_normalize_type: untyped

        @dropout: untyped

        @hidden_units: untyped

        @l1_reg: untyped

        @l2_reg: untyped

        @learn_rate: untyped

        @max_tree_depth: untyped

        @min_split_loss: untyped

        @min_tree_child_weight: untyped

        @num_clusters: untyped

        @num_factors: untyped

        @num_parallel_tree: untyped

        @optimizer: untyped

        @subsample: untyped

        @tree_method: untyped

        @wals_alpha: untyped

        include Google::Apis::Core::Hashable

        # Search space for string and enum.
        # Corresponds to the JSON property `activationFn`
        # @return [Google::Apis::BigqueryV2::StringHparamSearchSpace]
        attr_accessor activation_fn: untyped

        # Search space for an int hyperparameter.
        # Corresponds to the JSON property `batchSize`
        # @return [Google::Apis::BigqueryV2::IntHparamSearchSpace]
        attr_accessor batch_size: untyped

        # Search space for string and enum.
        # Corresponds to the JSON property `boosterType`
        # @return [Google::Apis::BigqueryV2::StringHparamSearchSpace]
        attr_accessor booster_type: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `colsampleBylevel`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor colsample_bylevel: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `colsampleBynode`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor colsample_bynode: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `colsampleBytree`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor colsample_bytree: untyped

        # Search space for string and enum.
        # Corresponds to the JSON property `dartNormalizeType`
        # @return [Google::Apis::BigqueryV2::StringHparamSearchSpace]
        attr_accessor dart_normalize_type: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `dropout`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor dropout: untyped

        # Search space for int array.
        # Corresponds to the JSON property `hiddenUnits`
        # @return [Google::Apis::BigqueryV2::IntArrayHparamSearchSpace]
        attr_accessor hidden_units: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `l1Reg`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor l1_reg: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `l2Reg`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor l2_reg: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `learnRate`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor learn_rate: untyped

        # Search space for an int hyperparameter.
        # Corresponds to the JSON property `maxTreeDepth`
        # @return [Google::Apis::BigqueryV2::IntHparamSearchSpace]
        attr_accessor max_tree_depth: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `minSplitLoss`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor min_split_loss: untyped

        # Search space for an int hyperparameter.
        # Corresponds to the JSON property `minTreeChildWeight`
        # @return [Google::Apis::BigqueryV2::IntHparamSearchSpace]
        attr_accessor min_tree_child_weight: untyped

        # Search space for an int hyperparameter.
        # Corresponds to the JSON property `numClusters`
        # @return [Google::Apis::BigqueryV2::IntHparamSearchSpace]
        attr_accessor num_clusters: untyped

        # Search space for an int hyperparameter.
        # Corresponds to the JSON property `numFactors`
        # @return [Google::Apis::BigqueryV2::IntHparamSearchSpace]
        attr_accessor num_factors: untyped

        # Search space for an int hyperparameter.
        # Corresponds to the JSON property `numParallelTree`
        # @return [Google::Apis::BigqueryV2::IntHparamSearchSpace]
        attr_accessor num_parallel_tree: untyped

        # Search space for string and enum.
        # Corresponds to the JSON property `optimizer`
        # @return [Google::Apis::BigqueryV2::StringHparamSearchSpace]
        attr_accessor optimizer: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `subsample`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor subsample: untyped

        # Search space for string and enum.
        # Corresponds to the JSON property `treeMethod`
        # @return [Google::Apis::BigqueryV2::StringHparamSearchSpace]
        attr_accessor tree_method: untyped

        # Search space for a double hyperparameter.
        # Corresponds to the JSON property `walsAlpha`
        # @return [Google::Apis::BigqueryV2::DoubleHparamSearchSpace]
        attr_accessor wals_alpha: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Training info of a trial in [hyperparameter tuning](/bigquery-ml/docs/
      # reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models.
      class HparamTuningTrial
        @end_time_ms: untyped

        @error_message: untyped

        @eval_loss: untyped

        @evaluation_metrics: untyped

        @hparam_tuning_evaluation_metrics: untyped

        @hparams: untyped

        @start_time_ms: untyped

        @status: untyped

        @training_loss: untyped

        @trial_id: untyped

        include Google::Apis::Core::Hashable

        # Ending time of the trial.
        # Corresponds to the JSON property `endTimeMs`
        # @return [Fixnum]
        attr_accessor end_time_ms: untyped

        # Error message for FAILED and INFEASIBLE trial.
        # Corresponds to the JSON property `errorMessage`
        # @return [String]
        attr_accessor error_message: untyped

        # Loss computed on the eval data at the end of trial.
        # Corresponds to the JSON property `evalLoss`
        # @return [Float]
        attr_accessor eval_loss: untyped

        # Evaluation metrics of a model. These are either computed on all training data
        # or just the eval data based on whether eval data was used during training.
        # These are not present for imported models.
        # Corresponds to the JSON property `evaluationMetrics`
        # @return [Google::Apis::BigqueryV2::EvaluationMetrics]
        attr_accessor evaluation_metrics: untyped

        # Evaluation metrics of a model. These are either computed on all training data
        # or just the eval data based on whether eval data was used during training.
        # These are not present for imported models.
        # Corresponds to the JSON property `hparamTuningEvaluationMetrics`
        # @return [Google::Apis::BigqueryV2::EvaluationMetrics]
        attr_accessor hparam_tuning_evaluation_metrics: untyped

        # Options used in model training.
        # Corresponds to the JSON property `hparams`
        # @return [Google::Apis::BigqueryV2::TrainingOptions]
        attr_accessor hparams: untyped

        # Starting time of the trial.
        # Corresponds to the JSON property `startTimeMs`
        # @return [Fixnum]
        attr_accessor start_time_ms: untyped

        # The status of the trial.
        # Corresponds to the JSON property `status`
        # @return [String]
        attr_accessor status: untyped

        # Loss computed on the training data at the end of trial.
        # Corresponds to the JSON property `trainingLoss`
        # @return [Float]
        attr_accessor training_loss: untyped

        # 1-based index of the trial.
        # Corresponds to the JSON property `trialId`
        # @return [Fixnum]
        attr_accessor trial_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Reason about why no search index was used in the search query (or sub-query).
      class IndexUnusedReason
        @base_table: untyped

        @code: untyped

        @index_name: untyped

        @message: untyped

        include Google::Apis::Core::Hashable

        # Specifies the base table involved in the reason that no search index was used.
        # Corresponds to the JSON property `baseTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor base_table: untyped

        # Specifies the high-level reason for the scenario when no search index was used.
        # Corresponds to the JSON property `code`
        # @return [String]
        attr_accessor code: untyped

        # Specifies the name of the unused search index, if available.
        # Corresponds to the JSON property `indexName`
        # @return [String]
        attr_accessor index_name: untyped

        # Free form human-readable reason for the scenario when no search index was used.
        # Corresponds to the JSON property `message`
        # @return [String]
        attr_accessor message: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Details about the input data change insight.
      class InputDataChange
        @records_read_diff_percentage: untyped

        include Google::Apis::Core::Hashable

        # Output only. Records read difference percentage compared to a previous run.
        # Corresponds to the JSON property `recordsReadDiffPercentage`
        # @return [Float]
        attr_accessor records_read_diff_percentage: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # An array of int.
      class IntArray
        @elements: untyped

        include Google::Apis::Core::Hashable

        # Elements in the int array.
        # Corresponds to the JSON property `elements`
        # @return [Array<Fixnum>]
        attr_accessor elements: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Search space for int array.
      class IntArrayHparamSearchSpace
        @candidates: untyped

        include Google::Apis::Core::Hashable

        # Candidates for the int array parameter.
        # Corresponds to the JSON property `candidates`
        # @return [Array<Google::Apis::BigqueryV2::IntArray>]
        attr_accessor candidates: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Discrete candidates of an int hyperparameter.
      class IntCandidates
        @candidates: untyped

        include Google::Apis::Core::Hashable

        # Candidates for the int parameter in increasing order.
        # Corresponds to the JSON property `candidates`
        # @return [Array<Fixnum>]
        attr_accessor candidates: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Search space for an int hyperparameter.
      class IntHparamSearchSpace
        @candidates: untyped

        @range: untyped

        include Google::Apis::Core::Hashable

        # Discrete candidates of an int hyperparameter.
        # Corresponds to the JSON property `candidates`
        # @return [Google::Apis::BigqueryV2::IntCandidates]
        attr_accessor candidates: untyped

        # Range of an int hyperparameter.
        # Corresponds to the JSON property `range`
        # @return [Google::Apis::BigqueryV2::IntRange]
        attr_accessor range: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Range of an int hyperparameter.
      class IntRange
        @max: untyped

        @min: untyped

        include Google::Apis::Core::Hashable

        # Max value of the int parameter.
        # Corresponds to the JSON property `max`
        # @return [Fixnum]
        attr_accessor max: untyped

        # Min value of the int parameter.
        # Corresponds to the JSON property `min`
        # @return [Fixnum]
        attr_accessor min: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Information about a single iteration of the training run.
      class IterationResult
        @arima_result: untyped

        @cluster_infos: untyped

        @duration_ms: untyped

        @eval_loss: untyped

        @index: untyped

        @learn_rate: untyped

        @principal_component_infos: untyped

        @training_loss: untyped

        include Google::Apis::Core::Hashable

        # (Auto-)arima fitting result. Wrap everything in ArimaResult for easier
        # refactoring if we want to use model-specific iteration results.
        # Corresponds to the JSON property `arimaResult`
        # @return [Google::Apis::BigqueryV2::ArimaResult]
        attr_accessor arima_result: untyped

        # Information about top clusters for clustering models.
        # Corresponds to the JSON property `clusterInfos`
        # @return [Array<Google::Apis::BigqueryV2::ClusterInfo>]
        attr_accessor cluster_infos: untyped

        # Time taken to run the iteration in milliseconds.
        # Corresponds to the JSON property `durationMs`
        # @return [Fixnum]
        attr_accessor duration_ms: untyped

        # Loss computed on the eval data at the end of iteration.
        # Corresponds to the JSON property `evalLoss`
        # @return [Float]
        attr_accessor eval_loss: untyped

        # Index of the iteration, 0 based.
        # Corresponds to the JSON property `index`
        # @return [Fixnum]
        attr_accessor index: untyped

        # Learn rate used for this iteration.
        # Corresponds to the JSON property `learnRate`
        # @return [Float]
        attr_accessor learn_rate: untyped

        # The information of the principal components.
        # Corresponds to the JSON property `principalComponentInfos`
        # @return [Array<Google::Apis::BigqueryV2::PrincipalComponentInfo>]
        attr_accessor principal_component_infos: untyped

        # Loss computed on the training data at the end of iteration.
        # Corresponds to the JSON property `trainingLoss`
        # @return [Float]
        attr_accessor training_loss: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class Job
        @configuration: untyped

        @etag: untyped

        @id: untyped

        @job_creation_reason: untyped

        @job_reference: untyped

        @kind: untyped

        @principal_subject: untyped

        @self_link: untyped

        @statistics: untyped

        @status: untyped

        @user_email: untyped

        include Google::Apis::Core::Hashable

        # Required. Describes the job configuration.
        # Corresponds to the JSON property `configuration`
        # @return [Google::Apis::BigqueryV2::JobConfiguration]
        attr_accessor configuration: untyped

        # Output only. A hash of this resource.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # Output only. Opaque ID field of the job.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor id: untyped

        # Reason about why a Job was created from a [`jobs.query`](https://cloud.google.
        # com/bigquery/docs/reference/rest/v2/jobs/query) method when used with `
        # JOB_CREATION_OPTIONAL` Job creation mode. For [`jobs.insert`](https://cloud.
        # google.com/bigquery/docs/reference/rest/v2/jobs/insert) method calls it will
        # always be `REQUESTED`. [Preview](/products/#product-launch-stages)
        # Corresponds to the JSON property `jobCreationReason`
        # @return [Google::Apis::BigqueryV2::JobCreationReason]
        attr_accessor job_creation_reason: untyped

        # A job reference is a fully qualified identifier for referring to a job.
        # Corresponds to the JSON property `jobReference`
        # @return [Google::Apis::BigqueryV2::JobReference]
        attr_accessor job_reference: untyped

        # Output only. The type of the resource.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # Output only. [Full-projection-only] String representation of identity of
        # requesting party. Populated for both first- and third-party identities. Only
        # present for APIs that support third-party identities.
        # Corresponds to the JSON property `principal_subject`
        # @return [String]
        attr_accessor principal_subject: untyped

        # Output only. A URL that can be used to access the resource again.
        # Corresponds to the JSON property `selfLink`
        # @return [String]
        attr_accessor self_link: untyped

        # Statistics for a single job execution.
        # Corresponds to the JSON property `statistics`
        # @return [Google::Apis::BigqueryV2::JobStatistics]
        attr_accessor statistics: untyped

        # Output only. The status of this job. Examine this value when polling an
        # asynchronous job to see if the job is complete.
        # Corresponds to the JSON property `status`
        # @return [Google::Apis::BigqueryV2::JobStatus]
        attr_accessor status: untyped

        # Output only. Email address of the user who ran the job.
        # Corresponds to the JSON property `user_email`
        # @return [String]
        attr_accessor user_email: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Describes format of a jobs cancellation response.
      class CancelJobResponse
        @job: untyped

        @kind: untyped

        include Google::Apis::Core::Hashable

        # The final state of the job.
        # Corresponds to the JSON property `job`
        # @return [Google::Apis::BigqueryV2::Job]
        attr_accessor job: untyped

        # The resource type of the response.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class JobConfiguration
        @copy: untyped

        @dry_run: untyped

        @extract: untyped

        @job_timeout_ms: untyped

        @job_type: untyped

        @labels: untyped

        @load: untyped

        @query: untyped

        include Google::Apis::Core::Hashable

        # JobConfigurationTableCopy configures a job that copies data from one table to
        # another. For more information on copying tables, see [Copy a table](https://
        # cloud.google.com/bigquery/docs/managing-tables#copy-table).
        # Corresponds to the JSON property `copy`
        # @return [Google::Apis::BigqueryV2::JobConfigurationTableCopy]
        attr_accessor copy: untyped

        # Optional. If set, don't actually run this job. A valid query will return a
        # mostly empty response with some processing statistics, while an invalid query
        # will return the same error it would if it wasn't a dry run. Behavior of non-
        # query jobs is undefined.
        # Corresponds to the JSON property `dryRun`
        # @return [Boolean]
        attr_accessor dry_run: untyped

        alias dry_run? dry_run

        # JobConfigurationExtract configures a job that exports data from a BigQuery
        # table into Google Cloud Storage.
        # Corresponds to the JSON property `extract`
        # @return [Google::Apis::BigqueryV2::JobConfigurationExtract]
        attr_accessor extract: untyped

        # Optional. Job timeout in milliseconds. If this time limit is exceeded,
        # BigQuery will attempt to stop a longer job, but may not always succeed in
        # canceling it before the job completes. For example, a job that takes more than
        # 60 seconds to complete has a better chance of being stopped than a job that
        # takes 10 seconds to complete.
        # Corresponds to the JSON property `jobTimeoutMs`
        # @return [Fixnum]
        attr_accessor job_timeout_ms: untyped

        # Output only. The type of the job. Can be QUERY, LOAD, EXTRACT, COPY or UNKNOWN.
        # Corresponds to the JSON property `jobType`
        # @return [String]
        attr_accessor job_type: untyped

        # The labels associated with this job. You can use these to organize and group
        # your jobs. Label keys and values can be no longer than 63 characters, can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. Label values are optional. Label keys
        # must start with a letter and each label in the list must have a different key.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor labels: untyped

        # JobConfigurationLoad contains the configuration properties for loading data
        # into a destination table.
        # Corresponds to the JSON property `load`
        # @return [Google::Apis::BigqueryV2::JobConfigurationLoad]
        attr_accessor load: untyped

        # JobConfigurationQuery configures a BigQuery query job.
        # Corresponds to the JSON property `query`
        # @return [Google::Apis::BigqueryV2::JobConfigurationQuery]
        attr_accessor query: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # JobConfigurationExtract configures a job that exports data from a BigQuery
      # table into Google Cloud Storage.
      class JobConfigurationExtract
        @compression: untyped

        @destination_format: untyped

        @destination_uri: untyped

        @destination_uris: untyped

        @field_delimiter: untyped

        @model_extract_options: untyped

        @print_header: untyped

        @source_model: untyped

        @source_table: untyped

        @use_avro_logical_types: untyped

        include Google::Apis::Core::Hashable

        # Optional. The compression type to use for exported files. Possible values
        # include DEFLATE, GZIP, NONE, SNAPPY, and ZSTD. The default value is NONE. Not
        # all compression formats are support for all file formats. DEFLATE is only
        # supported for Avro. ZSTD is only supported for Parquet. Not applicable when
        # extracting models.
        # Corresponds to the JSON property `compression`
        # @return [String]
        attr_accessor compression: untyped

        # Optional. The exported file format. Possible values include CSV,
        # NEWLINE_DELIMITED_JSON, PARQUET, or AVRO for tables and ML_TF_SAVED_MODEL or
        # ML_XGBOOST_BOOSTER for models. The default value for tables is CSV. Tables
        # with nested or repeated fields cannot be exported as CSV. The default value
        # for models is ML_TF_SAVED_MODEL.
        # Corresponds to the JSON property `destinationFormat`
        # @return [String]
        attr_accessor destination_format: untyped

        # [Pick one] DEPRECATED: Use destinationUris instead, passing only one URI as
        # necessary. The fully-qualified Google Cloud Storage URI where the extracted
        # table should be written.
        # Corresponds to the JSON property `destinationUri`
        # @return [String]
        attr_accessor destination_uri: untyped

        # [Pick one] A list of fully-qualified Google Cloud Storage URIs where the
        # extracted table should be written.
        # Corresponds to the JSON property `destinationUris`
        # @return [Array<String>]
        attr_accessor destination_uris: untyped

        # Optional. When extracting data in CSV format, this defines the delimiter to
        # use between fields in the exported data. Default is ','. Not applicable when
        # extracting models.
        # Corresponds to the JSON property `fieldDelimiter`
        # @return [String]
        attr_accessor field_delimiter: untyped

        # Options related to model extraction.
        # Corresponds to the JSON property `modelExtractOptions`
        # @return [Google::Apis::BigqueryV2::ModelExtractOptions]
        attr_accessor model_extract_options: untyped

        # Optional. Whether to print out a header row in the results. Default is true.
        # Not applicable when extracting models.
        # Corresponds to the JSON property `printHeader`
        # @return [Boolean]
        attr_accessor print_header: untyped

        alias print_header? print_header

        # Id path of a model.
        # Corresponds to the JSON property `sourceModel`
        # @return [Google::Apis::BigqueryV2::ModelReference]
        attr_accessor source_model: untyped

        # A reference to the table being exported.
        # Corresponds to the JSON property `sourceTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor source_table: untyped

        # Whether to use logical types when extracting to AVRO format. Not applicable
        # when extracting models.
        # Corresponds to the JSON property `useAvroLogicalTypes`
        # @return [Boolean]
        attr_accessor use_avro_logical_types: untyped

        alias use_avro_logical_types? use_avro_logical_types

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # JobConfigurationLoad contains the configuration properties for loading data
      # into a destination table.
      class JobConfigurationLoad
        @allow_jagged_rows: untyped

        @allow_quoted_newlines: untyped

        @autodetect: untyped

        @clustering: untyped

        @column_name_character_map: untyped

        @connection_properties: untyped

        @copy_files_only: untyped

        @create_disposition: untyped

        @create_session: untyped

        @decimal_target_types: untyped

        @destination_encryption_configuration: untyped

        @destination_table: untyped

        @destination_table_properties: untyped

        @encoding: untyped

        @field_delimiter: untyped

        @file_set_spec_type: untyped

        @hive_partitioning_options: untyped

        @ignore_unknown_values: untyped

        @json_extension: untyped

        @max_bad_records: untyped

        @null_marker: untyped

        @parquet_options: untyped

        @preserve_ascii_control_characters: untyped

        @projection_fields: untyped

        @quote: untyped

        @range_partitioning: untyped

        @reference_file_schema_uri: untyped

        @schema: untyped

        @schema_inline: untyped

        @schema_inline_format: untyped

        @schema_update_options: untyped

        @skip_leading_rows: untyped

        @source_format: untyped

        @source_uris: untyped

        @time_partitioning: untyped

        @use_avro_logical_types: untyped

        @write_disposition: untyped

        include Google::Apis::Core::Hashable

        # Optional. Accept rows that are missing trailing optional columns. The missing
        # values are treated as nulls. If false, records with missing trailing columns
        # are treated as bad records, and if there are too many bad records, an invalid
        # error is returned in the job result. The default value is false. Only
        # applicable to CSV, ignored for other formats.
        # Corresponds to the JSON property `allowJaggedRows`
        # @return [Boolean]
        attr_accessor allow_jagged_rows: untyped

        alias allow_jagged_rows? allow_jagged_rows

        # Indicates if BigQuery should allow quoted data sections that contain newline
        # characters in a CSV file. The default value is false.
        # Corresponds to the JSON property `allowQuotedNewlines`
        # @return [Boolean]
        attr_accessor allow_quoted_newlines: untyped

        alias allow_quoted_newlines? allow_quoted_newlines

        # Optional. Indicates if we should automatically infer the options and schema
        # for CSV and JSON sources.
        # Corresponds to the JSON property `autodetect`
        # @return [Boolean]
        attr_accessor autodetect: untyped

        alias autodetect? autodetect

        # Configures table clustering.
        # Corresponds to the JSON property `clustering`
        # @return [Google::Apis::BigqueryV2::Clustering]
        attr_accessor clustering: untyped

        # Optional. Character map supported for column names in CSV/Parquet loads.
        # Defaults to STRICT and can be overridden by Project Config Service. Using this
        # option with unsupporting load formats will result in an error.
        # Corresponds to the JSON property `columnNameCharacterMap`
        # @return [String]
        attr_accessor column_name_character_map: untyped

        # Optional. Connection properties which can modify the load job behavior.
        # Currently, only the 'session_id' connection property is supported, and is used
        # to resolve _SESSION appearing as the dataset id.
        # Corresponds to the JSON property `connectionProperties`
        # @return [Array<Google::Apis::BigqueryV2::ConnectionProperty>]
        attr_accessor connection_properties: untyped

        # Optional. [Experimental] Configures the load job to copy files directly to the
        # destination BigLake managed table, bypassing file content reading and
        # rewriting. Copying files only is supported when all the following are true: * `
        # source_uris` are located in the same Cloud Storage location as the destination
        # table's `storage_uri` location. * `source_format` is `PARQUET`. * `
        # destination_table` is an existing BigLake managed table. The table's schema
        # does not have flexible column names. The table's columns do not have type
        # parameters other than precision and scale. * No options other than the above
        # are specified.
        # Corresponds to the JSON property `copyFilesOnly`
        # @return [Boolean]
        attr_accessor copy_files_only: untyped

        alias copy_files_only? copy_files_only

        # Optional. Specifies whether the job is allowed to create new tables. The
        # following values are supported: * CREATE_IF_NEEDED: If the table does not
        # exist, BigQuery creates the table. * CREATE_NEVER: The table must already
        # exist. If it does not, a 'notFound' error is returned in the job result. The
        # default value is CREATE_IF_NEEDED. Creation, truncation and append actions
        # occur as one atomic update upon job completion.
        # Corresponds to the JSON property `createDisposition`
        # @return [String]
        attr_accessor create_disposition: untyped

        # Optional. If this property is true, the job creates a new session using a
        # randomly generated session_id. To continue using a created session with
        # subsequent queries, pass the existing session identifier as a `
        # ConnectionProperty` value. The session identifier is returned as part of the `
        # SessionInfo` message within the query statistics. The new session's location
        # will be set to `Job.JobReference.location` if it is present, otherwise it's
        # set to the default location based on existing routing logic.
        # Corresponds to the JSON property `createSession`
        # @return [Boolean]
        attr_accessor create_session: untyped

        alias create_session? create_session

        # Defines the list of possible SQL data types to which the source decimal values
        # are converted. This list and the precision and the scale parameters of the
        # decimal field determine the target type. In the order of NUMERIC, BIGNUMERIC,
        # and STRING, a type is picked if it is in the specified list and if it supports
        # the precision and the scale. STRING supports all precision and scale values.
        # If none of the listed types supports the precision and the scale, the type
        # supporting the widest range in the specified list is picked, and if a value
        # exceeds the supported range when reading the data, an error will be thrown.
        # Example: Suppose the value of this field is ["NUMERIC", "BIGNUMERIC"]. If (
        # precision,scale) is: * (38,9) -> NUMERIC; * (39,9) -> BIGNUMERIC (NUMERIC
        # cannot hold 30 integer digits); * (38,10) -> BIGNUMERIC (NUMERIC cannot hold
        # 10 fractional digits); * (76,38) -> BIGNUMERIC; * (77,38) -> BIGNUMERIC (error
        # if value exeeds supported range). This field cannot contain duplicate types.
        # The order of the types in this field is ignored. For example, ["BIGNUMERIC", "
        # NUMERIC"] is the same as ["NUMERIC", "BIGNUMERIC"] and NUMERIC always takes
        # precedence over BIGNUMERIC. Defaults to ["NUMERIC", "STRING"] for ORC and ["
        # NUMERIC"] for the other file formats.
        # Corresponds to the JSON property `decimalTargetTypes`
        # @return [Array<String>]
        attr_accessor decimal_target_types: untyped

        # Configuration for Cloud KMS encryption settings.
        # Corresponds to the JSON property `destinationEncryptionConfiguration`
        # @return [Google::Apis::BigqueryV2::EncryptionConfiguration]
        attr_accessor destination_encryption_configuration: untyped

        # [Required] The destination table to load the data into.
        # Corresponds to the JSON property `destinationTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor destination_table: untyped

        # Properties for the destination table.
        # Corresponds to the JSON property `destinationTableProperties`
        # @return [Google::Apis::BigqueryV2::DestinationTableProperties]
        attr_accessor destination_table_properties: untyped

        # Optional. The character encoding of the data. The supported values are UTF-8,
        # ISO-8859-1, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is
        # UTF-8. BigQuery decodes the data after the raw, binary data has been split
        # using the values of the `quote` and `fieldDelimiter` properties. If you don't
        # specify an encoding, or if you specify a UTF-8 encoding when the CSV file is
        # not UTF-8 encoded, BigQuery attempts to convert the data to UTF-8. Generally,
        # your data loads successfully, but it may not match byte-for-byte what you
        # expect. To avoid this, specify the correct encoding by using the `--encoding`
        # flag. If BigQuery can't convert a character other than the ASCII `0` character,
        # BigQuery converts the character to the standard Unicode replacement character:
        # �.
        # Corresponds to the JSON property `encoding`
        # @return [String]
        attr_accessor encoding: untyped

        # Optional. The separator character for fields in a CSV file. The separator is
        # interpreted as a single byte. For files encoded in ISO-8859-1, any single
        # character can be used as a separator. For files encoded in UTF-8, characters
        # represented in decimal range 1-127 (U+0001-U+007F) can be used without any
        # modification. UTF-8 characters encoded with multiple bytes (i.e. U+0080 and
        # above) will have only the first byte used for separating fields. The remaining
        # bytes will be treated as a part of the field. BigQuery also supports the
        # escape sequence "\t" (U+0009) to specify a tab separator. The default value is
        # comma (",", U+002C).
        # Corresponds to the JSON property `fieldDelimiter`
        # @return [String]
        attr_accessor field_delimiter: untyped

        # Optional. Specifies how source URIs are interpreted for constructing the file
        # set to load. By default, source URIs are expanded against the underlying
        # storage. You can also specify manifest files to control how the file set is
        # constructed. This option is only applicable to object storage systems.
        # Corresponds to the JSON property `fileSetSpecType`
        # @return [String]
        attr_accessor file_set_spec_type: untyped

        # Options for configuring hive partitioning detect.
        # Corresponds to the JSON property `hivePartitioningOptions`
        # @return [Google::Apis::BigqueryV2::HivePartitioningOptions]
        attr_accessor hive_partitioning_options: untyped

        # Optional. Indicates if BigQuery should allow extra values that are not
        # represented in the table schema. If true, the extra values are ignored. If
        # false, records with extra columns are treated as bad records, and if there are
        # too many bad records, an invalid error is returned in the job result. The
        # default value is false. The sourceFormat property determines what BigQuery
        # treats as an extra value: CSV: Trailing columns JSON: Named values that don't
        # match any column names in the table schema Avro, Parquet, ORC: Fields in the
        # file schema that don't exist in the table schema.
        # Corresponds to the JSON property `ignoreUnknownValues`
        # @return [Boolean]
        attr_accessor ignore_unknown_values: untyped

        alias ignore_unknown_values? ignore_unknown_values

        # Optional. Load option to be used together with source_format newline-delimited
        # JSON to indicate that a variant of JSON is being loaded. To load newline-
        # delimited GeoJSON, specify GEOJSON (and source_format must be set to
        # NEWLINE_DELIMITED_JSON).
        # Corresponds to the JSON property `jsonExtension`
        # @return [String]
        attr_accessor json_extension: untyped

        # Optional. The maximum number of bad records that BigQuery can ignore when
        # running the job. If the number of bad records exceeds this value, an invalid
        # error is returned in the job result. The default value is 0, which requires
        # that all records are valid. This is only supported for CSV and
        # NEWLINE_DELIMITED_JSON file formats.
        # Corresponds to the JSON property `maxBadRecords`
        # @return [Fixnum]
        attr_accessor max_bad_records: untyped

        # Optional. Specifies a string that represents a null value in a CSV file. For
        # example, if you specify "\N", BigQuery interprets "\N" as a null value when
        # loading a CSV file. The default value is the empty string. If you set this
        # property to a custom value, BigQuery throws an error if an empty string is
        # present for all data types except for STRING and BYTE. For STRING and BYTE
        # columns, BigQuery interprets the empty string as an empty value.
        # Corresponds to the JSON property `nullMarker`
        # @return [String]
        attr_accessor null_marker: untyped

        # Parquet Options for load and make external tables.
        # Corresponds to the JSON property `parquetOptions`
        # @return [Google::Apis::BigqueryV2::ParquetOptions]
        attr_accessor parquet_options: untyped

        # Optional. When sourceFormat is set to "CSV", this indicates whether the
        # embedded ASCII control characters (the first 32 characters in the ASCII-table,
        # from '\x00' to '\x1F') are preserved.
        # Corresponds to the JSON property `preserveAsciiControlCharacters`
        # @return [Boolean]
        attr_accessor preserve_ascii_control_characters: untyped

        alias preserve_ascii_control_characters? preserve_ascii_control_characters

        # If sourceFormat is set to "DATASTORE_BACKUP", indicates which entity
        # properties to load into BigQuery from a Cloud Datastore backup. Property names
        # are case sensitive and must be top-level properties. If no properties are
        # specified, BigQuery loads all properties. If any named property isn't found in
        # the Cloud Datastore backup, an invalid error is returned in the job result.
        # Corresponds to the JSON property `projectionFields`
        # @return [Array<String>]
        attr_accessor projection_fields: untyped

        # Optional. The value that is used to quote data sections in a CSV file.
        # BigQuery converts the string to ISO-8859-1 encoding, and then uses the first
        # byte of the encoded string to split the data in its raw, binary state. The
        # default value is a double-quote ('"'). If your data does not contain quoted
        # sections, set the property value to an empty string. If your data contains
        # quoted newline characters, you must also set the allowQuotedNewlines property
        # to true. To include the specific quote character within a quoted value,
        # precede it with an additional matching quote character. For example, if you
        # want to escape the default character ' " ', use ' "" '. @default "
        # Corresponds to the JSON property `quote`
        # @return [String]
        attr_accessor quote: untyped

        # Range partitioning specification for the destination table. Only one of
        # timePartitioning and rangePartitioning should be specified.
        # Corresponds to the JSON property `rangePartitioning`
        # @return [Google::Apis::BigqueryV2::RangePartitioning]
        attr_accessor range_partitioning: untyped

        # Optional. The user can provide a reference file with the reader schema. This
        # file is only loaded if it is part of source URIs, but is not loaded otherwise.
        # It is enabled for the following formats: AVRO, PARQUET, ORC.
        # Corresponds to the JSON property `referenceFileSchemaUri`
        # @return [String]
        attr_accessor reference_file_schema_uri: untyped

        # Schema of a table
        # Corresponds to the JSON property `schema`
        # @return [Google::Apis::BigqueryV2::TableSchema]
        attr_accessor schema: untyped

        # [Deprecated] The inline schema. For CSV schemas, specify as "Field1:Type1[,
        # Field2:Type2]*". For example, "foo:STRING, bar:INTEGER, baz:FLOAT".
        # Corresponds to the JSON property `schemaInline`
        # @return [String]
        attr_accessor schema_inline: untyped

        # [Deprecated] The format of the schemaInline property.
        # Corresponds to the JSON property `schemaInlineFormat`
        # @return [String]
        attr_accessor schema_inline_format: untyped

        # Allows the schema of the destination table to be updated as a side effect of
        # the load job if a schema is autodetected or supplied in the job configuration.
        # Schema update options are supported in two cases: when writeDisposition is
        # WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and the destination
        # table is a partition of a table, specified by partition decorators. For normal
        # tables, WRITE_TRUNCATE will always overwrite the schema. One or more of the
        # following values are specified: * ALLOW_FIELD_ADDITION: allow adding a
        # nullable field to the schema. * ALLOW_FIELD_RELAXATION: allow relaxing a
        # required field in the original schema to nullable.
        # Corresponds to the JSON property `schemaUpdateOptions`
        # @return [Array<String>]
        attr_accessor schema_update_options: untyped

        # Optional. The number of rows at the top of a CSV file that BigQuery will skip
        # when loading the data. The default value is 0. This property is useful if you
        # have header rows in the file that should be skipped. When autodetect is on,
        # the behavior is the following: * skipLeadingRows unspecified - Autodetect
        # tries to detect headers in the first row. If they are not detected, the row is
        # read as data. Otherwise data is read starting from the second row. *
        # skipLeadingRows is 0 - Instructs autodetect that there are no headers and data
        # should be read starting from the first row. * skipLeadingRows = N > 0 -
        # Autodetect skips N-1 rows and tries to detect headers in row N. If headers are
        # not detected, row N is just skipped. Otherwise row N is used to extract column
        # names for the detected schema.
        # Corresponds to the JSON property `skipLeadingRows`
        # @return [Fixnum]
        attr_accessor skip_leading_rows: untyped

        # Optional. The format of the data files. For CSV files, specify "CSV". For
        # datastore backups, specify "DATASTORE_BACKUP". For newline-delimited JSON,
        # specify "NEWLINE_DELIMITED_JSON". For Avro, specify "AVRO". For parquet,
        # specify "PARQUET". For orc, specify "ORC". The default value is CSV.
        # Corresponds to the JSON property `sourceFormat`
        # @return [String]
        attr_accessor source_format: untyped

        # [Required] The fully-qualified URIs that point to your data in Google Cloud.
        # For Google Cloud Storage URIs: Each URI can contain one '*' wildcard character
        # and it must come after the 'bucket' name. Size limits related to load jobs
        # apply to external data sources. For Google Cloud Bigtable URIs: Exactly one
        # URI can be specified and it has be a fully specified and valid HTTPS URL for a
        # Google Cloud Bigtable table. For Google Cloud Datastore backups: Exactly one
        # URI can be specified. Also, the '*' wildcard character is not allowed.
        # Corresponds to the JSON property `sourceUris`
        # @return [Array<String>]
        attr_accessor source_uris: untyped

        # Time-based partitioning specification for the destination table. Only one of
        # timePartitioning and rangePartitioning should be specified.
        # Corresponds to the JSON property `timePartitioning`
        # @return [Google::Apis::BigqueryV2::TimePartitioning]
        attr_accessor time_partitioning: untyped

        # Optional. If sourceFormat is set to "AVRO", indicates whether to interpret
        # logical types as the corresponding BigQuery data type (for example, TIMESTAMP),
        # instead of using the raw type (for example, INTEGER).
        # Corresponds to the JSON property `useAvroLogicalTypes`
        # @return [Boolean]
        attr_accessor use_avro_logical_types: untyped

        alias use_avro_logical_types? use_avro_logical_types

        # Optional. Specifies the action that occurs if the destination table already
        # exists. The following values are supported: * WRITE_TRUNCATE: If the table
        # already exists, BigQuery overwrites the data, removes the constraints and uses
        # the schema from the load job. * WRITE_APPEND: If the table already exists,
        # BigQuery appends the data to the table. * WRITE_EMPTY: If the table already
        # exists and contains data, a 'duplicate' error is returned in the job result.
        # The default value is WRITE_APPEND. Each action is atomic and only occurs if
        # BigQuery is able to complete the job successfully. Creation, truncation and
        # append actions occur as one atomic update upon job completion.
        # Corresponds to the JSON property `writeDisposition`
        # @return [String]
        attr_accessor write_disposition: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # JobConfigurationQuery configures a BigQuery query job.
      class JobConfigurationQuery
        @allow_large_results: untyped

        @clustering: untyped

        @connection_properties: untyped

        @continuous: untyped

        @create_disposition: untyped

        @create_session: untyped

        @default_dataset: untyped

        @destination_encryption_configuration: untyped

        @destination_table: untyped

        @flatten_results: untyped

        @maximum_billing_tier: untyped

        @maximum_bytes_billed: untyped

        @parameter_mode: untyped

        @preserve_nulls: untyped

        @priority: untyped

        @query: untyped

        @query_parameters: untyped

        @range_partitioning: untyped

        @schema_update_options: untyped

        @script_options: untyped

        @system_variables: untyped

        @table_definitions: untyped

        @time_partitioning: untyped

        @use_legacy_sql: untyped

        @use_query_cache: untyped

        @user_defined_function_resources: untyped

        @write_disposition: untyped

        include Google::Apis::Core::Hashable

        # Optional. If true and query uses legacy SQL dialect, allows the query to
        # produce arbitrarily large result tables at a slight cost in performance.
        # Requires destinationTable to be set. For GoogleSQL queries, this flag is
        # ignored and large results are always allowed. However, you must still set
        # destinationTable when result size exceeds the allowed maximum response size.
        # Corresponds to the JSON property `allowLargeResults`
        # @return [Boolean]
        attr_accessor allow_large_results: untyped

        alias allow_large_results? allow_large_results

        # Configures table clustering.
        # Corresponds to the JSON property `clustering`
        # @return [Google::Apis::BigqueryV2::Clustering]
        attr_accessor clustering: untyped

        # Connection properties which can modify the query behavior.
        # Corresponds to the JSON property `connectionProperties`
        # @return [Array<Google::Apis::BigqueryV2::ConnectionProperty>]
        attr_accessor connection_properties: untyped

        # [Optional] Specifies whether the query should be executed as a continuous
        # query. The default value is false.
        # Corresponds to the JSON property `continuous`
        # @return [Boolean]
        attr_accessor continuous: untyped

        alias continuous? continuous

        # Optional. Specifies whether the job is allowed to create new tables. The
        # following values are supported: * CREATE_IF_NEEDED: If the table does not
        # exist, BigQuery creates the table. * CREATE_NEVER: The table must already
        # exist. If it does not, a 'notFound' error is returned in the job result. The
        # default value is CREATE_IF_NEEDED. Creation, truncation and append actions
        # occur as one atomic update upon job completion.
        # Corresponds to the JSON property `createDisposition`
        # @return [String]
        attr_accessor create_disposition: untyped

        # If this property is true, the job creates a new session using a randomly
        # generated session_id. To continue using a created session with subsequent
        # queries, pass the existing session identifier as a `ConnectionProperty` value.
        # The session identifier is returned as part of the `SessionInfo` message within
        # the query statistics. The new session's location will be set to `Job.
        # JobReference.location` if it is present, otherwise it's set to the default
        # location based on existing routing logic.
        # Corresponds to the JSON property `createSession`
        # @return [Boolean]
        attr_accessor create_session: untyped

        alias create_session? create_session

        # Identifier for a dataset.
        # Corresponds to the JSON property `defaultDataset`
        # @return [Google::Apis::BigqueryV2::DatasetReference]
        attr_accessor default_dataset: untyped

        # Configuration for Cloud KMS encryption settings.
        # Corresponds to the JSON property `destinationEncryptionConfiguration`
        # @return [Google::Apis::BigqueryV2::EncryptionConfiguration]
        attr_accessor destination_encryption_configuration: untyped

        # Optional. Describes the table where the query results should be stored. This
        # property must be set for large results that exceed the maximum response size.
        # For queries that produce anonymous (cached) results, this field will be
        # populated by BigQuery.
        # Corresponds to the JSON property `destinationTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor destination_table: untyped

        # Optional. If true and query uses legacy SQL dialect, flattens all nested and
        # repeated fields in the query results. allowLargeResults must be true if this
        # is set to false. For GoogleSQL queries, this flag is ignored and results are
        # never flattened.
        # Corresponds to the JSON property `flattenResults`
        # @return [Boolean]
        attr_accessor flatten_results: untyped

        alias flatten_results? flatten_results

        # Optional. [Deprecated] Maximum billing tier allowed for this query. The
        # billing tier controls the amount of compute resources allotted to the query,
        # and multiplies the on-demand cost of the query accordingly. A query that runs
        # within its allotted resources will succeed and indicate its billing tier in
        # statistics.query.billingTier, but if the query exceeds its allotted resources,
        # it will fail with billingTierLimitExceeded. WARNING: The billed byte amount
        # can be multiplied by an amount up to this number! Most users should not need
        # to alter this setting, and we recommend that you avoid introducing new uses of
        # it.
        # Corresponds to the JSON property `maximumBillingTier`
        # @return [Fixnum]
        attr_accessor maximum_billing_tier: untyped

        # Limits the bytes billed for this job. Queries that will have bytes billed
        # beyond this limit will fail (without incurring a charge). If unspecified, this
        # will be set to your project default.
        # Corresponds to the JSON property `maximumBytesBilled`
        # @return [Fixnum]
        attr_accessor maximum_bytes_billed: untyped

        # GoogleSQL only. Set to POSITIONAL to use positional (?) query parameters or to
        # NAMED to use named (@myparam) query parameters in this query.
        # Corresponds to the JSON property `parameterMode`
        # @return [String]
        attr_accessor parameter_mode: untyped

        # [Deprecated] This property is deprecated.
        # Corresponds to the JSON property `preserveNulls`
        # @return [Boolean]
        attr_accessor preserve_nulls: untyped

        alias preserve_nulls? preserve_nulls

        # Optional. Specifies a priority for the query. Possible values include
        # INTERACTIVE and BATCH. The default value is INTERACTIVE.
        # Corresponds to the JSON property `priority`
        # @return [String]
        attr_accessor priority: untyped

        # [Required] SQL query text to execute. The useLegacySql field can be used to
        # indicate whether the query uses legacy SQL or GoogleSQL.
        # Corresponds to the JSON property `query`
        # @return [String]
        attr_accessor query: untyped

        # Query parameters for GoogleSQL queries.
        # Corresponds to the JSON property `queryParameters`
        # @return [Array<Google::Apis::BigqueryV2::QueryParameter>]
        attr_accessor query_parameters: untyped

        # Range partitioning specification for the destination table. Only one of
        # timePartitioning and rangePartitioning should be specified.
        # Corresponds to the JSON property `rangePartitioning`
        # @return [Google::Apis::BigqueryV2::RangePartitioning]
        attr_accessor range_partitioning: untyped

        # Allows the schema of the destination table to be updated as a side effect of
        # the query job. Schema update options are supported in two cases: when
        # writeDisposition is WRITE_APPEND; when writeDisposition is WRITE_TRUNCATE and
        # the destination table is a partition of a table, specified by partition
        # decorators. For normal tables, WRITE_TRUNCATE will always overwrite the schema.
        # One or more of the following values are specified: * ALLOW_FIELD_ADDITION:
        # allow adding a nullable field to the schema. * ALLOW_FIELD_RELAXATION: allow
        # relaxing a required field in the original schema to nullable.
        # Corresponds to the JSON property `schemaUpdateOptions`
        # @return [Array<String>]
        attr_accessor schema_update_options: untyped

        # Options related to script execution.
        # Corresponds to the JSON property `scriptOptions`
        # @return [Google::Apis::BigqueryV2::ScriptOptions]
        attr_accessor script_options: untyped

        # System variables given to a query.
        # Corresponds to the JSON property `systemVariables`
        # @return [Google::Apis::BigqueryV2::SystemVariables]
        attr_accessor system_variables: untyped

        # Optional. You can specify external table definitions, which operate as
        # ephemeral tables that can be queried. These definitions are configured using a
        # JSON map, where the string key represents the table identifier, and the value
        # is the corresponding external data configuration object.
        # Corresponds to the JSON property `tableDefinitions`
        # @return [Hash<String,Google::Apis::BigqueryV2::ExternalDataConfiguration>]
        attr_accessor table_definitions: untyped

        # Time-based partitioning specification for the destination table. Only one of
        # timePartitioning and rangePartitioning should be specified.
        # Corresponds to the JSON property `timePartitioning`
        # @return [Google::Apis::BigqueryV2::TimePartitioning]
        attr_accessor time_partitioning: untyped

        # Optional. Specifies whether to use BigQuery's legacy SQL dialect for this
        # query. The default value is true. If set to false, the query will use BigQuery'
        # s GoogleSQL: https://cloud.google.com/bigquery/sql-reference/ When
        # useLegacySql is set to false, the value of flattenResults is ignored; query
        # will be run as if flattenResults is false.
        # Corresponds to the JSON property `useLegacySql`
        # @return [Boolean]
        attr_accessor use_legacy_sql: untyped

        alias use_legacy_sql? use_legacy_sql

        # Optional. Whether to look for the result in the query cache. The query cache
        # is a best-effort cache that will be flushed whenever tables in the query are
        # modified. Moreover, the query cache is only available when a query does not
        # have a destination table specified. The default value is true.
        # Corresponds to the JSON property `useQueryCache`
        # @return [Boolean]
        attr_accessor use_query_cache: untyped

        alias use_query_cache? use_query_cache

        # Describes user-defined function resources used in the query.
        # Corresponds to the JSON property `userDefinedFunctionResources`
        # @return [Array<Google::Apis::BigqueryV2::UserDefinedFunctionResource>]
        attr_accessor user_defined_function_resources: untyped

        # Optional. Specifies the action that occurs if the destination table already
        # exists. The following values are supported: * WRITE_TRUNCATE: If the table
        # already exists, BigQuery overwrites the data, removes the constraints, and
        # uses the schema from the query result. * WRITE_APPEND: If the table already
        # exists, BigQuery appends the data to the table. * WRITE_EMPTY: If the table
        # already exists and contains data, a 'duplicate' error is returned in the job
        # result. The default value is WRITE_EMPTY. Each action is atomic and only
        # occurs if BigQuery is able to complete the job successfully. Creation,
        # truncation and append actions occur as one atomic update upon job completion.
        # Corresponds to the JSON property `writeDisposition`
        # @return [String]
        attr_accessor write_disposition: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # JobConfigurationTableCopy configures a job that copies data from one table to
      # another. For more information on copying tables, see [Copy a table](https://
      # cloud.google.com/bigquery/docs/managing-tables#copy-table).
      class JobConfigurationTableCopy
        @create_disposition: untyped

        @destination_encryption_configuration: untyped

        @destination_expiration_time: untyped

        @destination_table: untyped

        @operation_type: untyped

        @source_table: untyped

        @source_tables: untyped

        @write_disposition: untyped

        include Google::Apis::Core::Hashable

        # Optional. Specifies whether the job is allowed to create new tables. The
        # following values are supported: * CREATE_IF_NEEDED: If the table does not
        # exist, BigQuery creates the table. * CREATE_NEVER: The table must already
        # exist. If it does not, a 'notFound' error is returned in the job result. The
        # default value is CREATE_IF_NEEDED. Creation, truncation and append actions
        # occur as one atomic update upon job completion.
        # Corresponds to the JSON property `createDisposition`
        # @return [String]
        attr_accessor create_disposition: untyped

        # Configuration for Cloud KMS encryption settings.
        # Corresponds to the JSON property `destinationEncryptionConfiguration`
        # @return [Google::Apis::BigqueryV2::EncryptionConfiguration]
        attr_accessor destination_encryption_configuration: untyped

        # Optional. The time when the destination table expires. Expired tables will be
        # deleted and their storage reclaimed.
        # Corresponds to the JSON property `destinationExpirationTime`
        # @return [String]
        attr_accessor destination_expiration_time: untyped

        # [Required] The destination table.
        # Corresponds to the JSON property `destinationTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor destination_table: untyped

        # Optional. Supported operation types in table copy job.
        # Corresponds to the JSON property `operationType`
        # @return [String]
        attr_accessor operation_type: untyped

        # [Pick one] Source table to copy.
        # Corresponds to the JSON property `sourceTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor source_table: untyped

        # [Pick one] Source tables to copy.
        # Corresponds to the JSON property `sourceTables`
        # @return [Array<Google::Apis::BigqueryV2::TableReference>]
        attr_accessor source_tables: untyped

        # Optional. Specifies the action that occurs if the destination table already
        # exists. The following values are supported: * WRITE_TRUNCATE: If the table
        # already exists, BigQuery overwrites the table data and uses the schema and
        # table constraints from the source table. * WRITE_APPEND: If the table already
        # exists, BigQuery appends the data to the table. * WRITE_EMPTY: If the table
        # already exists and contains data, a 'duplicate' error is returned in the job
        # result. The default value is WRITE_EMPTY. Each action is atomic and only
        # occurs if BigQuery is able to complete the job successfully. Creation,
        # truncation and append actions occur as one atomic update upon job completion.
        # Corresponds to the JSON property `writeDisposition`
        # @return [String]
        attr_accessor write_disposition: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Reason about why a Job was created from a [`jobs.query`](https://cloud.google.
      # com/bigquery/docs/reference/rest/v2/jobs/query) method when used with `
      # JOB_CREATION_OPTIONAL` Job creation mode. For [`jobs.insert`](https://cloud.
      # google.com/bigquery/docs/reference/rest/v2/jobs/insert) method calls it will
      # always be `REQUESTED`. [Preview](/products/#product-launch-stages)
      class JobCreationReason
        @code: untyped

        include Google::Apis::Core::Hashable

        # Output only. Specifies the high level reason why a Job was created.
        # Corresponds to the JSON property `code`
        # @return [String]
        attr_accessor code: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # JobList is the response format for a jobs.list call.
      class JobList
        @etag: untyped

        @jobs: untyped

        @kind: untyped

        @next_page_token: untyped

        @unreachable: untyped

        include Google::Apis::Core::Hashable

        # A hash of this page of results.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # List of jobs that were requested.
        # Corresponds to the JSON property `jobs`
        # @return [Array<Google::Apis::BigqueryV2::JobList::Job>]
        attr_accessor jobs: untyped

        # The resource type of the response.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # A token to request the next page of results.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor next_page_token: untyped

        # A list of skipped locations that were unreachable. For more information about
        # BigQuery locations, see: https://cloud.google.com/bigquery/docs/locations.
        # Example: "europe-west5"
        # Corresponds to the JSON property `unreachable`
        # @return [Array<String>]
        attr_accessor unreachable: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # ListFormatJob is a partial projection of job information returned as part of a
        # jobs.list response.
        class Job
          @configuration: untyped

          @error_result: untyped

          @id: untyped

          @job_reference: untyped

          @kind: untyped

          @principal_subject: untyped

          @state: untyped

          @statistics: untyped

          @status: untyped

          @user_email: untyped

          include Google::Apis::Core::Hashable

          # Required. Describes the job configuration.
          # Corresponds to the JSON property `configuration`
          # @return [Google::Apis::BigqueryV2::JobConfiguration]
          attr_accessor configuration: untyped

          # Error details.
          # Corresponds to the JSON property `errorResult`
          # @return [Google::Apis::BigqueryV2::ErrorProto]
          attr_accessor error_result: untyped

          # Unique opaque ID of the job.
          # Corresponds to the JSON property `id`
          # @return [String]
          attr_accessor id: untyped

          # A job reference is a fully qualified identifier for referring to a job.
          # Corresponds to the JSON property `jobReference`
          # @return [Google::Apis::BigqueryV2::JobReference]
          attr_accessor job_reference: untyped

          # The resource type.
          # Corresponds to the JSON property `kind`
          # @return [String]
          attr_accessor kind: untyped

          # [Full-projection-only] String representation of identity of requesting party.
          # Populated for both first- and third-party identities. Only present for APIs
          # that support third-party identities.
          # Corresponds to the JSON property `principal_subject`
          # @return [String]
          attr_accessor principal_subject: untyped

          # Running state of the job. When the state is DONE, errorResult can be checked
          # to determine whether the job succeeded or failed.
          # Corresponds to the JSON property `state`
          # @return [String]
          attr_accessor state: untyped

          # Statistics for a single job execution.
          # Corresponds to the JSON property `statistics`
          # @return [Google::Apis::BigqueryV2::JobStatistics]
          attr_accessor statistics: untyped

          # [Full-projection-only] Describes the status of this job.
          # Corresponds to the JSON property `status`
          # @return [Google::Apis::BigqueryV2::JobStatus]
          attr_accessor status: untyped

          # [Full-projection-only] Email address of the user who ran the job.
          # Corresponds to the JSON property `user_email`
          # @return [String]
          attr_accessor user_email: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # A job reference is a fully qualified identifier for referring to a job.
      class JobReference
        @job_id: untyped

        @location: untyped

        @project_id: untyped

        include Google::Apis::Core::Hashable

        # Required. The ID of the job. The ID must contain only letters (a-z, A-Z),
        # numbers (0-9), underscores (_), or dashes (-). The maximum length is 1,024
        # characters.
        # Corresponds to the JSON property `jobId`
        # @return [String]
        attr_accessor job_id: untyped

        # Optional. The geographic location of the job. The default value is US. For
        # more information about BigQuery locations, see: https://cloud.google.com/
        # bigquery/docs/locations
        # Corresponds to the JSON property `location`
        # @return [String]
        attr_accessor location: untyped

        # Required. The ID of the project containing this job.
        # Corresponds to the JSON property `projectId`
        # @return [String]
        attr_accessor project_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for a single job execution.
      class JobStatistics
        @completion_ratio: untyped

        @copy: untyped

        @creation_time: untyped

        @data_masking_statistics: untyped

        @edition: untyped

        @end_time: untyped

        @extract: untyped

        @final_execution_duration_ms: untyped

        @load: untyped

        @num_child_jobs: untyped

        @parent_job_id: untyped

        @query: untyped

        @quota_deferments: untyped

        @reservation_usage: untyped

        @reservation_id: untyped

        @row_level_security_statistics: untyped

        @script_statistics: untyped

        @session_info: untyped

        @start_time: untyped

        @total_bytes_processed: untyped

        @total_slot_ms: untyped

        @transaction_info: untyped

        include Google::Apis::Core::Hashable

        # Output only. [TrustedTester] Job progress (0.0 -> 1.0) for LOAD and EXTRACT
        # jobs.
        # Corresponds to the JSON property `completionRatio`
        # @return [Float]
        attr_accessor completion_ratio: untyped

        # Statistics for a copy job.
        # Corresponds to the JSON property `copy`
        # @return [Google::Apis::BigqueryV2::JobStatistics5]
        attr_accessor copy: untyped

        # Output only. Creation time of this job, in milliseconds since the epoch. This
        # field will be present on all jobs.
        # Corresponds to the JSON property `creationTime`
        # @return [Fixnum]
        attr_accessor creation_time: untyped

        # Statistics for data-masking.
        # Corresponds to the JSON property `dataMaskingStatistics`
        # @return [Google::Apis::BigqueryV2::DataMaskingStatistics]
        attr_accessor data_masking_statistics: untyped

        # Output only. Name of edition corresponding to the reservation for this job at
        # the time of this update.
        # Corresponds to the JSON property `edition`
        # @return [String]
        attr_accessor edition: untyped

        # Output only. End time of this job, in milliseconds since the epoch. This field
        # will be present whenever a job is in the DONE state.
        # Corresponds to the JSON property `endTime`
        # @return [Fixnum]
        attr_accessor end_time: untyped

        # Statistics for an extract job.
        # Corresponds to the JSON property `extract`
        # @return [Google::Apis::BigqueryV2::JobStatistics4]
        attr_accessor extract: untyped

        # Output only. The duration in milliseconds of the execution of the final
        # attempt of this job, as BigQuery may internally re-attempt to execute the job.
        # Corresponds to the JSON property `finalExecutionDurationMs`
        # @return [Fixnum]
        attr_accessor final_execution_duration_ms: untyped

        # Statistics for a load job.
        # Corresponds to the JSON property `load`
        # @return [Google::Apis::BigqueryV2::JobStatistics3]
        attr_accessor load: untyped

        # Output only. Number of child jobs executed.
        # Corresponds to the JSON property `numChildJobs`
        # @return [Fixnum]
        attr_accessor num_child_jobs: untyped

        # Output only. If this is a child job, specifies the job ID of the parent.
        # Corresponds to the JSON property `parentJobId`
        # @return [String]
        attr_accessor parent_job_id: untyped

        # Statistics for a query job.
        # Corresponds to the JSON property `query`
        # @return [Google::Apis::BigqueryV2::JobStatistics2]
        attr_accessor query: untyped

        # Output only. Quotas which delayed this job's start time.
        # Corresponds to the JSON property `quotaDeferments`
        # @return [Array<String>]
        attr_accessor quota_deferments: untyped

        # Output only. Job resource usage breakdown by reservation. This field reported
        # misleading information and will no longer be populated.
        # Corresponds to the JSON property `reservationUsage`
        # @return [Array<Google::Apis::BigqueryV2::JobStatistics::ReservationUsage>]
        attr_accessor reservation_usage: untyped

        # Output only. Name of the primary reservation assigned to this job. Note that
        # this could be different than reservations reported in the reservation usage
        # field if parent reservations were used to execute this job.
        # Corresponds to the JSON property `reservation_id`
        # @return [String]
        attr_accessor reservation_id: untyped

        # Statistics for row-level security.
        # Corresponds to the JSON property `rowLevelSecurityStatistics`
        # @return [Google::Apis::BigqueryV2::RowLevelSecurityStatistics]
        attr_accessor row_level_security_statistics: untyped

        # Job statistics specific to the child job of a script.
        # Corresponds to the JSON property `scriptStatistics`
        # @return [Google::Apis::BigqueryV2::ScriptStatistics]
        attr_accessor script_statistics: untyped

        # [Preview] Information related to sessions.
        # Corresponds to the JSON property `sessionInfo`
        # @return [Google::Apis::BigqueryV2::SessionInfo]
        attr_accessor session_info: untyped

        # Output only. Start time of this job, in milliseconds since the epoch. This
        # field will be present when the job transitions from the PENDING state to
        # either RUNNING or DONE.
        # Corresponds to the JSON property `startTime`
        # @return [Fixnum]
        attr_accessor start_time: untyped

        # Output only. Total bytes processed for the job.
        # Corresponds to the JSON property `totalBytesProcessed`
        # @return [Fixnum]
        attr_accessor total_bytes_processed: untyped

        # Output only. Slot-milliseconds for the job.
        # Corresponds to the JSON property `totalSlotMs`
        # @return [Fixnum]
        attr_accessor total_slot_ms: untyped

        # [Alpha] Information of a multi-statement transaction.
        # Corresponds to the JSON property `transactionInfo`
        # @return [Google::Apis::BigqueryV2::TransactionInfo]
        attr_accessor transaction_info: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # Job resource usage breakdown by reservation.
        class ReservationUsage
          @name: untyped

          @slot_ms: untyped

          include Google::Apis::Core::Hashable

          # Reservation name or "unreserved" for on-demand resource usage and multi-
          # statement queries.
          # Corresponds to the JSON property `name`
          # @return [String]
          attr_accessor name: untyped

          # Total slot milliseconds used by the reservation for a particular job.
          # Corresponds to the JSON property `slotMs`
          # @return [Fixnum]
          attr_accessor slot_ms: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # Statistics for a query job.
      class JobStatistics2
        @bi_engine_statistics: untyped

        @billing_tier: untyped

        @cache_hit: untyped

        @dcl_target_dataset: untyped

        @dcl_target_table: untyped

        @dcl_target_view: untyped

        @ddl_affected_row_access_policy_count: untyped

        @ddl_destination_table: untyped

        @ddl_operation_performed: untyped

        @ddl_target_dataset: untyped

        @ddl_target_routine: untyped

        @ddl_target_row_access_policy: untyped

        @ddl_target_table: untyped

        @dml_stats: untyped

        @estimated_bytes_processed: untyped

        @export_data_statistics: untyped

        @external_service_costs: untyped

        @load_query_statistics: untyped

        @materialized_view_statistics: untyped

        @metadata_cache_statistics: untyped

        @ml_statistics: untyped

        @model_training: untyped

        @model_training_current_iteration: untyped

        @model_training_expected_total_iteration: untyped

        @num_dml_affected_rows: untyped

        @performance_insights: untyped

        @query_info: untyped

        @query_plan: untyped

        @referenced_routines: untyped

        @referenced_tables: untyped

        @reservation_usage: untyped

        @schema: untyped

        @search_statistics: untyped

        @spark_statistics: untyped

        @statement_type: untyped

        @timeline: untyped

        @total_bytes_billed: untyped

        @total_bytes_processed: untyped

        @total_bytes_processed_accuracy: untyped

        @total_partitions_processed: untyped

        @total_slot_ms: untyped

        @transferred_bytes: untyped

        @undeclared_query_parameters: untyped

        @vector_search_statistics: untyped

        include Google::Apis::Core::Hashable

        # Statistics for a BI Engine specific query. Populated as part of JobStatistics2
        # Corresponds to the JSON property `biEngineStatistics`
        # @return [Google::Apis::BigqueryV2::BiEngineStatistics]
        attr_accessor bi_engine_statistics: untyped

        # Output only. Billing tier for the job. This is a BigQuery-specific concept
        # which is not related to the Google Cloud notion of "free tier". The value here
        # is a measure of the query's resource consumption relative to the amount of
        # data scanned. For on-demand queries, the limit is 100, and all queries within
        # this limit are billed at the standard on-demand rates. On-demand queries that
        # exceed this limit will fail with a billingTierLimitExceeded error.
        # Corresponds to the JSON property `billingTier`
        # @return [Fixnum]
        attr_accessor billing_tier: untyped

        # Output only. Whether the query result was fetched from the query cache.
        # Corresponds to the JSON property `cacheHit`
        # @return [Boolean]
        attr_accessor cache_hit: untyped

        alias cache_hit? cache_hit

        # Identifier for a dataset.
        # Corresponds to the JSON property `dclTargetDataset`
        # @return [Google::Apis::BigqueryV2::DatasetReference]
        attr_accessor dcl_target_dataset: untyped

        # Output only. Referenced table for DCL statement.
        # Corresponds to the JSON property `dclTargetTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor dcl_target_table: untyped

        # Output only. Referenced view for DCL statement.
        # Corresponds to the JSON property `dclTargetView`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor dcl_target_view: untyped

        # Output only. The number of row access policies affected by a DDL statement.
        # Present only for DROP ALL ROW ACCESS POLICIES queries.
        # Corresponds to the JSON property `ddlAffectedRowAccessPolicyCount`
        # @return [Fixnum]
        attr_accessor ddl_affected_row_access_policy_count: untyped

        # Output only. The table after rename. Present only for ALTER TABLE RENAME TO
        # query.
        # Corresponds to the JSON property `ddlDestinationTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor ddl_destination_table: untyped

        # Output only. The DDL operation performed, possibly dependent on the pre-
        # existence of the DDL target.
        # Corresponds to the JSON property `ddlOperationPerformed`
        # @return [String]
        attr_accessor ddl_operation_performed: untyped

        # Identifier for a dataset.
        # Corresponds to the JSON property `ddlTargetDataset`
        # @return [Google::Apis::BigqueryV2::DatasetReference]
        attr_accessor ddl_target_dataset: untyped

        # Id path of a routine.
        # Corresponds to the JSON property `ddlTargetRoutine`
        # @return [Google::Apis::BigqueryV2::RoutineReference]
        attr_accessor ddl_target_routine: untyped

        # Id path of a row access policy.
        # Corresponds to the JSON property `ddlTargetRowAccessPolicy`
        # @return [Google::Apis::BigqueryV2::RowAccessPolicyReference]
        attr_accessor ddl_target_row_access_policy: untyped

        # Output only. The DDL target table. Present only for CREATE/DROP TABLE/VIEW and
        # DROP ALL ROW ACCESS POLICIES queries.
        # Corresponds to the JSON property `ddlTargetTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor ddl_target_table: untyped

        # Detailed statistics for DML statements
        # Corresponds to the JSON property `dmlStats`
        # @return [Google::Apis::BigqueryV2::DmlStatistics]
        attr_accessor dml_stats: untyped

        # Output only. The original estimate of bytes processed for the job.
        # Corresponds to the JSON property `estimatedBytesProcessed`
        # @return [Fixnum]
        attr_accessor estimated_bytes_processed: untyped

        # Statistics for the EXPORT DATA statement as part of Query Job. EXTRACT JOB
        # statistics are populated in JobStatistics4.
        # Corresponds to the JSON property `exportDataStatistics`
        # @return [Google::Apis::BigqueryV2::ExportDataStatistics]
        attr_accessor export_data_statistics: untyped

        # Output only. Job cost breakdown as bigquery internal cost and external service
        # costs.
        # Corresponds to the JSON property `externalServiceCosts`
        # @return [Array<Google::Apis::BigqueryV2::ExternalServiceCost>]
        attr_accessor external_service_costs: untyped

        # Statistics for a LOAD query.
        # Corresponds to the JSON property `loadQueryStatistics`
        # @return [Google::Apis::BigqueryV2::LoadQueryStatistics]
        attr_accessor load_query_statistics: untyped

        # Statistics of materialized views considered in a query job.
        # Corresponds to the JSON property `materializedViewStatistics`
        # @return [Google::Apis::BigqueryV2::MaterializedViewStatistics]
        attr_accessor materialized_view_statistics: untyped

        # Statistics for metadata caching in BigLake tables.
        # Corresponds to the JSON property `metadataCacheStatistics`
        # @return [Google::Apis::BigqueryV2::MetadataCacheStatistics]
        attr_accessor metadata_cache_statistics: untyped

        # Job statistics specific to a BigQuery ML training job.
        # Corresponds to the JSON property `mlStatistics`
        # @return [Google::Apis::BigqueryV2::MlStatistics]
        attr_accessor ml_statistics: untyped

        # Deprecated.
        # Corresponds to the JSON property `modelTraining`
        # @return [Google::Apis::BigqueryV2::BigQueryModelTraining]
        attr_accessor model_training: untyped

        # Deprecated.
        # Corresponds to the JSON property `modelTrainingCurrentIteration`
        # @return [Fixnum]
        attr_accessor model_training_current_iteration: untyped

        # Deprecated.
        # Corresponds to the JSON property `modelTrainingExpectedTotalIteration`
        # @return [Fixnum]
        attr_accessor model_training_expected_total_iteration: untyped

        # Output only. The number of rows affected by a DML statement. Present only for
        # DML statements INSERT, UPDATE or DELETE.
        # Corresponds to the JSON property `numDmlAffectedRows`
        # @return [Fixnum]
        attr_accessor num_dml_affected_rows: untyped

        # Performance insights for the job.
        # Corresponds to the JSON property `performanceInsights`
        # @return [Google::Apis::BigqueryV2::PerformanceInsights]
        attr_accessor performance_insights: untyped

        # Query optimization information for a QUERY job.
        # Corresponds to the JSON property `queryInfo`
        # @return [Google::Apis::BigqueryV2::QueryInfo]
        attr_accessor query_info: untyped

        # Output only. Describes execution plan for the query.
        # Corresponds to the JSON property `queryPlan`
        # @return [Array<Google::Apis::BigqueryV2::ExplainQueryStage>]
        attr_accessor query_plan: untyped

        # Output only. Referenced routines for the job.
        # Corresponds to the JSON property `referencedRoutines`
        # @return [Array<Google::Apis::BigqueryV2::RoutineReference>]
        attr_accessor referenced_routines: untyped

        # Output only. Referenced tables for the job. Queries that reference more than
        # 50 tables will not have a complete list.
        # Corresponds to the JSON property `referencedTables`
        # @return [Array<Google::Apis::BigqueryV2::TableReference>]
        attr_accessor referenced_tables: untyped

        # Output only. Job resource usage breakdown by reservation. This field reported
        # misleading information and will no longer be populated.
        # Corresponds to the JSON property `reservationUsage`
        # @return [Array<Google::Apis::BigqueryV2::JobStatistics2::ReservationUsage>]
        attr_accessor reservation_usage: untyped

        # Schema of a table
        # Corresponds to the JSON property `schema`
        # @return [Google::Apis::BigqueryV2::TableSchema]
        attr_accessor schema: untyped

        # Statistics for a search query. Populated as part of JobStatistics2.
        # Corresponds to the JSON property `searchStatistics`
        # @return [Google::Apis::BigqueryV2::SearchStatistics]
        attr_accessor search_statistics: untyped

        # Statistics for a BigSpark query. Populated as part of JobStatistics2
        # Corresponds to the JSON property `sparkStatistics`
        # @return [Google::Apis::BigqueryV2::SparkStatistics]
        attr_accessor spark_statistics: untyped

        # Output only. The type of query statement, if valid. Possible values: * `SELECT`
        # : [`SELECT`](/bigquery/docs/reference/standard-sql/query-syntax#select_list)
        # statement. * `ASSERT`: [`ASSERT`](/bigquery/docs/reference/standard-sql/
        # debugging-statements#assert) statement. * `INSERT`: [`INSERT`](/bigquery/docs/
        # reference/standard-sql/dml-syntax#insert_statement) statement. * `UPDATE`: [`
        # UPDATE`](/bigquery/docs/reference/standard-sql/query-syntax#update_statement)
        # statement. * `DELETE`: [`DELETE`](/bigquery/docs/reference/standard-sql/data-
        # manipulation-language) statement. * `MERGE`: [`MERGE`](/bigquery/docs/
        # reference/standard-sql/data-manipulation-language) statement. * `CREATE_TABLE`:
        # [`CREATE TABLE`](/bigquery/docs/reference/standard-sql/data-definition-
        # language#create_table_statement) statement, without `AS SELECT`. * `
        # CREATE_TABLE_AS_SELECT`: [`CREATE TABLE AS SELECT`](/bigquery/docs/reference/
        # standard-sql/data-definition-language#query_statement) statement. * `
        # CREATE_VIEW`: [`CREATE VIEW`](/bigquery/docs/reference/standard-sql/data-
        # definition-language#create_view_statement) statement. * `CREATE_MODEL`: [`
        # CREATE MODEL`](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-
        # create#create_model_statement) statement. * `CREATE_MATERIALIZED_VIEW`: [`
        # CREATE MATERIALIZED VIEW`](/bigquery/docs/reference/standard-sql/data-
        # definition-language#create_materialized_view_statement) statement. * `
        # CREATE_FUNCTION`: [`CREATE FUNCTION`](/bigquery/docs/reference/standard-sql/
        # data-definition-language#create_function_statement) statement. * `
        # CREATE_TABLE_FUNCTION`: [`CREATE TABLE FUNCTION`](/bigquery/docs/reference/
        # standard-sql/data-definition-language#create_table_function_statement)
        # statement. * `CREATE_PROCEDURE`: [`CREATE PROCEDURE`](/bigquery/docs/reference/
        # standard-sql/data-definition-language#create_procedure) statement. * `
        # CREATE_ROW_ACCESS_POLICY`: [`CREATE ROW ACCESS POLICY`](/bigquery/docs/
        # reference/standard-sql/data-definition-language#
        # create_row_access_policy_statement) statement. * `CREATE_SCHEMA`: [`CREATE
        # SCHEMA`](/bigquery/docs/reference/standard-sql/data-definition-language#
        # create_schema_statement) statement. * `CREATE_SNAPSHOT_TABLE`: [`CREATE
        # SNAPSHOT TABLE`](/bigquery/docs/reference/standard-sql/data-definition-
        # language#create_snapshot_table_statement) statement. * `CREATE_SEARCH_INDEX`: [
        # `CREATE SEARCH INDEX`](/bigquery/docs/reference/standard-sql/data-definition-
        # language#create_search_index_statement) statement. * `DROP_TABLE`: [`DROP
        # TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#
        # drop_table_statement) statement. * `DROP_EXTERNAL_TABLE`: [`DROP EXTERNAL
        # TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#
        # drop_external_table_statement) statement. * `DROP_VIEW`: [`DROP VIEW`](/
        # bigquery/docs/reference/standard-sql/data-definition-language#
        # drop_view_statement) statement. * `DROP_MODEL`: [`DROP MODEL`](/bigquery-ml/
        # docs/reference/standard-sql/bigqueryml-syntax-drop-model) statement. * `
        # DROP_MATERIALIZED_VIEW`: [`DROP MATERIALIZED VIEW`](/bigquery/docs/reference/
        # standard-sql/data-definition-language#drop_materialized_view_statement)
        # statement. * `DROP_FUNCTION` : [`DROP FUNCTION`](/bigquery/docs/reference/
        # standard-sql/data-definition-language#drop_function_statement) statement. * `
        # DROP_TABLE_FUNCTION` : [`DROP TABLE FUNCTION`](/bigquery/docs/reference/
        # standard-sql/data-definition-language#drop_table_function) statement. * `
        # DROP_PROCEDURE`: [`DROP PROCEDURE`](/bigquery/docs/reference/standard-sql/data-
        # definition-language#drop_procedure_statement) statement. * `DROP_SEARCH_INDEX`:
        # [`DROP SEARCH INDEX`](/bigquery/docs/reference/standard-sql/data-definition-
        # language#drop_search_index) statement. * `DROP_SCHEMA`: [`DROP SCHEMA`](/
        # bigquery/docs/reference/standard-sql/data-definition-language#
        # drop_schema_statement) statement. * `DROP_SNAPSHOT_TABLE`: [`DROP SNAPSHOT
        # TABLE`](/bigquery/docs/reference/standard-sql/data-definition-language#
        # drop_snapshot_table_statement) statement. * `DROP_ROW_ACCESS_POLICY`: [`DROP [
        # ALL] ROW ACCESS POLICY|POLICIES`](/bigquery/docs/reference/standard-sql/data-
        # definition-language#drop_row_access_policy_statement) statement. * `
        # ALTER_TABLE`: [`ALTER TABLE`](/bigquery/docs/reference/standard-sql/data-
        # definition-language#alter_table_set_options_statement) statement. * `
        # ALTER_VIEW`: [`ALTER VIEW`](/bigquery/docs/reference/standard-sql/data-
        # definition-language#alter_view_set_options_statement) statement. * `
        # ALTER_MATERIALIZED_VIEW`: [`ALTER MATERIALIZED VIEW`](/bigquery/docs/reference/
        # standard-sql/data-definition-language#
        # alter_materialized_view_set_options_statement) statement. * `ALTER_SCHEMA`: [`
        # ALTER SCHEMA`](/bigquery/docs/reference/standard-sql/data-definition-language#
        # aalter_schema_set_options_statement) statement. * `SCRIPT`: [`SCRIPT`](/
        # bigquery/docs/reference/standard-sql/procedural-language). * `TRUNCATE_TABLE`:
        # [`TRUNCATE TABLE`](/bigquery/docs/reference/standard-sql/dml-syntax#
        # truncate_table_statement) statement. * `CREATE_EXTERNAL_TABLE`: [`CREATE
        # EXTERNAL TABLE`](/bigquery/docs/reference/standard-sql/data-definition-
        # language#create_external_table_statement) statement. * `EXPORT_DATA`: [`EXPORT
        # DATA`](/bigquery/docs/reference/standard-sql/other-statements#
        # export_data_statement) statement. * `EXPORT_MODEL`: [`EXPORT MODEL`](/bigquery-
        # ml/docs/reference/standard-sql/bigqueryml-syntax-export-model) statement. * `
        # LOAD_DATA`: [`LOAD DATA`](/bigquery/docs/reference/standard-sql/other-
        # statements#load_data_statement) statement. * `CALL`: [`CALL`](/bigquery/docs/
        # reference/standard-sql/procedural-language#call) statement.
        # Corresponds to the JSON property `statementType`
        # @return [String]
        attr_accessor statement_type: untyped

        # Output only. Describes a timeline of job execution.
        # Corresponds to the JSON property `timeline`
        # @return [Array<Google::Apis::BigqueryV2::QueryTimelineSample>]
        attr_accessor timeline: untyped

        # Output only. If the project is configured to use on-demand pricing, then this
        # field contains the total bytes billed for the job. If the project is
        # configured to use flat-rate pricing, then you are not billed for bytes and
        # this field is informational only.
        # Corresponds to the JSON property `totalBytesBilled`
        # @return [Fixnum]
        attr_accessor total_bytes_billed: untyped

        # Output only. Total bytes processed for the job.
        # Corresponds to the JSON property `totalBytesProcessed`
        # @return [Fixnum]
        attr_accessor total_bytes_processed: untyped

        # Output only. For dry-run jobs, totalBytesProcessed is an estimate and this
        # field specifies the accuracy of the estimate. Possible values can be: UNKNOWN:
        # accuracy of the estimate is unknown. PRECISE: estimate is precise. LOWER_BOUND:
        # estimate is lower bound of what the query would cost. UPPER_BOUND: estimate
        # is upper bound of what the query would cost.
        # Corresponds to the JSON property `totalBytesProcessedAccuracy`
        # @return [String]
        attr_accessor total_bytes_processed_accuracy: untyped

        # Output only. Total number of partitions processed from all partitioned tables
        # referenced in the job.
        # Corresponds to the JSON property `totalPartitionsProcessed`
        # @return [Fixnum]
        attr_accessor total_partitions_processed: untyped

        # Output only. Slot-milliseconds for the job.
        # Corresponds to the JSON property `totalSlotMs`
        # @return [Fixnum]
        attr_accessor total_slot_ms: untyped

        # Output only. Total bytes transferred for cross-cloud queries such as Cross
        # Cloud Transfer and CREATE TABLE AS SELECT (CTAS).
        # Corresponds to the JSON property `transferredBytes`
        # @return [Fixnum]
        attr_accessor transferred_bytes: untyped

        # Output only. GoogleSQL only: list of undeclared query parameters detected
        # during a dry run validation.
        # Corresponds to the JSON property `undeclaredQueryParameters`
        # @return [Array<Google::Apis::BigqueryV2::QueryParameter>]
        attr_accessor undeclared_query_parameters: untyped

        # Statistics for a vector search query. Populated as part of JobStatistics2.
        # Corresponds to the JSON property `vectorSearchStatistics`
        # @return [Google::Apis::BigqueryV2::VectorSearchStatistics]
        attr_accessor vector_search_statistics: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # Job resource usage breakdown by reservation.
        class ReservationUsage
          @name: untyped

          @slot_ms: untyped

          include Google::Apis::Core::Hashable

          # Reservation name or "unreserved" for on-demand resource usage and multi-
          # statement queries.
          # Corresponds to the JSON property `name`
          # @return [String]
          attr_accessor name: untyped

          # Total slot milliseconds used by the reservation for a particular job.
          # Corresponds to the JSON property `slotMs`
          # @return [Fixnum]
          attr_accessor slot_ms: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # Statistics for a load job.
      class JobStatistics3
        @bad_records: untyped

        @input_file_bytes: untyped

        @input_files: untyped

        @output_bytes: untyped

        @output_rows: untyped

        @timeline: untyped

        include Google::Apis::Core::Hashable

        # Output only. The number of bad records encountered. Note that if the job has
        # failed because of more bad records encountered than the maximum allowed in the
        # load job configuration, then this number can be less than the total number of
        # bad records present in the input data.
        # Corresponds to the JSON property `badRecords`
        # @return [Fixnum]
        attr_accessor bad_records: untyped

        # Output only. Number of bytes of source data in a load job.
        # Corresponds to the JSON property `inputFileBytes`
        # @return [Fixnum]
        attr_accessor input_file_bytes: untyped

        # Output only. Number of source files in a load job.
        # Corresponds to the JSON property `inputFiles`
        # @return [Fixnum]
        attr_accessor input_files: untyped

        # Output only. Size of the loaded data in bytes. Note that while a load job is
        # in the running state, this value may change.
        # Corresponds to the JSON property `outputBytes`
        # @return [Fixnum]
        attr_accessor output_bytes: untyped

        # Output only. Number of rows imported in a load job. Note that while an import
        # job is in the running state, this value may change.
        # Corresponds to the JSON property `outputRows`
        # @return [Fixnum]
        attr_accessor output_rows: untyped

        # Output only. Describes a timeline of job execution.
        # Corresponds to the JSON property `timeline`
        # @return [Array<Google::Apis::BigqueryV2::QueryTimelineSample>]
        attr_accessor timeline: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for an extract job.
      class JobStatistics4
        @destination_uri_file_counts: untyped

        @input_bytes: untyped

        @timeline: untyped

        include Google::Apis::Core::Hashable

        # Output only. Number of files per destination URI or URI pattern specified in
        # the extract configuration. These values will be in the same order as the URIs
        # specified in the 'destinationUris' field.
        # Corresponds to the JSON property `destinationUriFileCounts`
        # @return [Array<Fixnum>]
        attr_accessor destination_uri_file_counts: untyped

        # Output only. Number of user bytes extracted into the result. This is the byte
        # count as computed by BigQuery for billing purposes and doesn't have any
        # relationship with the number of actual result bytes extracted in the desired
        # format.
        # Corresponds to the JSON property `inputBytes`
        # @return [Fixnum]
        attr_accessor input_bytes: untyped

        # Output only. Describes a timeline of job execution.
        # Corresponds to the JSON property `timeline`
        # @return [Array<Google::Apis::BigqueryV2::QueryTimelineSample>]
        attr_accessor timeline: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for a copy job.
      class JobStatistics5
        @copied_logical_bytes: untyped

        @copied_rows: untyped

        include Google::Apis::Core::Hashable

        # Output only. Number of logical bytes copied to the destination table.
        # Corresponds to the JSON property `copiedLogicalBytes`
        # @return [Fixnum]
        attr_accessor copied_logical_bytes: untyped

        # Output only. Number of rows copied to the destination table.
        # Corresponds to the JSON property `copiedRows`
        # @return [Fixnum]
        attr_accessor copied_rows: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class JobStatus
        @error_result: untyped

        @errors: untyped

        @state: untyped

        include Google::Apis::Core::Hashable

        # Error details.
        # Corresponds to the JSON property `errorResult`
        # @return [Google::Apis::BigqueryV2::ErrorProto]
        attr_accessor error_result: untyped

        # Output only. The first errors encountered during the running of the job. The
        # final message includes the number of errors that caused the process to stop.
        # Errors here do not necessarily mean that the job has not completed or was
        # unsuccessful.
        # Corresponds to the JSON property `errors`
        # @return [Array<Google::Apis::BigqueryV2::ErrorProto>]
        attr_accessor errors: untyped

        # Output only. Running state of the job. Valid states include 'PENDING', '
        # RUNNING', and 'DONE'.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor state: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Represents privacy policy associated with "join restrictions". Join
      # restriction gives data providers the ability to enforce joins on the '
      # join_allowed_columns' when data is queried from a privacy protected view.
      class JoinRestrictionPolicy
        @join_allowed_columns: untyped

        @join_condition: untyped

        include Google::Apis::Core::Hashable

        # Optional. The only columns that joins are allowed on. This field is must be
        # specified for join_conditions JOIN_ANY and JOIN_ALL and it cannot be set for
        # JOIN_BLOCKED.
        # Corresponds to the JSON property `joinAllowedColumns`
        # @return [Array<String>]
        attr_accessor join_allowed_columns: untyped

        # Optional. Specifies if a join is required or not on queries for the view.
        # Default is JOIN_CONDITION_UNSPECIFIED.
        # Corresponds to the JSON property `joinCondition`
        # @return [String]
        attr_accessor join_condition: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Json Options for load and make external tables.
      class JsonOptions
        @encoding: untyped

        include Google::Apis::Core::Hashable

        # Optional. The character encoding of the data. The supported values are UTF-8,
        # UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is UTF-8.
        # Corresponds to the JSON property `encoding`
        # @return [String]
        attr_accessor encoding: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Metadata about the Linked Dataset.
      class LinkedDatasetMetadata
        @link_state: untyped

        include Google::Apis::Core::Hashable

        # Output only. Specifies whether Linked Dataset is currently in a linked state
        # or not.
        # Corresponds to the JSON property `linkState`
        # @return [String]
        attr_accessor link_state: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # A dataset source type which refers to another BigQuery dataset.
      class LinkedDatasetSource
        @source_dataset: untyped

        include Google::Apis::Core::Hashable

        # Identifier for a dataset.
        # Corresponds to the JSON property `sourceDataset`
        # @return [Google::Apis::BigqueryV2::DatasetReference]
        attr_accessor source_dataset: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Response format for a single page when listing BigQuery ML models.
      class ListModelsResponse
        @models: untyped

        @next_page_token: untyped

        include Google::Apis::Core::Hashable

        # Models in the requested dataset. Only the following fields are populated:
        # model_reference, model_type, creation_time, last_modified_time and labels.
        # Corresponds to the JSON property `models`
        # @return [Array<Google::Apis::BigqueryV2::Model>]
        attr_accessor models: untyped

        # A token to request the next page of results.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor next_page_token: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Describes the format of a single result page when listing routines.
      class ListRoutinesResponse
        @next_page_token: untyped

        @routines: untyped

        include Google::Apis::Core::Hashable

        # A token to request the next page of results.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor next_page_token: untyped

        # Routines in the requested dataset. Unless read_mask is set in the request,
        # only the following fields are populated: etag, project_id, dataset_id,
        # routine_id, routine_type, creation_time, last_modified_time, language, and
        # remote_function_options.
        # Corresponds to the JSON property `routines`
        # @return [Array<Google::Apis::BigqueryV2::Routine>]
        attr_accessor routines: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Response message for the ListRowAccessPolicies method.
      class ListRowAccessPoliciesResponse
        @next_page_token: untyped

        @row_access_policies: untyped

        include Google::Apis::Core::Hashable

        # A token to request the next page of results.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor next_page_token: untyped

        # Row access policies on the requested table.
        # Corresponds to the JSON property `rowAccessPolicies`
        # @return [Array<Google::Apis::BigqueryV2::RowAccessPolicy>]
        attr_accessor row_access_policies: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for a LOAD query.
      class LoadQueryStatistics
        @bad_records: untyped

        @bytes_transferred: untyped

        @input_file_bytes: untyped

        @input_files: untyped

        @output_bytes: untyped

        @output_rows: untyped

        include Google::Apis::Core::Hashable

        # Output only. The number of bad records encountered while processing a LOAD
        # query. Note that if the job has failed because of more bad records encountered
        # than the maximum allowed in the load job configuration, then this number can
        # be less than the total number of bad records present in the input data.
        # Corresponds to the JSON property `badRecords`
        # @return [Fixnum]
        attr_accessor bad_records: untyped

        # Output only. This field is deprecated. The number of bytes of source data
        # copied over the network for a `LOAD` query. `transferred_bytes` has the
        # canonical value for physical transferred bytes, which is used for BigQuery
        # Omni billing.
        # Corresponds to the JSON property `bytesTransferred`
        # @return [Fixnum]
        attr_accessor bytes_transferred: untyped

        # Output only. Number of bytes of source data in a LOAD query.
        # Corresponds to the JSON property `inputFileBytes`
        # @return [Fixnum]
        attr_accessor input_file_bytes: untyped

        # Output only. Number of source files in a LOAD query.
        # Corresponds to the JSON property `inputFiles`
        # @return [Fixnum]
        attr_accessor input_files: untyped

        # Output only. Size of the loaded data in bytes. Note that while a LOAD query is
        # in the running state, this value may change.
        # Corresponds to the JSON property `outputBytes`
        # @return [Fixnum]
        attr_accessor output_bytes: untyped

        # Output only. Number of rows imported in a LOAD query. Note that while a LOAD
        # query is in the running state, this value may change.
        # Corresponds to the JSON property `outputRows`
        # @return [Fixnum]
        attr_accessor output_rows: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # BigQuery-specific metadata about a location. This will be set on google.cloud.
      # location.Location.metadata in Cloud Location API responses.
      class LocationMetadata
        @legacy_location_id: untyped

        include Google::Apis::Core::Hashable

        # The legacy BigQuery location ID, e.g. “EU” for the “europe” location. This is
        # for any API consumers that need the legacy “US” and “EU” locations.
        # Corresponds to the JSON property `legacyLocationId`
        # @return [String]
        attr_accessor legacy_location_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # A materialized view considered for a query job.
      class MaterializedView
        @chosen: untyped

        @estimated_bytes_saved: untyped

        @rejected_reason: untyped

        @table_reference: untyped

        include Google::Apis::Core::Hashable

        # Whether the materialized view is chosen for the query. A materialized view can
        # be chosen to rewrite multiple parts of the same query. If a materialized view
        # is chosen to rewrite any part of the query, then this field is true, even if
        # the materialized view was not chosen to rewrite others parts.
        # Corresponds to the JSON property `chosen`
        # @return [Boolean]
        attr_accessor chosen: untyped

        alias chosen? chosen

        # If present, specifies a best-effort estimation of the bytes saved by using the
        # materialized view rather than its base tables.
        # Corresponds to the JSON property `estimatedBytesSaved`
        # @return [Fixnum]
        attr_accessor estimated_bytes_saved: untyped

        # If present, specifies the reason why the materialized view was not chosen for
        # the query.
        # Corresponds to the JSON property `rejectedReason`
        # @return [String]
        attr_accessor rejected_reason: untyped

        # The candidate materialized view.
        # Corresponds to the JSON property `tableReference`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor table_reference: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Definition and configuration of a materialized view.
      class MaterializedViewDefinition
        @allow_non_incremental_definition: untyped

        @enable_refresh: untyped

        @last_refresh_time: untyped

        @max_staleness: untyped

        @query: untyped

        @refresh_interval_ms: untyped

        include Google::Apis::Core::Hashable

        # Optional. This option declares the intention to construct a materialized view
        # that isn't refreshed incrementally.
        # Corresponds to the JSON property `allowNonIncrementalDefinition`
        # @return [Boolean]
        attr_accessor allow_non_incremental_definition: untyped

        alias allow_non_incremental_definition? allow_non_incremental_definition

        # Optional. Enable automatic refresh of the materialized view when the base
        # table is updated. The default value is "true".
        # Corresponds to the JSON property `enableRefresh`
        # @return [Boolean]
        attr_accessor enable_refresh: untyped

        alias enable_refresh? enable_refresh

        # Output only. The time when this materialized view was last refreshed, in
        # milliseconds since the epoch.
        # Corresponds to the JSON property `lastRefreshTime`
        # @return [Fixnum]
        attr_accessor last_refresh_time: untyped

        # [Optional] Max staleness of data that could be returned when materizlized view
        # is queried (formatted as Google SQL Interval type).
        # Corresponds to the JSON property `maxStaleness`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor max_staleness: untyped

        # Required. A query whose results are persisted.
        # Corresponds to the JSON property `query`
        # @return [String]
        attr_accessor query: untyped

        # Optional. The maximum frequency at which this materialized view will be
        # refreshed. The default value is "1800000" (30 minutes).
        # Corresponds to the JSON property `refreshIntervalMs`
        # @return [Fixnum]
        attr_accessor refresh_interval_ms: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics of materialized views considered in a query job.
      class MaterializedViewStatistics
        @materialized_view: untyped

        include Google::Apis::Core::Hashable

        # Materialized views considered for the query job. Only certain materialized
        # views are used. For a detailed list, see the child message. If many
        # materialized views are considered, then the list might be incomplete.
        # Corresponds to the JSON property `materializedView`
        # @return [Array<Google::Apis::BigqueryV2::MaterializedView>]
        attr_accessor materialized_view: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Status of a materialized view. The last refresh timestamp status is omitted
      # here, but is present in the MaterializedViewDefinition message.
      class MaterializedViewStatus
        @last_refresh_status: untyped

        @refresh_watermark: untyped

        include Google::Apis::Core::Hashable

        # Error details.
        # Corresponds to the JSON property `lastRefreshStatus`
        # @return [Google::Apis::BigqueryV2::ErrorProto]
        attr_accessor last_refresh_status: untyped

        # Output only. Refresh watermark of materialized view. The base tables' data
        # were collected into the materialized view cache until this time.
        # Corresponds to the JSON property `refreshWatermark`
        # @return [String]
        attr_accessor refresh_watermark: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for metadata caching in BigLake tables.
      class MetadataCacheStatistics
        @table_metadata_cache_usage: untyped

        include Google::Apis::Core::Hashable

        # Set for the Metadata caching eligible tables referenced in the query.
        # Corresponds to the JSON property `tableMetadataCacheUsage`
        # @return [Array<Google::Apis::BigqueryV2::TableMetadataCacheUsage>]
        attr_accessor table_metadata_cache_usage: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Job statistics specific to a BigQuery ML training job.
      class MlStatistics
        @hparam_trials: untyped

        @iteration_results: untyped

        @max_iterations: untyped

        @model_type: untyped

        @training_type: untyped

        include Google::Apis::Core::Hashable

        # Output only. Trials of a [hyperparameter tuning job](/bigquery-ml/docs/
        # reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) sorted by
        # trial_id.
        # Corresponds to the JSON property `hparamTrials`
        # @return [Array<Google::Apis::BigqueryV2::HparamTuningTrial>]
        attr_accessor hparam_trials: untyped

        # Results for all completed iterations. Empty for [hyperparameter tuning jobs](/
        # bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview).
        # Corresponds to the JSON property `iterationResults`
        # @return [Array<Google::Apis::BigqueryV2::IterationResult>]
        attr_accessor iteration_results: untyped

        # Output only. Maximum number of iterations specified as max_iterations in the '
        # CREATE MODEL' query. The actual number of iterations may be less than this
        # number due to early stop.
        # Corresponds to the JSON property `maxIterations`
        # @return [Fixnum]
        attr_accessor max_iterations: untyped

        # Output only. The type of the model that is being trained.
        # Corresponds to the JSON property `modelType`
        # @return [String]
        attr_accessor model_type: untyped

        # Output only. Training type of the job.
        # Corresponds to the JSON property `trainingType`
        # @return [String]
        attr_accessor training_type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class Model
        @best_trial_id: untyped

        @creation_time: untyped

        @default_trial_id: untyped

        @description: untyped

        @encryption_configuration: untyped

        @etag: untyped

        @expiration_time: untyped

        @feature_columns: untyped

        @friendly_name: untyped

        @hparam_search_spaces: untyped

        @hparam_trials: untyped

        @label_columns: untyped

        @labels: untyped

        @last_modified_time: untyped

        @location: untyped

        @model_reference: untyped

        @model_type: untyped

        @optimal_trial_ids: untyped

        @remote_model_info: untyped

        @training_runs: untyped

        @transform_columns: untyped

        include Google::Apis::Core::Hashable

        # The best trial_id across all training runs.
        # Corresponds to the JSON property `bestTrialId`
        # @return [Fixnum]
        attr_accessor best_trial_id: untyped

        # Output only. The time when this model was created, in millisecs since the
        # epoch.
        # Corresponds to the JSON property `creationTime`
        # @return [Fixnum]
        attr_accessor creation_time: untyped

        # Output only. The default trial_id to use in TVFs when the trial_id is not
        # passed in. For single-objective [hyperparameter tuning](/bigquery-ml/docs/
        # reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, this is
        # the best trial ID. For multi-objective [hyperparameter tuning](/bigquery-ml/
        # docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, this
        # is the smallest trial ID among all Pareto optimal trials.
        # Corresponds to the JSON property `defaultTrialId`
        # @return [Fixnum]
        attr_accessor default_trial_id: untyped

        # Optional. A user-friendly description of this model.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor description: untyped

        # Configuration for Cloud KMS encryption settings.
        # Corresponds to the JSON property `encryptionConfiguration`
        # @return [Google::Apis::BigqueryV2::EncryptionConfiguration]
        attr_accessor encryption_configuration: untyped

        # Output only. A hash of this resource.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # Optional. The time when this model expires, in milliseconds since the epoch.
        # If not present, the model will persist indefinitely. Expired models will be
        # deleted and their storage reclaimed. The defaultTableExpirationMs property of
        # the encapsulating dataset can be used to set a default expirationTime on newly
        # created models.
        # Corresponds to the JSON property `expirationTime`
        # @return [Fixnum]
        attr_accessor expiration_time: untyped

        # Output only. Input feature columns for the model inference. If the model is
        # trained with TRANSFORM clause, these are the input of the TRANSFORM clause.
        # Corresponds to the JSON property `featureColumns`
        # @return [Array<Google::Apis::BigqueryV2::StandardSqlField>]
        attr_accessor feature_columns: untyped

        # Optional. A descriptive name for this model.
        # Corresponds to the JSON property `friendlyName`
        # @return [String]
        attr_accessor friendly_name: untyped

        # Hyperparameter search spaces. These should be a subset of training_options.
        # Corresponds to the JSON property `hparamSearchSpaces`
        # @return [Google::Apis::BigqueryV2::HparamSearchSpaces]
        attr_accessor hparam_search_spaces: untyped

        # Output only. Trials of a [hyperparameter tuning](/bigquery-ml/docs/reference/
        # standard-sql/bigqueryml-syntax-hp-tuning-overview) model sorted by trial_id.
        # Corresponds to the JSON property `hparamTrials`
        # @return [Array<Google::Apis::BigqueryV2::HparamTuningTrial>]
        attr_accessor hparam_trials: untyped

        # Output only. Label columns that were used to train this model. The output of
        # the model will have a "predicted_" prefix to these columns.
        # Corresponds to the JSON property `labelColumns`
        # @return [Array<Google::Apis::BigqueryV2::StandardSqlField>]
        attr_accessor label_columns: untyped

        # The labels associated with this model. You can use these to organize and group
        # your models. Label keys and values can be no longer than 63 characters, can
        # only contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. Label values are optional. Label keys
        # must start with a letter and each label in the list must have a different key.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor labels: untyped

        # Output only. The time when this model was last modified, in millisecs since
        # the epoch.
        # Corresponds to the JSON property `lastModifiedTime`
        # @return [Fixnum]
        attr_accessor last_modified_time: untyped

        # Output only. The geographic location where the model resides. This value is
        # inherited from the dataset.
        # Corresponds to the JSON property `location`
        # @return [String]
        attr_accessor location: untyped

        # Id path of a model.
        # Corresponds to the JSON property `modelReference`
        # @return [Google::Apis::BigqueryV2::ModelReference]
        attr_accessor model_reference: untyped

        # Output only. Type of the model resource.
        # Corresponds to the JSON property `modelType`
        # @return [String]
        attr_accessor model_type: untyped

        # Output only. For single-objective [hyperparameter tuning](/bigquery-ml/docs/
        # reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, it only
        # contains the best trial. For multi-objective [hyperparameter tuning](/bigquery-
        # ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models,
        # it contains all Pareto optimal trials sorted by trial_id.
        # Corresponds to the JSON property `optimalTrialIds`
        # @return [Array<Fixnum>]
        attr_accessor optimal_trial_ids: untyped

        # Remote Model Info
        # Corresponds to the JSON property `remoteModelInfo`
        # @return [Google::Apis::BigqueryV2::RemoteModelInfo]
        attr_accessor remote_model_info: untyped

        # Information for all training runs in increasing order of start_time.
        # Corresponds to the JSON property `trainingRuns`
        # @return [Array<Google::Apis::BigqueryV2::TrainingRun>]
        attr_accessor training_runs: untyped

        # Output only. This field will be populated if a TRANSFORM clause was used to
        # train a model. TRANSFORM clause (if used) takes feature_columns as input and
        # outputs transform_columns. transform_columns then are used to train the model.
        # Corresponds to the JSON property `transformColumns`
        # @return [Array<Google::Apis::BigqueryV2::TransformColumn>]
        attr_accessor transform_columns: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class ModelDefinition
        @model_options: untyped

        @training_runs: untyped

        include Google::Apis::Core::Hashable

        # Deprecated.
        # Corresponds to the JSON property `modelOptions`
        # @return [Google::Apis::BigqueryV2::ModelDefinition::ModelOptions]
        attr_accessor model_options: untyped

        # Deprecated.
        # Corresponds to the JSON property `trainingRuns`
        # @return [Array<Google::Apis::BigqueryV2::BqmlTrainingRun>]
        attr_accessor training_runs: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # Deprecated.
        class ModelOptions
          @labels: untyped

          @loss_type: untyped

          @model_type: untyped

          include Google::Apis::Core::Hashable

          #
          # Corresponds to the JSON property `labels`
          # @return [Array<String>]
          attr_accessor labels: untyped

          #
          # Corresponds to the JSON property `lossType`
          # @return [String]
          attr_accessor loss_type: untyped

          #
          # Corresponds to the JSON property `modelType`
          # @return [String]
          attr_accessor model_type: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # Options related to model extraction.
      class ModelExtractOptions
        @trial_id: untyped

        include Google::Apis::Core::Hashable

        # The 1-based ID of the trial to be exported from a hyperparameter tuning model.
        # If not specified, the trial with id = [Model](/bigquery/docs/reference/rest/v2/
        # models#resource:-model).defaultTrialId is exported. This field is ignored for
        # models not trained with hyperparameter tuning.
        # Corresponds to the JSON property `trialId`
        # @return [Fixnum]
        attr_accessor trial_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Id path of a model.
      class ModelReference
        @dataset_id: untyped

        @model_id: untyped

        @project_id: untyped

        include Google::Apis::Core::Hashable

        # Required. The ID of the dataset containing this model.
        # Corresponds to the JSON property `datasetId`
        # @return [String]
        attr_accessor dataset_id: untyped

        # Required. The ID of the model. The ID must contain only letters (a-z, A-Z),
        # numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
        # Corresponds to the JSON property `modelId`
        # @return [String]
        attr_accessor model_id: untyped

        # Required. The ID of the project containing this model.
        # Corresponds to the JSON property `projectId`
        # @return [String]
        attr_accessor project_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Evaluation metrics for multi-class classification/classifier models.
      class MultiClassClassificationMetrics
        @aggregate_classification_metrics: untyped

        @confusion_matrix_list: untyped

        include Google::Apis::Core::Hashable

        # Aggregate metrics for classification/classifier models. For multi-class models,
        # the metrics are either macro-averaged or micro-averaged. When macro-averaged,
        # the metrics are calculated for each label and then an unweighted average is
        # taken of those values. When micro-averaged, the metric is calculated globally
        # by counting the total number of correctly predicted rows.
        # Corresponds to the JSON property `aggregateClassificationMetrics`
        # @return [Google::Apis::BigqueryV2::AggregateClassificationMetrics]
        attr_accessor aggregate_classification_metrics: untyped

        # Confusion matrix at different thresholds.
        # Corresponds to the JSON property `confusionMatrixList`
        # @return [Array<Google::Apis::BigqueryV2::ConfusionMatrix>]
        attr_accessor confusion_matrix_list: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Parquet Options for load and make external tables.
      class ParquetOptions
        @enable_list_inference: untyped

        @enum_as_string: untyped

        @map_target_type: untyped

        include Google::Apis::Core::Hashable

        # Optional. Indicates whether to use schema inference specifically for Parquet
        # LIST logical type.
        # Corresponds to the JSON property `enableListInference`
        # @return [Boolean]
        attr_accessor enable_list_inference: untyped

        alias enable_list_inference? enable_list_inference

        # Optional. Indicates whether to infer Parquet ENUM logical type as STRING
        # instead of BYTES by default.
        # Corresponds to the JSON property `enumAsString`
        # @return [Boolean]
        attr_accessor enum_as_string: untyped

        alias enum_as_string? enum_as_string

        # Optional. Indicates how to represent a Parquet map if present.
        # Corresponds to the JSON property `mapTargetType`
        # @return [String]
        attr_accessor map_target_type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Partition skew detailed information.
      class PartitionSkew
        @skew_sources: untyped

        include Google::Apis::Core::Hashable

        # Output only. Source stages which produce skewed data.
        # Corresponds to the JSON property `skewSources`
        # @return [Array<Google::Apis::BigqueryV2::SkewSource>]
        attr_accessor skew_sources: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # The partitioning column information.
      class PartitionedColumn
        @field: untyped

        include Google::Apis::Core::Hashable

        # Required. The name of the partition column.
        # Corresponds to the JSON property `field`
        # @return [String]
        attr_accessor field: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # The partitioning information, which includes managed table, external table and
      # metastore partitioned table partition information.
      class PartitioningDefinition
        @partitioned_column: untyped

        include Google::Apis::Core::Hashable

        # Optional. Details about each partitioning column. This field is output only
        # for all partitioning types other than metastore partitioned tables. BigQuery
        # native tables only support 1 partitioning column. Other table types may
        # support 0, 1 or more partitioning columns. For metastore partitioned tables,
        # the order must match the definition order in the Hive Metastore, where it must
        # match the physical layout of the table. For example, CREATE TABLE a_table(id
        # BIGINT, name STRING) PARTITIONED BY (city STRING, state STRING). In this case
        # the values must be ['city', 'state'] in that order.
        # Corresponds to the JSON property `partitionedColumn`
        # @return [Array<Google::Apis::BigqueryV2::PartitionedColumn>]
        attr_accessor partitioned_column: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Performance insights for the job.
      class PerformanceInsights
        @avg_previous_execution_ms: untyped

        @stage_performance_change_insights: untyped

        @stage_performance_standalone_insights: untyped

        include Google::Apis::Core::Hashable

        # Output only. Average execution ms of previous runs. Indicates the job ran slow
        # compared to previous executions. To find previous executions, use
        # INFORMATION_SCHEMA tables and filter jobs with same query hash.
        # Corresponds to the JSON property `avgPreviousExecutionMs`
        # @return [Fixnum]
        attr_accessor avg_previous_execution_ms: untyped

        # Output only. Query stage performance insights compared to previous runs, for
        # diagnosing performance regression.
        # Corresponds to the JSON property `stagePerformanceChangeInsights`
        # @return [Array<Google::Apis::BigqueryV2::StagePerformanceChangeInsight>]
        attr_accessor stage_performance_change_insights: untyped

        # Output only. Standalone query stage performance insights, for exploring
        # potential improvements.
        # Corresponds to the JSON property `stagePerformanceStandaloneInsights`
        # @return [Array<Google::Apis::BigqueryV2::StagePerformanceStandaloneInsight>]
        attr_accessor stage_performance_standalone_insights: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # An Identity and Access Management (IAM) policy, which specifies access
      # controls for Google Cloud resources. A `Policy` is a collection of `bindings`.
      # A `binding` binds one or more `members`, or principals, to a single `role`.
      # Principals can be user accounts, service accounts, Google groups, and domains (
      # such as G Suite). A `role` is a named list of permissions; each `role` can be
      # an IAM predefined role or a user-created custom role. For some types of Google
      # Cloud resources, a `binding` can also specify a `condition`, which is a
      # logical expression that allows access to a resource only if the expression
      # evaluates to `true`. A condition can add constraints based on attributes of
      # the request, the resource, or both. To learn which resources support
      # conditions in their IAM policies, see the [IAM documentation](https://cloud.
      # google.com/iam/help/conditions/resource-policies). **JSON example:** ``` ` "
      # bindings": [ ` "role": "roles/resourcemanager.organizationAdmin", "members": [
      # "user:mike@example.com", "group:admins@example.com", "domain:google.com", "
      # serviceAccount:my-project-id@appspot.gserviceaccount.com" ] `, ` "role": "
      # roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com"
      # ], "condition": ` "title": "expirable access", "description": "Does not grant
      # access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:
      # 00:00.000Z')", ` ` ], "etag": "BwWWja0YfJA=", "version": 3 ` ``` **YAML
      # example:** ``` bindings: - members: - user:mike@example.com - group:admins@
      # example.com - domain:google.com - serviceAccount:my-project-id@appspot.
      # gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: -
      # user:eve@example.com role: roles/resourcemanager.organizationViewer condition:
      # title: expirable access description: Does not grant access after Sep 2020
      # expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag:
      # BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the
      # [IAM documentation](https://cloud.google.com/iam/docs/).
      class Policy
        @audit_configs: untyped

        @bindings: untyped

        @etag: untyped

        @version: untyped

        include Google::Apis::Core::Hashable

        # Specifies cloud audit logging configuration for this policy.
        # Corresponds to the JSON property `auditConfigs`
        # @return [Array<Google::Apis::BigqueryV2::AuditConfig>]
        attr_accessor audit_configs: untyped

        # Associates a list of `members`, or principals, with a `role`. Optionally, may
        # specify a `condition` that determines how and when the `bindings` are applied.
        # Each of the `bindings` must contain at least one principal. The `bindings` in
        # a `Policy` can refer to up to 1,500 principals; up to 250 of these principals
        # can be Google groups. Each occurrence of a principal counts towards these
        # limits. For example, if the `bindings` grant 50 different roles to `user:alice@
        # example.com`, and not to any other principal, then you can add another 1,450
        # principals to the `bindings` in the `Policy`.
        # Corresponds to the JSON property `bindings`
        # @return [Array<Google::Apis::BigqueryV2::Binding>]
        attr_accessor bindings: untyped

        # `etag` is used for optimistic concurrency control as a way to help prevent
        # simultaneous updates of a policy from overwriting each other. It is strongly
        # suggested that systems make use of the `etag` in the read-modify-write cycle
        # to perform policy updates in order to avoid race conditions: An `etag` is
        # returned in the response to `getIamPolicy`, and systems are expected to put
        # that etag in the request to `setIamPolicy` to ensure that their change will be
        # applied to the same version of the policy. **Important:** If you use IAM
        # Conditions, you must include the `etag` field whenever you call `setIamPolicy`.
        # If you omit this field, then IAM allows you to overwrite a version `3` policy
        # with a version `1` policy, and all of the conditions in the version `3` policy
        # are lost.
        # Corresponds to the JSON property `etag`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor etag: untyped

        # Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
        # Requests that specify an invalid value are rejected. Any operation that
        # affects conditional role bindings must specify version `3`. This requirement
        # applies to the following operations: * Getting a policy that includes a
        # conditional role binding * Adding a conditional role binding to a policy *
        # Changing a conditional role binding in a policy * Removing any role binding,
        # with or without a condition, from a policy that includes conditions **
        # Important:** If you use IAM Conditions, you must include the `etag` field
        # whenever you call `setIamPolicy`. If you omit this field, then IAM allows you
        # to overwrite a version `3` policy with a version `1` policy, and all of the
        # conditions in the version `3` policy are lost. If a policy does not include
        # any conditions, operations on that policy may specify any valid version or
        # leave the field unset. To learn which resources support conditions in their
        # IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/
        # conditions/resource-policies).
        # Corresponds to the JSON property `version`
        # @return [Fixnum]
        attr_accessor version: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Principal component infos, used only for eigen decomposition based models, e.g.
      # , PCA. Ordered by explained_variance in the descending order.
      class PrincipalComponentInfo
        @cumulative_explained_variance_ratio: untyped

        @explained_variance: untyped

        @explained_variance_ratio: untyped

        @principal_component_id: untyped

        include Google::Apis::Core::Hashable

        # The explained_variance is pre-ordered in the descending order to compute the
        # cumulative explained variance ratio.
        # Corresponds to the JSON property `cumulativeExplainedVarianceRatio`
        # @return [Float]
        attr_accessor cumulative_explained_variance_ratio: untyped

        # Explained variance by this principal component, which is simply the eigenvalue.
        # Corresponds to the JSON property `explainedVariance`
        # @return [Float]
        attr_accessor explained_variance: untyped

        # Explained_variance over the total explained variance.
        # Corresponds to the JSON property `explainedVarianceRatio`
        # @return [Float]
        attr_accessor explained_variance_ratio: untyped

        # Id of the principal component.
        # Corresponds to the JSON property `principalComponentId`
        # @return [Fixnum]
        attr_accessor principal_component_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Represents privacy policy that contains the privacy requirements specified by
      # the data owner. Currently, this is only supported on views.
      class PrivacyPolicy
        @aggregation_threshold_policy: untyped

        @differential_privacy_policy: untyped

        @join_restriction_policy: untyped

        include Google::Apis::Core::Hashable

        # Represents privacy policy associated with "aggregation threshold" method.
        # Corresponds to the JSON property `aggregationThresholdPolicy`
        # @return [Google::Apis::BigqueryV2::AggregationThresholdPolicy]
        attr_accessor aggregation_threshold_policy: untyped

        # Represents privacy policy associated with "differential privacy" method.
        # Corresponds to the JSON property `differentialPrivacyPolicy`
        # @return [Google::Apis::BigqueryV2::DifferentialPrivacyPolicy]
        attr_accessor differential_privacy_policy: untyped

        # Represents privacy policy associated with "join restrictions". Join
        # restriction gives data providers the ability to enforce joins on the '
        # join_allowed_columns' when data is queried from a privacy protected view.
        # Corresponds to the JSON property `joinRestrictionPolicy`
        # @return [Google::Apis::BigqueryV2::JoinRestrictionPolicy]
        attr_accessor join_restriction_policy: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Response object of ListProjects
      class ProjectList
        @etag: untyped

        @kind: untyped

        @next_page_token: untyped

        @projects: untyped

        @total_items: untyped

        include Google::Apis::Core::Hashable

        # A hash of the page of results.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # The resource type of the response.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # Use this token to request the next page of results.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor next_page_token: untyped

        # Projects to which the user has at least READ access.
        # Corresponds to the JSON property `projects`
        # @return [Array<Google::Apis::BigqueryV2::ProjectList::Project>]
        attr_accessor projects: untyped

        # The total number of projects in the page. A wrapper is used here because the
        # field should still be in the response when the value is 0.
        # Corresponds to the JSON property `totalItems`
        # @return [Fixnum]
        attr_accessor total_items: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # Information about a single project.
        class Project
          @friendly_name: untyped

          @id: untyped

          @kind: untyped

          @numeric_id: untyped

          @project_reference: untyped

          include Google::Apis::Core::Hashable

          # A descriptive name for this project. A wrapper is used here because
          # friendlyName can be set to the empty string.
          # Corresponds to the JSON property `friendlyName`
          # @return [String]
          attr_accessor friendly_name: untyped

          # An opaque ID of this project.
          # Corresponds to the JSON property `id`
          # @return [String]
          attr_accessor id: untyped

          # The resource type.
          # Corresponds to the JSON property `kind`
          # @return [String]
          attr_accessor kind: untyped

          # The numeric ID of this project.
          # Corresponds to the JSON property `numericId`
          # @return [Fixnum]
          attr_accessor numeric_id: untyped

          # A unique reference to a project.
          # Corresponds to the JSON property `projectReference`
          # @return [Google::Apis::BigqueryV2::ProjectReference]
          attr_accessor project_reference: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # A unique reference to a project.
      class ProjectReference
        @project_id: untyped

        include Google::Apis::Core::Hashable

        # Required. ID of the project. Can be either the numeric ID or the assigned ID
        # of the project.
        # Corresponds to the JSON property `projectId`
        # @return [String]
        attr_accessor project_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Query optimization information for a QUERY job.
      class QueryInfo
        @optimization_details: untyped

        include Google::Apis::Core::Hashable

        # Output only. Information about query optimizations.
        # Corresponds to the JSON property `optimizationDetails`
        # @return [Hash<String,Object>]
        attr_accessor optimization_details: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # A parameter given to a query.
      class QueryParameter
        @name: untyped

        @parameter_type: untyped

        @parameter_value: untyped

        include Google::Apis::Core::Hashable

        # Optional. If unset, this is a positional parameter. Otherwise, should be
        # unique within a query.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor name: untyped

        # The type of a query parameter.
        # Corresponds to the JSON property `parameterType`
        # @return [Google::Apis::BigqueryV2::QueryParameterType]
        attr_accessor parameter_type: untyped

        # The value of a query parameter.
        # Corresponds to the JSON property `parameterValue`
        # @return [Google::Apis::BigqueryV2::QueryParameterValue]
        attr_accessor parameter_value: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # The type of a query parameter.
      class QueryParameterType
        @array_type: untyped

        @range_element_type: untyped

        @struct_types: untyped

        @type: untyped

        include Google::Apis::Core::Hashable

        # The type of a query parameter.
        # Corresponds to the JSON property `arrayType`
        # @return [Google::Apis::BigqueryV2::QueryParameterType]
        attr_accessor array_type: untyped

        # The type of a query parameter.
        # Corresponds to the JSON property `rangeElementType`
        # @return [Google::Apis::BigqueryV2::QueryParameterType]
        attr_accessor range_element_type: untyped

        # Optional. The types of the fields of this struct, in order, if this is a
        # struct.
        # Corresponds to the JSON property `structTypes`
        # @return [Array<Google::Apis::BigqueryV2::QueryParameterType::StructType>]
        attr_accessor struct_types: untyped

        # Required. The top level type of this field.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # The type of a struct parameter.
        class StructType
          @description: untyped

          @name: untyped

          @type: untyped

          include Google::Apis::Core::Hashable

          # Optional. Human-oriented description of the field.
          # Corresponds to the JSON property `description`
          # @return [String]
          attr_accessor description: untyped

          # Optional. The name of this field.
          # Corresponds to the JSON property `name`
          # @return [String]
          attr_accessor name: untyped

          # The type of a query parameter.
          # Corresponds to the JSON property `type`
          # @return [Google::Apis::BigqueryV2::QueryParameterType]
          attr_accessor type: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # The value of a query parameter.
      class QueryParameterValue
        @array_values: untyped

        @range_value: untyped

        @struct_values: untyped

        @value: untyped

        include Google::Apis::Core::Hashable

        # Optional. The array values, if this is an array type.
        # Corresponds to the JSON property `arrayValues`
        # @return [Array<Google::Apis::BigqueryV2::QueryParameterValue>]
        attr_accessor array_values: untyped

        # Represents the value of a range.
        # Corresponds to the JSON property `rangeValue`
        # @return [Google::Apis::BigqueryV2::RangeValue]
        attr_accessor range_value: untyped

        # The struct field values.
        # Corresponds to the JSON property `structValues`
        # @return [Hash<String,Google::Apis::BigqueryV2::QueryParameterValue>]
        attr_accessor struct_values: untyped

        # Optional. The value of this value, if a simple scalar type.
        # Corresponds to the JSON property `value`
        # @return [String]
        attr_accessor value: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Describes the format of the jobs.query request.
      class QueryRequest
        @connection_properties: untyped

        @continuous: untyped

        @create_session: untyped

        @default_dataset: untyped

        @dry_run: untyped

        @format_options: untyped

        @job_creation_mode: untyped

        @kind: untyped

        @labels: untyped

        @location: untyped

        @max_results: untyped

        @maximum_bytes_billed: untyped

        @parameter_mode: untyped

        @preserve_nulls: untyped

        @query: untyped

        @query_parameters: untyped

        @request_id: untyped

        @timeout_ms: untyped

        @use_legacy_sql: untyped

        @use_query_cache: untyped

        include Google::Apis::Core::Hashable

        # Optional. Connection properties which can modify the query behavior.
        # Corresponds to the JSON property `connectionProperties`
        # @return [Array<Google::Apis::BigqueryV2::ConnectionProperty>]
        attr_accessor connection_properties: untyped

        # [Optional] Specifies whether the query should be executed as a continuous
        # query. The default value is false.
        # Corresponds to the JSON property `continuous`
        # @return [Boolean]
        attr_accessor continuous: untyped

        alias continuous? continuous

        # Optional. If true, creates a new session using a randomly generated session_id.
        # If false, runs query with an existing session_id passed in ConnectionProperty,
        # otherwise runs query in non-session mode. The session location will be set to
        # QueryRequest.location if it is present, otherwise it's set to the default
        # location based on existing routing logic.
        # Corresponds to the JSON property `createSession`
        # @return [Boolean]
        attr_accessor create_session: untyped

        alias create_session? create_session

        # Identifier for a dataset.
        # Corresponds to the JSON property `defaultDataset`
        # @return [Google::Apis::BigqueryV2::DatasetReference]
        attr_accessor default_dataset: untyped

        # Optional. If set to true, BigQuery doesn't run the job. Instead, if the query
        # is valid, BigQuery returns statistics about the job such as how many bytes
        # would be processed. If the query is invalid, an error returns. The default
        # value is false.
        # Corresponds to the JSON property `dryRun`
        # @return [Boolean]
        attr_accessor dry_run: untyped

        alias dry_run? dry_run

        # Options for data format adjustments.
        # Corresponds to the JSON property `formatOptions`
        # @return [Google::Apis::BigqueryV2::DataFormatOptions]
        attr_accessor format_options: untyped

        # Optional. If not set, jobs are always required. If set, the query request will
        # follow the behavior described JobCreationMode. [Preview](/products/#product-
        # launch-stages)
        # Corresponds to the JSON property `jobCreationMode`
        # @return [String]
        attr_accessor job_creation_mode: untyped

        # The resource type of the request.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # Optional. The labels associated with this query. Labels can be used to
        # organize and group query jobs. Label keys and values can be no longer than 63
        # characters, can only contain lowercase letters, numeric characters,
        # underscores and dashes. International characters are allowed. Label keys must
        # start with a letter and each label in the list must have a different key.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor labels: untyped

        # The geographic location where the job should run. See details at https://cloud.
        # google.com/bigquery/docs/locations#specifying_your_location.
        # Corresponds to the JSON property `location`
        # @return [String]
        attr_accessor location: untyped

        # Optional. The maximum number of rows of data to return per page of results.
        # Setting this flag to a small value such as 1000 and then paging through
        # results might improve reliability when the query result set is large. In
        # addition to this limit, responses are also limited to 10 MB. By default, there
        # is no maximum row count, and only the byte limit applies.
        # Corresponds to the JSON property `maxResults`
        # @return [Fixnum]
        attr_accessor max_results: untyped

        # Optional. Limits the bytes billed for this query. Queries with bytes billed
        # above this limit will fail (without incurring a charge). If unspecified, the
        # project default is used.
        # Corresponds to the JSON property `maximumBytesBilled`
        # @return [Fixnum]
        attr_accessor maximum_bytes_billed: untyped

        # GoogleSQL only. Set to POSITIONAL to use positional (?) query parameters or to
        # NAMED to use named (@myparam) query parameters in this query.
        # Corresponds to the JSON property `parameterMode`
        # @return [String]
        attr_accessor parameter_mode: untyped

        # This property is deprecated.
        # Corresponds to the JSON property `preserveNulls`
        # @return [Boolean]
        attr_accessor preserve_nulls: untyped

        alias preserve_nulls? preserve_nulls

        # Required. A query string to execute, using Google Standard SQL or legacy SQL
        # syntax. Example: "SELECT COUNT(f1) FROM myProjectId.myDatasetId.myTableId".
        # Corresponds to the JSON property `query`
        # @return [String]
        attr_accessor query: untyped

        # Query parameters for GoogleSQL queries.
        # Corresponds to the JSON property `queryParameters`
        # @return [Array<Google::Apis::BigqueryV2::QueryParameter>]
        attr_accessor query_parameters: untyped

        # Optional. A unique user provided identifier to ensure idempotent behavior for
        # queries. Note that this is different from the job_id. It has the following
        # properties: 1. It is case-sensitive, limited to up to 36 ASCII characters. A
        # UUID is recommended. 2. Read only queries can ignore this token since they are
        # nullipotent by definition. 3. For the purposes of idempotency ensured by the
        # request_id, a request is considered duplicate of another only if they have the
        # same request_id and are actually duplicates. When determining whether a
        # request is a duplicate of another request, all parameters in the request that
        # may affect the result are considered. For example, query,
        # connection_properties, query_parameters, use_legacy_sql are parameters that
        # affect the result and are considered when determining whether a request is a
        # duplicate, but properties like timeout_ms don't affect the result and are thus
        # not considered. Dry run query requests are never considered duplicate of
        # another request. 4. When a duplicate mutating query request is detected, it
        # returns: a. the results of the mutation if it completes successfully within
        # the timeout. b. the running operation if it is still in progress at the end of
        # the timeout. 5. Its lifetime is limited to 15 minutes. In other words, if two
        # requests are sent with the same request_id, but more than 15 minutes apart,
        # idempotency is not guaranteed.
        # Corresponds to the JSON property `requestId`
        # @return [String]
        attr_accessor request_id: untyped

        # Optional. Optional: Specifies the maximum amount of time, in milliseconds,
        # that the client is willing to wait for the query to complete. By default, this
        # limit is 10 seconds (10,000 milliseconds). If the query is complete, the
        # jobComplete field in the response is true. If the query has not yet completed,
        # jobComplete is false. You can request a longer timeout period in the timeoutMs
        # field. However, the call is not guaranteed to wait for the specified timeout;
        # it typically returns after around 200 seconds (200,000 milliseconds), even if
        # the query is not complete. If jobComplete is false, you can continue to wait
        # for the query to complete by calling the getQueryResults method until the
        # jobComplete field in the getQueryResults response is true.
        # Corresponds to the JSON property `timeoutMs`
        # @return [Fixnum]
        attr_accessor timeout_ms: untyped

        # Specifies whether to use BigQuery's legacy SQL dialect for this query. The
        # default value is true. If set to false, the query will use BigQuery's
        # GoogleSQL: https://cloud.google.com/bigquery/sql-reference/ When useLegacySql
        # is set to false, the value of flattenResults is ignored; query will be run as
        # if flattenResults is false.
        # Corresponds to the JSON property `useLegacySql`
        # @return [Boolean]
        attr_accessor use_legacy_sql: untyped

        alias use_legacy_sql? use_legacy_sql

        # Optional. Whether to look for the result in the query cache. The query cache
        # is a best-effort cache that will be flushed whenever tables in the query are
        # modified. The default value is true.
        # Corresponds to the JSON property `useQueryCache`
        # @return [Boolean]
        attr_accessor use_query_cache: untyped

        alias use_query_cache? use_query_cache

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class QueryResponse
        @cache_hit: untyped

        @dml_stats: untyped

        @errors: untyped

        @job_complete: untyped

        @job_creation_reason: untyped

        @job_reference: untyped

        @kind: untyped

        @num_dml_affected_rows: untyped

        @page_token: untyped

        @query_id: untyped

        @rows: untyped

        @schema: untyped

        @session_info: untyped

        @total_bytes_processed: untyped

        @total_rows: untyped

        include Google::Apis::Core::Hashable

        # Whether the query result was fetched from the query cache.
        # Corresponds to the JSON property `cacheHit`
        # @return [Boolean]
        attr_accessor cache_hit: untyped

        alias cache_hit? cache_hit

        # Detailed statistics for DML statements
        # Corresponds to the JSON property `dmlStats`
        # @return [Google::Apis::BigqueryV2::DmlStatistics]
        attr_accessor dml_stats: untyped

        # Output only. The first errors or warnings encountered during the running of
        # the job. The final message includes the number of errors that caused the
        # process to stop. Errors here do not necessarily mean that the job has
        # completed or was unsuccessful. For more information about error messages, see [
        # Error messages](https://cloud.google.com/bigquery/docs/error-messages).
        # Corresponds to the JSON property `errors`
        # @return [Array<Google::Apis::BigqueryV2::ErrorProto>]
        attr_accessor errors: untyped

        # Whether the query has completed or not. If rows or totalRows are present, this
        # will always be true. If this is false, totalRows will not be available.
        # Corresponds to the JSON property `jobComplete`
        # @return [Boolean]
        attr_accessor job_complete: untyped

        alias job_complete? job_complete

        # Reason about why a Job was created from a [`jobs.query`](https://cloud.google.
        # com/bigquery/docs/reference/rest/v2/jobs/query) method when used with `
        # JOB_CREATION_OPTIONAL` Job creation mode. For [`jobs.insert`](https://cloud.
        # google.com/bigquery/docs/reference/rest/v2/jobs/insert) method calls it will
        # always be `REQUESTED`. [Preview](/products/#product-launch-stages)
        # Corresponds to the JSON property `jobCreationReason`
        # @return [Google::Apis::BigqueryV2::JobCreationReason]
        attr_accessor job_creation_reason: untyped

        # A job reference is a fully qualified identifier for referring to a job.
        # Corresponds to the JSON property `jobReference`
        # @return [Google::Apis::BigqueryV2::JobReference]
        attr_accessor job_reference: untyped

        # The resource type.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # Output only. The number of rows affected by a DML statement. Present only for
        # DML statements INSERT, UPDATE or DELETE.
        # Corresponds to the JSON property `numDmlAffectedRows`
        # @return [Fixnum]
        attr_accessor num_dml_affected_rows: untyped

        # A token used for paging results. A non-empty token indicates that additional
        # results are available. To see additional results, query the [`jobs.
        # getQueryResults`](https://cloud.google.com/bigquery/docs/reference/rest/v2/
        # jobs/getQueryResults) method. For more information, see [Paging through table
        # data](https://cloud.google.com/bigquery/docs/paging-results).
        # Corresponds to the JSON property `pageToken`
        # @return [String]
        attr_accessor page_token: untyped

        # Auto-generated ID for the query. [Preview](/products/#product-launch-stages)
        # Corresponds to the JSON property `queryId`
        # @return [String]
        attr_accessor query_id: untyped

        # An object with as many results as can be contained within the maximum
        # permitted reply size. To get any additional rows, you can call GetQueryResults
        # and specify the jobReference returned above.
        # Corresponds to the JSON property `rows`
        # @return [Array<Google::Apis::BigqueryV2::TableRow>]
        attr_accessor rows: untyped

        # Schema of a table
        # Corresponds to the JSON property `schema`
        # @return [Google::Apis::BigqueryV2::TableSchema]
        attr_accessor schema: untyped

        # [Preview] Information related to sessions.
        # Corresponds to the JSON property `sessionInfo`
        # @return [Google::Apis::BigqueryV2::SessionInfo]
        attr_accessor session_info: untyped

        # The total number of bytes processed for this query. If this query was a dry
        # run, this is the number of bytes that would be processed if the query were run.
        # Corresponds to the JSON property `totalBytesProcessed`
        # @return [Fixnum]
        attr_accessor total_bytes_processed: untyped

        # The total number of rows in the complete query result set, which can be more
        # than the number of rows in this single page of results.
        # Corresponds to the JSON property `totalRows`
        # @return [Fixnum]
        attr_accessor total_rows: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Summary of the state of query execution at a given time.
      class QueryTimelineSample
        @active_units: untyped

        @completed_units: untyped

        @elapsed_ms: untyped

        @estimated_runnable_units: untyped

        @pending_units: untyped

        @total_slot_ms: untyped

        include Google::Apis::Core::Hashable

        # Total number of active workers. This does not correspond directly to slot
        # usage. This is the largest value observed since the last sample.
        # Corresponds to the JSON property `activeUnits`
        # @return [Fixnum]
        attr_accessor active_units: untyped

        # Total parallel units of work completed by this query.
        # Corresponds to the JSON property `completedUnits`
        # @return [Fixnum]
        attr_accessor completed_units: untyped

        # Milliseconds elapsed since the start of query execution.
        # Corresponds to the JSON property `elapsedMs`
        # @return [Fixnum]
        attr_accessor elapsed_ms: untyped

        # Units of work that can be scheduled immediately. Providing additional slots
        # for these units of work will accelerate the query, if no other query in the
        # reservation needs additional slots.
        # Corresponds to the JSON property `estimatedRunnableUnits`
        # @return [Fixnum]
        attr_accessor estimated_runnable_units: untyped

        # Total units of work remaining for the query. This number can be revised (
        # increased or decreased) while the query is running.
        # Corresponds to the JSON property `pendingUnits`
        # @return [Fixnum]
        attr_accessor pending_units: untyped

        # Cumulative slot-ms consumed by the query.
        # Corresponds to the JSON property `totalSlotMs`
        # @return [Fixnum]
        attr_accessor total_slot_ms: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class RangePartitioning
        @field: untyped

        @range: untyped

        include Google::Apis::Core::Hashable

        # Required. The name of the column to partition the table on. It must be a top-
        # level, INT64 column whose mode is NULLABLE or REQUIRED.
        # Corresponds to the JSON property `field`
        # @return [String]
        attr_accessor field: untyped

        # [Experimental] Defines the ranges for range partitioning.
        # Corresponds to the JSON property `range`
        # @return [Google::Apis::BigqueryV2::RangePartitioning::Range]
        attr_accessor range: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # [Experimental] Defines the ranges for range partitioning.
        class Range
          @end: untyped

          @interval: untyped

          @start: untyped

          include Google::Apis::Core::Hashable

          # [Experimental] The end of range partitioning, exclusive.
          # Corresponds to the JSON property `end`
          # @return [Fixnum]
          attr_accessor end: untyped

          # [Experimental] The width of each interval.
          # Corresponds to the JSON property `interval`
          # @return [Fixnum]
          attr_accessor interval: untyped

          # [Experimental] The start of range partitioning, inclusive.
          # Corresponds to the JSON property `start`
          # @return [Fixnum]
          attr_accessor start: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # Represents the value of a range.
      class RangeValue
        @end: untyped

        @start: untyped

        include Google::Apis::Core::Hashable

        # The value of a query parameter.
        # Corresponds to the JSON property `end`
        # @return [Google::Apis::BigqueryV2::QueryParameterValue]
        attr_accessor end: untyped

        # The value of a query parameter.
        # Corresponds to the JSON property `start`
        # @return [Google::Apis::BigqueryV2::QueryParameterValue]
        attr_accessor start: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Evaluation metrics used by weighted-ALS models specified by feedback_type=
      # implicit.
      class RankingMetrics
        @average_rank: untyped

        @mean_average_precision: untyped

        @mean_squared_error: untyped

        @normalized_discounted_cumulative_gain: untyped

        include Google::Apis::Core::Hashable

        # Determines the goodness of a ranking by computing the percentile rank from the
        # predicted confidence and dividing it by the original rank.
        # Corresponds to the JSON property `averageRank`
        # @return [Float]
        attr_accessor average_rank: untyped

        # Calculates a precision per user for all the items by ranking them and then
        # averages all the precisions across all the users.
        # Corresponds to the JSON property `meanAveragePrecision`
        # @return [Float]
        attr_accessor mean_average_precision: untyped

        # Similar to the mean squared error computed in regression and explicit
        # recommendation models except instead of computing the rating directly, the
        # output from evaluate is computed against a preference which is 1 or 0
        # depending on if the rating exists or not.
        # Corresponds to the JSON property `meanSquaredError`
        # @return [Float]
        attr_accessor mean_squared_error: untyped

        # A metric to determine the goodness of a ranking calculated from the predicted
        # confidence by comparing it to an ideal rank measured by the original ratings.
        # Corresponds to the JSON property `normalizedDiscountedCumulativeGain`
        # @return [Float]
        attr_accessor normalized_discounted_cumulative_gain: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Evaluation metrics for regression and explicit feedback type matrix
      # factorization models.
      class RegressionMetrics
        @mean_absolute_error: untyped

        @mean_squared_error: untyped

        @mean_squared_log_error: untyped

        @median_absolute_error: untyped

        @r_squared: untyped

        include Google::Apis::Core::Hashable

        # Mean absolute error.
        # Corresponds to the JSON property `meanAbsoluteError`
        # @return [Float]
        attr_accessor mean_absolute_error: untyped

        # Mean squared error.
        # Corresponds to the JSON property `meanSquaredError`
        # @return [Float]
        attr_accessor mean_squared_error: untyped

        # Mean squared log error.
        # Corresponds to the JSON property `meanSquaredLogError`
        # @return [Float]
        attr_accessor mean_squared_log_error: untyped

        # Median absolute error.
        # Corresponds to the JSON property `medianAbsoluteError`
        # @return [Float]
        attr_accessor median_absolute_error: untyped

        # R^2 score. This corresponds to r2_score in ML.EVALUATE.
        # Corresponds to the JSON property `rSquared`
        # @return [Float]
        attr_accessor r_squared: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Options for a remote user-defined function.
      class RemoteFunctionOptions
        @connection: untyped

        @endpoint: untyped

        @max_batching_rows: untyped

        @user_defined_context: untyped

        include Google::Apis::Core::Hashable

        # Fully qualified name of the user-provided connection object which holds the
        # authentication information to send requests to the remote service. Format: ```"
        # projects/`projectId`/locations/`locationId`/connections/`connectionId`"```
        # Corresponds to the JSON property `connection`
        # @return [String]
        attr_accessor connection: untyped

        # Endpoint of the user-provided remote service, e.g. ```https://us-east1-
        # my_gcf_project.cloudfunctions.net/remote_add```
        # Corresponds to the JSON property `endpoint`
        # @return [String]
        attr_accessor endpoint: untyped

        # Max number of rows in each batch sent to the remote service. If absent or if 0,
        # BigQuery dynamically decides the number of rows in a batch.
        # Corresponds to the JSON property `maxBatchingRows`
        # @return [Fixnum]
        attr_accessor max_batching_rows: untyped

        # User-defined context as a set of key/value pairs, which will be sent as
        # function invocation context together with batched arguments in the requests to
        # the remote service. The total number of bytes of keys and values must be less
        # than 8KB.
        # Corresponds to the JSON property `userDefinedContext`
        # @return [Hash<String,String>]
        attr_accessor user_defined_context: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Remote Model Info
      class RemoteModelInfo
        @connection: untyped

        @endpoint: untyped

        @max_batching_rows: untyped

        @remote_model_version: untyped

        @remote_service_type: untyped

        @speech_recognizer: untyped

        include Google::Apis::Core::Hashable

        # Output only. Fully qualified name of the user-provided connection object of
        # the remote model. Format: ```"projects/`project_id`/locations/`location_id`/
        # connections/`connection_id`"```
        # Corresponds to the JSON property `connection`
        # @return [String]
        attr_accessor connection: untyped

        # Output only. The endpoint for remote model.
        # Corresponds to the JSON property `endpoint`
        # @return [String]
        attr_accessor endpoint: untyped

        # Output only. Max number of rows in each batch sent to the remote service. If
        # unset, the number of rows in each batch is set dynamically.
        # Corresponds to the JSON property `maxBatchingRows`
        # @return [Fixnum]
        attr_accessor max_batching_rows: untyped

        # Output only. The model version for LLM.
        # Corresponds to the JSON property `remoteModelVersion`
        # @return [String]
        attr_accessor remote_model_version: untyped

        # Output only. The remote service type for remote model.
        # Corresponds to the JSON property `remoteServiceType`
        # @return [String]
        attr_accessor remote_service_type: untyped

        # Output only. The name of the speech recognizer to use for speech recognition.
        # The expected format is `projects/`project`/locations/`location`/recognizers/`
        # recognizer``. Customers can specify this field at model creation. If not
        # specified, a default recognizer `projects/`model project`/locations/global/
        # recognizers/_` will be used. See more details at [recognizers](https://cloud.
        # google.com/speech-to-text/v2/docs/reference/rest/v2/projects.locations.
        # recognizers)
        # Corresponds to the JSON property `speechRecognizer`
        # @return [String]
        attr_accessor speech_recognizer: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class RestrictionConfig
        @type: untyped

        include Google::Apis::Core::Hashable

        # Output only. Specifies the type of dataset/table restriction.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # A user-defined function or a stored procedure.
      class Routine
        @arguments: untyped

        @creation_time: untyped

        @data_governance_type: untyped

        @definition_body: untyped

        @description: untyped

        @determinism_level: untyped

        @etag: untyped

        @imported_libraries: untyped

        @language: untyped

        @last_modified_time: untyped

        @remote_function_options: untyped

        @return_table_type: untyped

        @return_type: untyped

        @routine_reference: untyped

        @routine_type: untyped

        @security_mode: untyped

        @spark_options: untyped

        @strict_mode: untyped

        include Google::Apis::Core::Hashable

        # Optional.
        # Corresponds to the JSON property `arguments`
        # @return [Array<Google::Apis::BigqueryV2::Argument>]
        attr_accessor arguments: untyped

        # Output only. The time when this routine was created, in milliseconds since the
        # epoch.
        # Corresponds to the JSON property `creationTime`
        # @return [Fixnum]
        attr_accessor creation_time: untyped

        # Optional. If set to `DATA_MASKING`, the function is validated and made
        # available as a masking function. For more information, see [Create custom
        # masking routines](https://cloud.google.com/bigquery/docs/user-defined-
        # functions#custom-mask).
        # Corresponds to the JSON property `dataGovernanceType`
        # @return [String]
        attr_accessor data_governance_type: untyped

        # Required. The body of the routine. For functions, this is the expression in
        # the AS clause. If language=SQL, it is the substring inside (but excluding) the
        # parentheses. For example, for the function created with the following
        # statement: `CREATE FUNCTION JoinLines(x string, y string) as (concat(x, "\n",
        # y))` The definition_body is `concat(x, "\n", y)` (\n is not replaced with
        # linebreak). If language=JAVASCRIPT, it is the evaluated string in the AS
        # clause. For example, for the function created with the following statement: `
        # CREATE FUNCTION f() RETURNS STRING LANGUAGE js AS 'return "\n";\n'` The
        # definition_body is `return "\n";\n` Note that both \n are replaced with
        # linebreaks.
        # Corresponds to the JSON property `definitionBody`
        # @return [String]
        attr_accessor definition_body: untyped

        # Optional. The description of the routine, if defined.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor description: untyped

        # Optional. The determinism level of the JavaScript UDF, if defined.
        # Corresponds to the JSON property `determinismLevel`
        # @return [String]
        attr_accessor determinism_level: untyped

        # Output only. A hash of this resource.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # Optional. If language = "JAVASCRIPT", this field stores the path of the
        # imported JAVASCRIPT libraries.
        # Corresponds to the JSON property `importedLibraries`
        # @return [Array<String>]
        attr_accessor imported_libraries: untyped

        # Optional. Defaults to "SQL" if remote_function_options field is absent, not
        # set otherwise.
        # Corresponds to the JSON property `language`
        # @return [String]
        attr_accessor language: untyped

        # Output only. The time when this routine was last modified, in milliseconds
        # since the epoch.
        # Corresponds to the JSON property `lastModifiedTime`
        # @return [Fixnum]
        attr_accessor last_modified_time: untyped

        # Options for a remote user-defined function.
        # Corresponds to the JSON property `remoteFunctionOptions`
        # @return [Google::Apis::BigqueryV2::RemoteFunctionOptions]
        attr_accessor remote_function_options: untyped

        # A table type
        # Corresponds to the JSON property `returnTableType`
        # @return [Google::Apis::BigqueryV2::StandardSqlTableType]
        attr_accessor return_table_type: untyped

        # The data type of a variable such as a function argument. Examples include: *
        # INT64: ``"typeKind": "INT64"`` * ARRAY: ` "typeKind": "ARRAY", "
        # arrayElementType": `"typeKind": "STRING"` ` * STRUCT>: ` "typeKind": "STRUCT",
        # "structType": ` "fields": [ ` "name": "x", "type": `"typeKind": "STRING"` `, `
        # "name": "y", "type": ` "typeKind": "ARRAY", "arrayElementType": `"typeKind": "
        # DATE"` ` ` ] ` ` * RANGE: ` "typeKind": "RANGE", "rangeElementType": `"
        # typeKind": "DATE"` `
        # Corresponds to the JSON property `returnType`
        # @return [Google::Apis::BigqueryV2::StandardSqlDataType]
        attr_accessor return_type: untyped

        # Id path of a routine.
        # Corresponds to the JSON property `routineReference`
        # @return [Google::Apis::BigqueryV2::RoutineReference]
        attr_accessor routine_reference: untyped

        # Required. The type of routine.
        # Corresponds to the JSON property `routineType`
        # @return [String]
        attr_accessor routine_type: untyped

        # Optional. The security mode of the routine, if defined. If not defined, the
        # security mode is automatically determined from the routine's configuration.
        # Corresponds to the JSON property `securityMode`
        # @return [String]
        attr_accessor security_mode: untyped

        # Options for a user-defined Spark routine.
        # Corresponds to the JSON property `sparkOptions`
        # @return [Google::Apis::BigqueryV2::SparkOptions]
        attr_accessor spark_options: untyped

        # Optional. Use this option to catch many common errors. Error checking is not
        # exhaustive, and successfully creating a procedure doesn't guarantee that the
        # procedure will successfully execute at runtime. If `strictMode` is set to `
        # TRUE`, the procedure body is further checked for errors such as non-existent
        # tables or columns. The `CREATE PROCEDURE` statement fails if the body fails
        # any of these checks. If `strictMode` is set to `FALSE`, the procedure body is
        # checked only for syntax. For procedures that invoke themselves recursively,
        # specify `strictMode=FALSE` to avoid non-existent procedure errors during
        # validation. Default value is `TRUE`.
        # Corresponds to the JSON property `strictMode`
        # @return [Boolean]
        attr_accessor strict_mode: untyped

        alias strict_mode? strict_mode

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Id path of a routine.
      class RoutineReference
        @dataset_id: untyped

        @project_id: untyped

        @routine_id: untyped

        include Google::Apis::Core::Hashable

        # Required. The ID of the dataset containing this routine.
        # Corresponds to the JSON property `datasetId`
        # @return [String]
        attr_accessor dataset_id: untyped

        # Required. The ID of the project containing this routine.
        # Corresponds to the JSON property `projectId`
        # @return [String]
        attr_accessor project_id: untyped

        # Required. The ID of the routine. The ID must contain only letters (a-z, A-Z),
        # numbers (0-9), or underscores (_). The maximum length is 256 characters.
        # Corresponds to the JSON property `routineId`
        # @return [String]
        attr_accessor routine_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # A single row in the confusion matrix.
      class Row
        @actual_label: untyped

        @entries: untyped

        include Google::Apis::Core::Hashable

        # The original label of this row.
        # Corresponds to the JSON property `actualLabel`
        # @return [String]
        attr_accessor actual_label: untyped

        # Info describing predicted label distribution.
        # Corresponds to the JSON property `entries`
        # @return [Array<Google::Apis::BigqueryV2::Entry>]
        attr_accessor entries: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Represents access on a subset of rows on the specified table, defined by its
      # filter predicate. Access to the subset of rows is controlled by its IAM policy.
      class RowAccessPolicy
        @creation_time: untyped

        @etag: untyped

        @filter_predicate: untyped

        @last_modified_time: untyped

        @row_access_policy_reference: untyped

        include Google::Apis::Core::Hashable

        # Output only. The time when this row access policy was created, in milliseconds
        # since the epoch.
        # Corresponds to the JSON property `creationTime`
        # @return [String]
        attr_accessor creation_time: untyped

        # Output only. A hash of this resource.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # Required. A SQL boolean expression that represents the rows defined by this
        # row access policy, similar to the boolean expression in a WHERE clause of a
        # SELECT query on a table. References to other tables, routines, and temporary
        # functions are not supported. Examples: region="EU" date_field = CAST('2019-9-
        # 27' as DATE) nullable_field is not NULL numeric_field BETWEEN 1.0 AND 5.0
        # Corresponds to the JSON property `filterPredicate`
        # @return [String]
        attr_accessor filter_predicate: untyped

        # Output only. The time when this row access policy was last modified, in
        # milliseconds since the epoch.
        # Corresponds to the JSON property `lastModifiedTime`
        # @return [String]
        attr_accessor last_modified_time: untyped

        # Id path of a row access policy.
        # Corresponds to the JSON property `rowAccessPolicyReference`
        # @return [Google::Apis::BigqueryV2::RowAccessPolicyReference]
        attr_accessor row_access_policy_reference: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Id path of a row access policy.
      class RowAccessPolicyReference
        @dataset_id: untyped

        @policy_id: untyped

        @project_id: untyped

        @table_id: untyped

        include Google::Apis::Core::Hashable

        # Required. The ID of the dataset containing this row access policy.
        # Corresponds to the JSON property `datasetId`
        # @return [String]
        attr_accessor dataset_id: untyped

        # Required. The ID of the row access policy. The ID must contain only letters (a-
        # z, A-Z), numbers (0-9), or underscores (_). The maximum length is 256
        # characters.
        # Corresponds to the JSON property `policyId`
        # @return [String]
        attr_accessor policy_id: untyped

        # Required. The ID of the project containing this row access policy.
        # Corresponds to the JSON property `projectId`
        # @return [String]
        attr_accessor project_id: untyped

        # Required. The ID of the table containing this row access policy.
        # Corresponds to the JSON property `tableId`
        # @return [String]
        attr_accessor table_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for row-level security.
      class RowLevelSecurityStatistics
        @row_level_security_applied: untyped

        include Google::Apis::Core::Hashable

        # Whether any accessed data was protected by row access policies.
        # Corresponds to the JSON property `rowLevelSecurityApplied`
        # @return [Boolean]
        attr_accessor row_level_security_applied: untyped

        alias row_level_security_applied? row_level_security_applied

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Options related to script execution.
      class ScriptOptions
        @key_result_statement: untyped

        @statement_byte_budget: untyped

        @statement_timeout_ms: untyped

        include Google::Apis::Core::Hashable

        # Determines which statement in the script represents the "key result", used to
        # populate the schema and query results of the script job. Default is LAST.
        # Corresponds to the JSON property `keyResultStatement`
        # @return [String]
        attr_accessor key_result_statement: untyped

        # Limit on the number of bytes billed per statement. Exceeding this budget
        # results in an error.
        # Corresponds to the JSON property `statementByteBudget`
        # @return [Fixnum]
        attr_accessor statement_byte_budget: untyped

        # Timeout period for each statement in a script.
        # Corresponds to the JSON property `statementTimeoutMs`
        # @return [Fixnum]
        attr_accessor statement_timeout_ms: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Represents the location of the statement/expression being evaluated. Line and
      # column numbers are defined as follows: - Line and column numbers start with
      # one. That is, line 1 column 1 denotes the start of the script. - When inside a
      # stored procedure, all line/column numbers are relative to the procedure body,
      # not the script in which the procedure was defined. - Start/end positions
      # exclude leading/trailing comments and whitespace. The end position always ends
      # with a ";", when present. - Multi-byte Unicode characters are treated as just
      # one column. - If the original script (or procedure definition) contains TAB
      # characters, a tab "snaps" the indentation forward to the nearest multiple of 8
      # characters, plus 1. For example, a TAB on column 1, 2, 3, 4, 5, 6 , or 8 will
      # advance the next character to column 9. A TAB on column 9, 10, 11, 12, 13, 14,
      # 15, or 16 will advance the next character to column 17.
      class ScriptStackFrame
        @end_column: untyped

        @end_line: untyped

        @procedure_id: untyped

        @start_column: untyped

        @start_line: untyped

        @text: untyped

        include Google::Apis::Core::Hashable

        # Output only. One-based end column.
        # Corresponds to the JSON property `endColumn`
        # @return [Fixnum]
        attr_accessor end_column: untyped

        # Output only. One-based end line.
        # Corresponds to the JSON property `endLine`
        # @return [Fixnum]
        attr_accessor end_line: untyped

        # Output only. Name of the active procedure, empty if in a top-level script.
        # Corresponds to the JSON property `procedureId`
        # @return [String]
        attr_accessor procedure_id: untyped

        # Output only. One-based start column.
        # Corresponds to the JSON property `startColumn`
        # @return [Fixnum]
        attr_accessor start_column: untyped

        # Output only. One-based start line.
        # Corresponds to the JSON property `startLine`
        # @return [Fixnum]
        attr_accessor start_line: untyped

        # Output only. Text of the current statement/expression.
        # Corresponds to the JSON property `text`
        # @return [String]
        attr_accessor text: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Job statistics specific to the child job of a script.
      class ScriptStatistics
        @evaluation_kind: untyped

        @stack_frames: untyped

        include Google::Apis::Core::Hashable

        # Whether this child job was a statement or expression.
        # Corresponds to the JSON property `evaluationKind`
        # @return [String]
        attr_accessor evaluation_kind: untyped

        # Stack trace showing the line/column/procedure name of each frame on the stack
        # at the point where the current evaluation happened. The leaf frame is first,
        # the primary script is last. Never empty.
        # Corresponds to the JSON property `stackFrames`
        # @return [Array<Google::Apis::BigqueryV2::ScriptStackFrame>]
        attr_accessor stack_frames: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for a search query. Populated as part of JobStatistics2.
      class SearchStatistics
        @index_unused_reasons: untyped

        @index_usage_mode: untyped

        include Google::Apis::Core::Hashable

        # When `indexUsageMode` is `UNUSED` or `PARTIALLY_USED`, this field explains why
        # indexes were not used in all or part of the search query. If `indexUsageMode`
        # is `FULLY_USED`, this field is not populated.
        # Corresponds to the JSON property `indexUnusedReasons`
        # @return [Array<Google::Apis::BigqueryV2::IndexUnusedReason>]
        attr_accessor index_unused_reasons: untyped

        # Specifies the index usage mode for the query.
        # Corresponds to the JSON property `indexUsageMode`
        # @return [String]
        attr_accessor index_usage_mode: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Serializer and deserializer information.
      class SerDeInfo
        @name: untyped

        @parameters: untyped

        @serialization_library: untyped

        include Google::Apis::Core::Hashable

        # Optional. Name of the SerDe. The maximum length is 256 characters.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor name: untyped

        # Optional. Key-value pairs that define the initialization parameters for the
        # serialization library. Maximum size 10 Kib.
        # Corresponds to the JSON property `parameters`
        # @return [Hash<String,String>]
        attr_accessor parameters: untyped

        # Required. Specifies a fully-qualified class name of the serialization library
        # that is responsible for the translation of data between table representation
        # and the underlying low-level input and output format structures. The maximum
        # length is 256 characters.
        # Corresponds to the JSON property `serializationLibrary`
        # @return [String]
        attr_accessor serialization_library: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # [Preview] Information related to sessions.
      class SessionInfo
        @session_id: untyped

        include Google::Apis::Core::Hashable

        # Output only. The id of the session.
        # Corresponds to the JSON property `sessionId`
        # @return [String]
        attr_accessor session_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Request message for `SetIamPolicy` method.
      class SetIamPolicyRequest
        @policy: untyped

        @update_mask: untyped

        include Google::Apis::Core::Hashable

        # An Identity and Access Management (IAM) policy, which specifies access
        # controls for Google Cloud resources. A `Policy` is a collection of `bindings`.
        # A `binding` binds one or more `members`, or principals, to a single `role`.
        # Principals can be user accounts, service accounts, Google groups, and domains (
        # such as G Suite). A `role` is a named list of permissions; each `role` can be
        # an IAM predefined role or a user-created custom role. For some types of Google
        # Cloud resources, a `binding` can also specify a `condition`, which is a
        # logical expression that allows access to a resource only if the expression
        # evaluates to `true`. A condition can add constraints based on attributes of
        # the request, the resource, or both. To learn which resources support
        # conditions in their IAM policies, see the [IAM documentation](https://cloud.
        # google.com/iam/help/conditions/resource-policies). **JSON example:** ``` ` "
        # bindings": [ ` "role": "roles/resourcemanager.organizationAdmin", "members": [
        # "user:mike@example.com", "group:admins@example.com", "domain:google.com", "
        # serviceAccount:my-project-id@appspot.gserviceaccount.com" ] `, ` "role": "
        # roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com"
        # ], "condition": ` "title": "expirable access", "description": "Does not grant
        # access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:
        # 00:00.000Z')", ` ` ], "etag": "BwWWja0YfJA=", "version": 3 ` ``` **YAML
        # example:** ``` bindings: - members: - user:mike@example.com - group:admins@
        # example.com - domain:google.com - serviceAccount:my-project-id@appspot.
        # gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: -
        # user:eve@example.com role: roles/resourcemanager.organizationViewer condition:
        # title: expirable access description: Does not grant access after Sep 2020
        # expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag:
        # BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the
        # [IAM documentation](https://cloud.google.com/iam/docs/).
        # Corresponds to the JSON property `policy`
        # @return [Google::Apis::BigqueryV2::Policy]
        attr_accessor policy: untyped

        # OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
        # the fields in the mask will be modified. If no mask is provided, the following
        # default mask is used: `paths: "bindings, etag"`
        # Corresponds to the JSON property `updateMask`
        # @return [String]
        attr_accessor update_mask: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Details about source stages which produce skewed data.
      class SkewSource
        @stage_id: untyped

        include Google::Apis::Core::Hashable

        # Output only. Stage id of the skew source stage.
        # Corresponds to the JSON property `stageId`
        # @return [Fixnum]
        attr_accessor stage_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Information about base table and snapshot time of the snapshot.
      class SnapshotDefinition
        @base_table_reference: untyped

        @snapshot_time: untyped

        include Google::Apis::Core::Hashable

        # Required. Reference describing the ID of the table that was snapshot.
        # Corresponds to the JSON property `baseTableReference`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor base_table_reference: untyped

        # Required. The time at which the base table was snapshot. This value is
        # reported in the JSON response using RFC3339 format.
        # Corresponds to the JSON property `snapshotTime`
        # @return [DateTime]
        attr_accessor snapshot_time: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Spark job logs can be filtered by these fields in Cloud Logging.
      class SparkLoggingInfo
        @project_id: untyped

        @resource_type: untyped

        include Google::Apis::Core::Hashable

        # Output only. Project ID where the Spark logs were written.
        # Corresponds to the JSON property `projectId`
        # @return [String]
        attr_accessor project_id: untyped

        # Output only. Resource type used for logging.
        # Corresponds to the JSON property `resourceType`
        # @return [String]
        attr_accessor resource_type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Options for a user-defined Spark routine.
      class SparkOptions
        @archive_uris: untyped

        @connection: untyped

        @container_image: untyped

        @file_uris: untyped

        @jar_uris: untyped

        @main_class: untyped

        @main_file_uri: untyped

        @properties: untyped

        @py_file_uris: untyped

        @runtime_version: untyped

        include Google::Apis::Core::Hashable

        # Archive files to be extracted into the working directory of each executor. For
        # more information about Apache Spark, see [Apache Spark](https://spark.apache.
        # org/docs/latest/index.html).
        # Corresponds to the JSON property `archiveUris`
        # @return [Array<String>]
        attr_accessor archive_uris: untyped

        # Fully qualified name of the user-provided Spark connection object. Format: ```"
        # projects/`project_id`/locations/`location_id`/connections/`connection_id`"```
        # Corresponds to the JSON property `connection`
        # @return [String]
        attr_accessor connection: untyped

        # Custom container image for the runtime environment.
        # Corresponds to the JSON property `containerImage`
        # @return [String]
        attr_accessor container_image: untyped

        # Files to be placed in the working directory of each executor. For more
        # information about Apache Spark, see [Apache Spark](https://spark.apache.org/
        # docs/latest/index.html).
        # Corresponds to the JSON property `fileUris`
        # @return [Array<String>]
        attr_accessor file_uris: untyped

        # JARs to include on the driver and executor CLASSPATH. For more information
        # about Apache Spark, see [Apache Spark](https://spark.apache.org/docs/latest/
        # index.html).
        # Corresponds to the JSON property `jarUris`
        # @return [Array<String>]
        attr_accessor jar_uris: untyped

        # The fully qualified name of a class in jar_uris, for example, com.example.
        # wordcount. Exactly one of main_class and main_jar_uri field should be set for
        # Java/Scala language type.
        # Corresponds to the JSON property `mainClass`
        # @return [String]
        attr_accessor main_class: untyped

        # The main file/jar URI of the Spark application. Exactly one of the
        # definition_body field and the main_file_uri field must be set for Python.
        # Exactly one of main_class and main_file_uri field should be set for Java/Scala
        # language type.
        # Corresponds to the JSON property `mainFileUri`
        # @return [String]
        attr_accessor main_file_uri: untyped

        # Configuration properties as a set of key/value pairs, which will be passed on
        # to the Spark application. For more information, see [Apache Spark](https://
        # spark.apache.org/docs/latest/index.html) and the [procedure option list](https:
        # //cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-
        # language#procedure_option_list).
        # Corresponds to the JSON property `properties`
        # @return [Hash<String,String>]
        attr_accessor properties: untyped

        # Python files to be placed on the PYTHONPATH for PySpark application. Supported
        # file types: `.py`, `.egg`, and `.zip`. For more information about Apache Spark,
        # see [Apache Spark](https://spark.apache.org/docs/latest/index.html).
        # Corresponds to the JSON property `pyFileUris`
        # @return [Array<String>]
        attr_accessor py_file_uris: untyped

        # Runtime version. If not specified, the default runtime version is used.
        # Corresponds to the JSON property `runtimeVersion`
        # @return [String]
        attr_accessor runtime_version: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for a BigSpark query. Populated as part of JobStatistics2
      class SparkStatistics
        @endpoints: untyped

        @gcs_staging_bucket: untyped

        @kms_key_name: untyped

        @logging_info: untyped

        @spark_job_id: untyped

        @spark_job_location: untyped

        include Google::Apis::Core::Hashable

        # Output only. Endpoints returned from Dataproc. Key list: -
        # history_server_endpoint: A link to Spark job UI.
        # Corresponds to the JSON property `endpoints`
        # @return [Hash<String,String>]
        attr_accessor endpoints: untyped

        # Output only. The Google Cloud Storage bucket that is used as the default file
        # system by the Spark application. This field is only filled when the Spark
        # procedure uses the invoker security mode. The `gcsStagingBucket` bucket is
        # inferred from the `@@spark_proc_properties.staging_bucket` system variable (if
        # it is provided). Otherwise, BigQuery creates a default staging bucket for the
        # job and returns the bucket name in this field. Example: * `gs://[bucket_name]`
        # Corresponds to the JSON property `gcsStagingBucket`
        # @return [String]
        attr_accessor gcs_staging_bucket: untyped

        # Output only. The Cloud KMS encryption key that is used to protect the
        # resources created by the Spark job. If the Spark procedure uses the invoker
        # security mode, the Cloud KMS encryption key is either inferred from the
        # provided system variable, `@@spark_proc_properties.kms_key_name`, or the
        # default key of the BigQuery job's project (if the CMEK organization policy is
        # enforced). Otherwise, the Cloud KMS key is either inferred from the Spark
        # connection associated with the procedure (if it is provided), or from the
        # default key of the Spark connection's project if the CMEK organization policy
        # is enforced. Example: * `projects/[kms_project_id]/locations/[region]/keyRings/
        # [key_region]/cryptoKeys/[key]`
        # Corresponds to the JSON property `kmsKeyName`
        # @return [String]
        attr_accessor kms_key_name: untyped

        # Spark job logs can be filtered by these fields in Cloud Logging.
        # Corresponds to the JSON property `loggingInfo`
        # @return [Google::Apis::BigqueryV2::SparkLoggingInfo]
        attr_accessor logging_info: untyped

        # Output only. Spark job ID if a Spark job is created successfully.
        # Corresponds to the JSON property `sparkJobId`
        # @return [String]
        attr_accessor spark_job_id: untyped

        # Output only. Location where the Spark job is executed. A location is selected
        # by BigQueury for jobs configured to run in a multi-region.
        # Corresponds to the JSON property `sparkJobLocation`
        # @return [String]
        attr_accessor spark_job_location: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Performance insights compared to the previous executions for a specific stage.
      class StagePerformanceChangeInsight
        @input_data_change: untyped

        @stage_id: untyped

        include Google::Apis::Core::Hashable

        # Details about the input data change insight.
        # Corresponds to the JSON property `inputDataChange`
        # @return [Google::Apis::BigqueryV2::InputDataChange]
        attr_accessor input_data_change: untyped

        # Output only. The stage id that the insight mapped to.
        # Corresponds to the JSON property `stageId`
        # @return [Fixnum]
        attr_accessor stage_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Standalone performance insights for a specific stage.
      class StagePerformanceStandaloneInsight
        @bi_engine_reasons: untyped

        @high_cardinality_joins: untyped

        @insufficient_shuffle_quota: untyped

        @partition_skew: untyped

        @slot_contention: untyped

        @stage_id: untyped

        include Google::Apis::Core::Hashable

        # Output only. If present, the stage had the following reasons for being
        # disqualified from BI Engine execution.
        # Corresponds to the JSON property `biEngineReasons`
        # @return [Array<Google::Apis::BigqueryV2::BiEngineReason>]
        attr_accessor bi_engine_reasons: untyped

        # Output only. High cardinality joins in the stage.
        # Corresponds to the JSON property `highCardinalityJoins`
        # @return [Array<Google::Apis::BigqueryV2::HighCardinalityJoin>]
        attr_accessor high_cardinality_joins: untyped

        # Output only. True if the stage has insufficient shuffle quota.
        # Corresponds to the JSON property `insufficientShuffleQuota`
        # @return [Boolean]
        attr_accessor insufficient_shuffle_quota: untyped

        alias insufficient_shuffle_quota? insufficient_shuffle_quota

        # Partition skew detailed information.
        # Corresponds to the JSON property `partitionSkew`
        # @return [Google::Apis::BigqueryV2::PartitionSkew]
        attr_accessor partition_skew: untyped

        # Output only. True if the stage has a slot contention issue.
        # Corresponds to the JSON property `slotContention`
        # @return [Boolean]
        attr_accessor slot_contention: untyped

        alias slot_contention? slot_contention

        # Output only. The stage id that the insight mapped to.
        # Corresponds to the JSON property `stageId`
        # @return [Fixnum]
        attr_accessor stage_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # The data type of a variable such as a function argument. Examples include: *
      # INT64: ``"typeKind": "INT64"`` * ARRAY: ` "typeKind": "ARRAY", "
      # arrayElementType": `"typeKind": "STRING"` ` * STRUCT>: ` "typeKind": "STRUCT",
      # "structType": ` "fields": [ ` "name": "x", "type": `"typeKind": "STRING"` `, `
      # "name": "y", "type": ` "typeKind": "ARRAY", "arrayElementType": `"typeKind": "
      # DATE"` ` ` ] ` ` * RANGE: ` "typeKind": "RANGE", "rangeElementType": `"
      # typeKind": "DATE"` `
      class StandardSqlDataType
        @array_element_type: untyped

        @range_element_type: untyped

        @struct_type: untyped

        @type_kind: untyped

        include Google::Apis::Core::Hashable

        # The data type of a variable such as a function argument. Examples include: *
        # INT64: ``"typeKind": "INT64"`` * ARRAY: ` "typeKind": "ARRAY", "
        # arrayElementType": `"typeKind": "STRING"` ` * STRUCT>: ` "typeKind": "STRUCT",
        # "structType": ` "fields": [ ` "name": "x", "type": `"typeKind": "STRING"` `, `
        # "name": "y", "type": ` "typeKind": "ARRAY", "arrayElementType": `"typeKind": "
        # DATE"` ` ` ] ` ` * RANGE: ` "typeKind": "RANGE", "rangeElementType": `"
        # typeKind": "DATE"` `
        # Corresponds to the JSON property `arrayElementType`
        # @return [Google::Apis::BigqueryV2::StandardSqlDataType]
        attr_accessor array_element_type: untyped

        # The data type of a variable such as a function argument. Examples include: *
        # INT64: ``"typeKind": "INT64"`` * ARRAY: ` "typeKind": "ARRAY", "
        # arrayElementType": `"typeKind": "STRING"` ` * STRUCT>: ` "typeKind": "STRUCT",
        # "structType": ` "fields": [ ` "name": "x", "type": `"typeKind": "STRING"` `, `
        # "name": "y", "type": ` "typeKind": "ARRAY", "arrayElementType": `"typeKind": "
        # DATE"` ` ` ] ` ` * RANGE: ` "typeKind": "RANGE", "rangeElementType": `"
        # typeKind": "DATE"` `
        # Corresponds to the JSON property `rangeElementType`
        # @return [Google::Apis::BigqueryV2::StandardSqlDataType]
        attr_accessor range_element_type: untyped

        # The representation of a SQL STRUCT type.
        # Corresponds to the JSON property `structType`
        # @return [Google::Apis::BigqueryV2::StandardSqlStructType]
        attr_accessor struct_type: untyped

        # Required. The top level type of this field. Can be any GoogleSQL data type (e.
        # g., "INT64", "DATE", "ARRAY").
        # Corresponds to the JSON property `typeKind`
        # @return [String]
        attr_accessor type_kind: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # A field or a column.
      class StandardSqlField
        @name: untyped

        @type: untyped

        include Google::Apis::Core::Hashable

        # Optional. The name of this field. Can be absent for struct fields.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor name: untyped

        # The data type of a variable such as a function argument. Examples include: *
        # INT64: ``"typeKind": "INT64"`` * ARRAY: ` "typeKind": "ARRAY", "
        # arrayElementType": `"typeKind": "STRING"` ` * STRUCT>: ` "typeKind": "STRUCT",
        # "structType": ` "fields": [ ` "name": "x", "type": `"typeKind": "STRING"` `, `
        # "name": "y", "type": ` "typeKind": "ARRAY", "arrayElementType": `"typeKind": "
        # DATE"` ` ` ] ` ` * RANGE: ` "typeKind": "RANGE", "rangeElementType": `"
        # typeKind": "DATE"` `
        # Corresponds to the JSON property `type`
        # @return [Google::Apis::BigqueryV2::StandardSqlDataType]
        attr_accessor type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # The representation of a SQL STRUCT type.
      class StandardSqlStructType
        @fields: untyped

        include Google::Apis::Core::Hashable

        # Fields within the struct.
        # Corresponds to the JSON property `fields`
        # @return [Array<Google::Apis::BigqueryV2::StandardSqlField>]
        attr_accessor fields: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # A table type
      class StandardSqlTableType
        @columns: untyped

        include Google::Apis::Core::Hashable

        # The columns in this table type
        # Corresponds to the JSON property `columns`
        # @return [Array<Google::Apis::BigqueryV2::StandardSqlField>]
        attr_accessor columns: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Contains information about how a table's data is stored and accessed by open
      # source query engines.
      class StorageDescriptor
        @input_format: untyped

        @location_uri: untyped

        @output_format: untyped

        @serde_info: untyped

        include Google::Apis::Core::Hashable

        # Optional. Specifies the fully qualified class name of the InputFormat (e.g. "
        # org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"). The maximum length is 128
        # characters.
        # Corresponds to the JSON property `inputFormat`
        # @return [String]
        attr_accessor input_format: untyped

        # Optional. The physical location of the table (e.g. 'gs://spark-dataproc-data/
        # pangea-data/case_sensitive/' or 'gs://spark-dataproc-data/pangea-data/*'). The
        # maximum length is 2056 bytes.
        # Corresponds to the JSON property `locationUri`
        # @return [String]
        attr_accessor location_uri: untyped

        # Optional. Specifies the fully qualified class name of the OutputFormat (e.g. "
        # org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat"). The maximum length is 128
        # characters.
        # Corresponds to the JSON property `outputFormat`
        # @return [String]
        attr_accessor output_format: untyped

        # Serializer and deserializer information.
        # Corresponds to the JSON property `serdeInfo`
        # @return [Google::Apis::BigqueryV2::SerDeInfo]
        attr_accessor serde_info: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class Streamingbuffer
        @estimated_bytes: untyped

        @estimated_rows: untyped

        @oldest_entry_time: untyped

        include Google::Apis::Core::Hashable

        # Output only. A lower-bound estimate of the number of bytes currently in the
        # streaming buffer.
        # Corresponds to the JSON property `estimatedBytes`
        # @return [Fixnum]
        attr_accessor estimated_bytes: untyped

        # Output only. A lower-bound estimate of the number of rows currently in the
        # streaming buffer.
        # Corresponds to the JSON property `estimatedRows`
        # @return [Fixnum]
        attr_accessor estimated_rows: untyped

        # Output only. Contains the timestamp of the oldest entry in the streaming
        # buffer, in milliseconds since the epoch, if the streaming buffer is available.
        # Corresponds to the JSON property `oldestEntryTime`
        # @return [Fixnum]
        attr_accessor oldest_entry_time: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Search space for string and enum.
      class StringHparamSearchSpace
        @candidates: untyped

        include Google::Apis::Core::Hashable

        # Canididates for the string or enum parameter in lower case.
        # Corresponds to the JSON property `candidates`
        # @return [Array<String>]
        attr_accessor candidates: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # System variables given to a query.
      class SystemVariables
        @types: untyped

        @values: untyped

        include Google::Apis::Core::Hashable

        # Output only. Data type for each system variable.
        # Corresponds to the JSON property `types`
        # @return [Hash<String,Google::Apis::BigqueryV2::StandardSqlDataType>]
        attr_accessor types: untyped

        # Output only. Value for each system variable.
        # Corresponds to the JSON property `values`
        # @return [Hash<String,Object>]
        attr_accessor values: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class Table
        @biglake_configuration: untyped

        @clone_definition: untyped

        @clustering: untyped

        @creation_time: untyped

        @default_collation: untyped

        @default_rounding_mode: untyped

        @description: untyped

        @encryption_configuration: untyped

        @etag: untyped

        @expiration_time: untyped

        @external_catalog_table_options: untyped

        @external_data_configuration: untyped

        @friendly_name: untyped

        @id: untyped

        @kind: untyped

        @labels: untyped

        @last_modified_time: untyped

        @location: untyped

        @materialized_view: untyped

        @materialized_view_status: untyped

        @max_staleness: untyped

        @model: untyped

        @num_active_logical_bytes: untyped

        @num_active_physical_bytes: untyped

        @num_bytes: untyped

        @num_current_physical_bytes: untyped

        @num_long_term_bytes: untyped

        @num_long_term_logical_bytes: untyped

        @num_long_term_physical_bytes: untyped

        @num_partitions: untyped

        @num_physical_bytes: untyped

        @num_rows: untyped

        @num_time_travel_physical_bytes: untyped

        @num_total_logical_bytes: untyped

        @num_total_physical_bytes: untyped

        @partition_definition: untyped

        @range_partitioning: untyped

        @replicas: untyped

        @require_partition_filter: untyped

        @resource_tags: untyped

        @restrictions: untyped

        @schema: untyped

        @self_link: untyped

        @snapshot_definition: untyped

        @streaming_buffer: untyped

        @table_constraints: untyped

        @table_reference: untyped

        @table_replication_info: untyped

        @time_partitioning: untyped

        @type: untyped

        @view: untyped

        include Google::Apis::Core::Hashable

        # Configuration for BigLake managed tables.
        # Corresponds to the JSON property `biglakeConfiguration`
        # @return [Google::Apis::BigqueryV2::BigLakeConfiguration]
        attr_accessor biglake_configuration: untyped

        # Information about base table and clone time of a table clone.
        # Corresponds to the JSON property `cloneDefinition`
        # @return [Google::Apis::BigqueryV2::CloneDefinition]
        attr_accessor clone_definition: untyped

        # Configures table clustering.
        # Corresponds to the JSON property `clustering`
        # @return [Google::Apis::BigqueryV2::Clustering]
        attr_accessor clustering: untyped

        # Output only. The time when this table was created, in milliseconds since the
        # epoch.
        # Corresponds to the JSON property `creationTime`
        # @return [Fixnum]
        attr_accessor creation_time: untyped

        # Optional. Defines the default collation specification of new STRING fields in
        # the table. During table creation or update, if a STRING field is added to this
        # table without explicit collation specified, then the table inherits the table
        # default collation. A change to this field affects only fields added afterwards,
        # and does not alter the existing fields. The following values are supported: *
        # 'und:ci': undetermined locale, case insensitive. * '': empty string. Default
        # to case-sensitive behavior.
        # Corresponds to the JSON property `defaultCollation`
        # @return [String]
        attr_accessor default_collation: untyped

        # Optional. Defines the default rounding mode specification of new decimal
        # fields (NUMERIC OR BIGNUMERIC) in the table. During table creation or update,
        # if a decimal field is added to this table without an explicit rounding mode
        # specified, then the field inherits the table default rounding mode. Changing
        # this field doesn't affect existing fields.
        # Corresponds to the JSON property `defaultRoundingMode`
        # @return [String]
        attr_accessor default_rounding_mode: untyped

        # Optional. A user-friendly description of this table.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor description: untyped

        # Configuration for Cloud KMS encryption settings.
        # Corresponds to the JSON property `encryptionConfiguration`
        # @return [Google::Apis::BigqueryV2::EncryptionConfiguration]
        attr_accessor encryption_configuration: untyped

        # Output only. A hash of this resource.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # Optional. The time when this table expires, in milliseconds since the epoch.
        # If not present, the table will persist indefinitely. Expired tables will be
        # deleted and their storage reclaimed. The defaultTableExpirationMs property of
        # the encapsulating dataset can be used to set a default expirationTime on newly
        # created tables.
        # Corresponds to the JSON property `expirationTime`
        # @return [Fixnum]
        attr_accessor expiration_time: untyped

        # Metadata about open source compatible table. The fields contained in these
        # options correspond to hive metastore's table level properties.
        # Corresponds to the JSON property `externalCatalogTableOptions`
        # @return [Google::Apis::BigqueryV2::ExternalCatalogTableOptions]
        attr_accessor external_catalog_table_options: untyped

        # Optional. Describes the data format, location, and other properties of a table
        # stored outside of BigQuery. By defining these properties, the data source can
        # then be queried as if it were a standard BigQuery table.
        # Corresponds to the JSON property `externalDataConfiguration`
        # @return [Google::Apis::BigqueryV2::ExternalDataConfiguration]
        attr_accessor external_data_configuration: untyped

        # Optional. A descriptive name for this table.
        # Corresponds to the JSON property `friendlyName`
        # @return [String]
        attr_accessor friendly_name: untyped

        # Output only. An opaque ID uniquely identifying the table.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor id: untyped

        # The type of resource ID.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # The labels associated with this table. You can use these to organize and group
        # your tables. Label keys and values can be no longer than 63 characters, can
        # only contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. Label values are optional. Label keys
        # must start with a letter and each label in the list must have a different key.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor labels: untyped

        # Output only. The time when this table was last modified, in milliseconds since
        # the epoch.
        # Corresponds to the JSON property `lastModifiedTime`
        # @return [Fixnum]
        attr_accessor last_modified_time: untyped

        # Output only. The geographic location where the table resides. This value is
        # inherited from the dataset.
        # Corresponds to the JSON property `location`
        # @return [String]
        attr_accessor location: untyped

        # Definition and configuration of a materialized view.
        # Corresponds to the JSON property `materializedView`
        # @return [Google::Apis::BigqueryV2::MaterializedViewDefinition]
        attr_accessor materialized_view: untyped

        # Status of a materialized view. The last refresh timestamp status is omitted
        # here, but is present in the MaterializedViewDefinition message.
        # Corresponds to the JSON property `materializedViewStatus`
        # @return [Google::Apis::BigqueryV2::MaterializedViewStatus]
        attr_accessor materialized_view_status: untyped

        # Optional. The maximum staleness of data that could be returned when the table (
        # or stale MV) is queried. Staleness encoded as a string encoding of sql
        # IntervalValue type.
        # Corresponds to the JSON property `maxStaleness`
        # @return [String]
        attr_accessor max_staleness: untyped

        # Deprecated.
        # Corresponds to the JSON property `model`
        # @return [Google::Apis::BigqueryV2::ModelDefinition]
        attr_accessor model: untyped

        # Output only. Number of logical bytes that are less than 90 days old.
        # Corresponds to the JSON property `numActiveLogicalBytes`
        # @return [Fixnum]
        attr_accessor num_active_logical_bytes: untyped

        # Output only. Number of physical bytes less than 90 days old. This data is not
        # kept in real time, and might be delayed by a few seconds to a few minutes.
        # Corresponds to the JSON property `numActivePhysicalBytes`
        # @return [Fixnum]
        attr_accessor num_active_physical_bytes: untyped

        # Output only. The size of this table in logical bytes, excluding any data in
        # the streaming buffer.
        # Corresponds to the JSON property `numBytes`
        # @return [Fixnum]
        attr_accessor num_bytes: untyped

        # Output only. Number of physical bytes used by current live data storage. This
        # data is not kept in real time, and might be delayed by a few seconds to a few
        # minutes.
        # Corresponds to the JSON property `numCurrentPhysicalBytes`
        # @return [Fixnum]
        attr_accessor num_current_physical_bytes: untyped

        # Output only. The number of logical bytes in the table that are considered "
        # long-term storage".
        # Corresponds to the JSON property `numLongTermBytes`
        # @return [Fixnum]
        attr_accessor num_long_term_bytes: untyped

        # Output only. Number of logical bytes that are more than 90 days old.
        # Corresponds to the JSON property `numLongTermLogicalBytes`
        # @return [Fixnum]
        attr_accessor num_long_term_logical_bytes: untyped

        # Output only. Number of physical bytes more than 90 days old. This data is not
        # kept in real time, and might be delayed by a few seconds to a few minutes.
        # Corresponds to the JSON property `numLongTermPhysicalBytes`
        # @return [Fixnum]
        attr_accessor num_long_term_physical_bytes: untyped

        # Output only. The number of partitions present in the table or materialized
        # view. This data is not kept in real time, and might be delayed by a few
        # seconds to a few minutes.
        # Corresponds to the JSON property `numPartitions`
        # @return [Fixnum]
        attr_accessor num_partitions: untyped

        # Output only. The physical size of this table in bytes. This includes storage
        # used for time travel.
        # Corresponds to the JSON property `numPhysicalBytes`
        # @return [Fixnum]
        attr_accessor num_physical_bytes: untyped

        # Output only. The number of rows of data in this table, excluding any data in
        # the streaming buffer.
        # Corresponds to the JSON property `numRows`
        # @return [Fixnum]
        attr_accessor num_rows: untyped

        # Output only. Number of physical bytes used by time travel storage (deleted or
        # changed data). This data is not kept in real time, and might be delayed by a
        # few seconds to a few minutes.
        # Corresponds to the JSON property `numTimeTravelPhysicalBytes`
        # @return [Fixnum]
        attr_accessor num_time_travel_physical_bytes: untyped

        # Output only. Total number of logical bytes in the table or materialized view.
        # Corresponds to the JSON property `numTotalLogicalBytes`
        # @return [Fixnum]
        attr_accessor num_total_logical_bytes: untyped

        # Output only. The physical size of this table in bytes. This also includes
        # storage used for time travel. This data is not kept in real time, and might be
        # delayed by a few seconds to a few minutes.
        # Corresponds to the JSON property `numTotalPhysicalBytes`
        # @return [Fixnum]
        attr_accessor num_total_physical_bytes: untyped

        # The partitioning information, which includes managed table, external table and
        # metastore partitioned table partition information.
        # Corresponds to the JSON property `partitionDefinition`
        # @return [Google::Apis::BigqueryV2::PartitioningDefinition]
        attr_accessor partition_definition: untyped

        # If specified, configures range partitioning for this table.
        # Corresponds to the JSON property `rangePartitioning`
        # @return [Google::Apis::BigqueryV2::RangePartitioning]
        attr_accessor range_partitioning: untyped

        # Optional. Output only. Table references of all replicas currently active on
        # the table.
        # Corresponds to the JSON property `replicas`
        # @return [Array<Google::Apis::BigqueryV2::TableReference>]
        attr_accessor replicas: untyped

        # Optional. If set to true, queries over this table require a partition filter
        # that can be used for partition elimination to be specified.
        # Corresponds to the JSON property `requirePartitionFilter`
        # @return [Boolean]
        attr_accessor require_partition_filter: untyped

        alias require_partition_filter? require_partition_filter

        # [Optional] The tags associated with this table. Tag keys are globally unique.
        # See additional information on [tags](https://cloud.google.com/iam/docs/tags-
        # access-control#definitions). An object containing a list of "key": value pairs.
        # The key is the namespaced friendly name of the tag key, e.g. "12345/
        # environment" where 12345 is parent id. The value is the friendly short name of
        # the tag value, e.g. "production".
        # Corresponds to the JSON property `resourceTags`
        # @return [Hash<String,String>]
        attr_accessor resource_tags: untyped

        # Optional. Output only. Restriction config for table. If set, restrict certain
        # accesses on the table based on the config. See [Data egress](/bigquery/docs/
        # analytics-hub-introduction#data_egress) for more details.
        # Corresponds to the JSON property `restrictions`
        # @return [Google::Apis::BigqueryV2::RestrictionConfig]
        attr_accessor restrictions: untyped

        # Schema of a table
        # Corresponds to the JSON property `schema`
        # @return [Google::Apis::BigqueryV2::TableSchema]
        attr_accessor schema: untyped

        # Output only. A URL that can be used to access this resource again.
        # Corresponds to the JSON property `selfLink`
        # @return [String]
        attr_accessor self_link: untyped

        # Information about base table and snapshot time of the snapshot.
        # Corresponds to the JSON property `snapshotDefinition`
        # @return [Google::Apis::BigqueryV2::SnapshotDefinition]
        attr_accessor snapshot_definition: untyped

        # Output only. Contains information regarding this table's streaming buffer, if
        # one is present. This field will be absent if the table is not being streamed
        # to or if there is no data in the streaming buffer.
        # Corresponds to the JSON property `streamingBuffer`
        # @return [Google::Apis::BigqueryV2::Streamingbuffer]
        attr_accessor streaming_buffer: untyped

        # The TableConstraints defines the primary key and foreign key.
        # Corresponds to the JSON property `tableConstraints`
        # @return [Google::Apis::BigqueryV2::TableConstraints]
        attr_accessor table_constraints: untyped

        # Required. Reference describing the ID of this table.
        # Corresponds to the JSON property `tableReference`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor table_reference: untyped

        # Replication info of a table created using `AS REPLICA` DDL like: `CREATE
        # MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`
        # Corresponds to the JSON property `tableReplicationInfo`
        # @return [Google::Apis::BigqueryV2::TableReplicationInfo]
        attr_accessor table_replication_info: untyped

        # If specified, configures time-based partitioning for this table.
        # Corresponds to the JSON property `timePartitioning`
        # @return [Google::Apis::BigqueryV2::TimePartitioning]
        attr_accessor time_partitioning: untyped

        # Output only. Describes the table type. The following values are supported: * `
        # TABLE`: A normal BigQuery table. * `VIEW`: A virtual table defined by a SQL
        # query. * `EXTERNAL`: A table that references data stored in an external
        # storage system, such as Google Cloud Storage. * `MATERIALIZED_VIEW`: A
        # precomputed view defined by a SQL query. * `SNAPSHOT`: An immutable BigQuery
        # table that preserves the contents of a base table at a particular time. See
        # additional information on [table snapshots](/bigquery/docs/table-snapshots-
        # intro). The default value is `TABLE`.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor type: untyped

        # Describes the definition of a logical view.
        # Corresponds to the JSON property `view`
        # @return [Google::Apis::BigqueryV2::ViewDefinition]
        attr_accessor view: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class TableCell
        @v: untyped

        include Google::Apis::Core::Hashable

        #
        # Corresponds to the JSON property `v`
        # @return [Object]
        attr_accessor v: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # The TableConstraints defines the primary key and foreign key.
      class TableConstraints
        @foreign_keys: untyped

        @primary_key: untyped

        include Google::Apis::Core::Hashable

        # Optional. Present only if the table has a foreign key. The foreign key is not
        # enforced.
        # Corresponds to the JSON property `foreignKeys`
        # @return [Array<Google::Apis::BigqueryV2::TableConstraints::ForeignKey>]
        attr_accessor foreign_keys: untyped

        # Represents the primary key constraint on a table's columns.
        # Corresponds to the JSON property `primaryKey`
        # @return [Google::Apis::BigqueryV2::TableConstraints::PrimaryKey]
        attr_accessor primary_key: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # Represents a foreign key constraint on a table's columns.
        class ForeignKey
          @column_references: untyped

          @name: untyped

          @referenced_table: untyped

          include Google::Apis::Core::Hashable

          # Required. The columns that compose the foreign key.
          # Corresponds to the JSON property `columnReferences`
          # @return [Array<Google::Apis::BigqueryV2::TableConstraints::ForeignKey::ColumnReference>]
          attr_accessor column_references: untyped

          # Optional. Set only if the foreign key constraint is named.
          # Corresponds to the JSON property `name`
          # @return [String]
          attr_accessor name: untyped

          #
          # Corresponds to the JSON property `referencedTable`
          # @return [Google::Apis::BigqueryV2::TableConstraints::ForeignKey::ReferencedTable]
          attr_accessor referenced_table: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped

          # The pair of the foreign key column and primary key column.
          class ColumnReference
            @referenced_column: untyped

            @referencing_column: untyped

            include Google::Apis::Core::Hashable

            # Required. The column in the primary key that are referenced by the
            # referencing_column.
            # Corresponds to the JSON property `referencedColumn`
            # @return [String]
            attr_accessor referenced_column: untyped

            # Required. The column that composes the foreign key.
            # Corresponds to the JSON property `referencingColumn`
            # @return [String]
            attr_accessor referencing_column: untyped

            def initialize: (**untyped args) -> void

            # Update properties of this object
            def update!: (**untyped args) -> untyped
          end

          #
          class ReferencedTable
            @dataset_id: untyped

            @project_id: untyped

            @table_id: untyped

            include Google::Apis::Core::Hashable

            #
            # Corresponds to the JSON property `datasetId`
            # @return [String]
            attr_accessor dataset_id: untyped

            #
            # Corresponds to the JSON property `projectId`
            # @return [String]
            attr_accessor project_id: untyped

            #
            # Corresponds to the JSON property `tableId`
            # @return [String]
            attr_accessor table_id: untyped

            def initialize: (**untyped args) -> void

            # Update properties of this object
            def update!: (**untyped args) -> untyped
          end
        end

        # Represents the primary key constraint on a table's columns.
        class PrimaryKey
          @columns: untyped

          include Google::Apis::Core::Hashable

          # Required. The columns that are composed of the primary key constraint.
          # Corresponds to the JSON property `columns`
          # @return [Array<String>]
          attr_accessor columns: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> (untyped | nil)
        end
      end

      # Request for sending a single streaming insert.
      class InsertAllTableDataRequest
        @ignore_unknown_values: untyped

        @kind: untyped

        @rows: untyped

        @skip_invalid_rows: untyped

        @template_suffix: untyped

        @trace_id: untyped

        include Google::Apis::Core::Hashable

        # Optional. Accept rows that contain values that do not match the schema. The
        # unknown values are ignored. Default is false, which treats unknown values as
        # errors.
        # Corresponds to the JSON property `ignoreUnknownValues`
        # @return [Boolean]
        attr_accessor ignore_unknown_values: untyped

        alias ignore_unknown_values? ignore_unknown_values

        # Optional. The resource type of the response. The value is not checked at the
        # backend. Historically, it has been set to "bigquery#tableDataInsertAllRequest"
        # but you are not required to set it.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        #
        # Corresponds to the JSON property `rows`
        # @return [Array<Google::Apis::BigqueryV2::InsertAllTableDataRequest::Row>]
        attr_accessor rows: untyped

        # Optional. Insert all valid rows of a request, even if invalid rows exist. The
        # default value is false, which causes the entire request to fail if any invalid
        # rows exist.
        # Corresponds to the JSON property `skipInvalidRows`
        # @return [Boolean]
        attr_accessor skip_invalid_rows: untyped

        alias skip_invalid_rows? skip_invalid_rows

        # Optional. If specified, treats the destination table as a base template, and
        # inserts the rows into an instance table named "`destination``templateSuffix`".
        # BigQuery will manage creation of the instance table, using the schema of the
        # base template table. See https://cloud.google.com/bigquery/streaming-data-into-
        # bigquery#template-tables for considerations when working with templates tables.
        # Corresponds to the JSON property `templateSuffix`
        # @return [String]
        attr_accessor template_suffix: untyped

        # Optional. Unique request trace id. Used for debugging purposes only. It is
        # case-sensitive, limited to up to 36 ASCII characters. A UUID is recommended.
        # Corresponds to the JSON property `traceId`
        # @return [String]
        attr_accessor trace_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # Data for a single insertion row.
        class Row
          @insert_id: untyped

          @json: untyped

          include Google::Apis::Core::Hashable

          # Insertion ID for best-effort deduplication. This feature is not recommended,
          # and users seeking stronger insertion semantics are encouraged to use other
          # mechanisms such as the BigQuery Write API.
          # Corresponds to the JSON property `insertId`
          # @return [String]
          attr_accessor insert_id: untyped

          # Represents a single JSON object.
          # Corresponds to the JSON property `json`
          # @return [Hash<String,Object>]
          attr_accessor json: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      # Describes the format of a streaming insert response.
      class InsertAllTableDataResponse
        @insert_errors: untyped

        @kind: untyped

        include Google::Apis::Core::Hashable

        # Describes specific errors encountered while processing the request.
        # Corresponds to the JSON property `insertErrors`
        # @return [Array<Google::Apis::BigqueryV2::InsertAllTableDataResponse::InsertError>]
        attr_accessor insert_errors: untyped

        # Returns "bigquery#tableDataInsertAllResponse".
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # Error details about a single row's insertion.
        class InsertError
          @errors: untyped

          @index: untyped

          include Google::Apis::Core::Hashable

          # Error information for the row indicated by the index property.
          # Corresponds to the JSON property `errors`
          # @return [Array<Google::Apis::BigqueryV2::ErrorProto>]
          attr_accessor errors: untyped

          # The index of the row that error applies to.
          # Corresponds to the JSON property `index`
          # @return [Fixnum]
          attr_accessor index: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped
        end
      end

      #
      class TableDataList
        @etag: untyped

        @kind: untyped

        @page_token: untyped

        @rows: untyped

        @total_rows: untyped

        include Google::Apis::Core::Hashable

        # A hash of this page of results.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # The resource type of the response.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # A token used for paging results. Providing this token instead of the
        # startIndex parameter can help you retrieve stable results when an underlying
        # table is changing.
        # Corresponds to the JSON property `pageToken`
        # @return [String]
        attr_accessor page_token: untyped

        # Rows of results.
        # Corresponds to the JSON property `rows`
        # @return [Array<Google::Apis::BigqueryV2::TableRow>]
        attr_accessor rows: untyped

        # Total rows of the entire table. In order to show default value 0 we have to
        # present it as string.
        # Corresponds to the JSON property `totalRows`
        # @return [Fixnum]
        attr_accessor total_rows: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # A field in TableSchema
      class TableFieldSchema
        @categories: untyped

        @collation: untyped

        @data_policies: untyped

        @default_value_expression: untyped

        @description: untyped

        @fields: untyped

        @foreign_type_definition: untyped

        @max_length: untyped

        @mode: untyped

        @name: untyped

        @policy_tags: untyped

        @precision: untyped

        @range_element_type: untyped

        @rounding_mode: untyped

        @scale: untyped

        @type: untyped

        include Google::Apis::Core::Hashable

        # Deprecated.
        # Corresponds to the JSON property `categories`
        # @return [Google::Apis::BigqueryV2::TableFieldSchema::Categories]
        attr_accessor categories: untyped

        # Optional. Field collation can be set only when the type of field is STRING.
        # The following values are supported: * 'und:ci': undetermined locale, case
        # insensitive. * '': empty string. Default to case-sensitive behavior.
        # Corresponds to the JSON property `collation`
        # @return [String]
        attr_accessor collation: untyped

        # Optional. Data policy options, will replace the data_policies.
        # Corresponds to the JSON property `dataPolicies`
        # @return [Array<Google::Apis::BigqueryV2::DataPolicyOption>]
        attr_accessor data_policies: untyped

        # Optional. A SQL expression to specify the [default value] (https://cloud.
        # google.com/bigquery/docs/default-values) for this field.
        # Corresponds to the JSON property `defaultValueExpression`
        # @return [String]
        attr_accessor default_value_expression: untyped

        # Optional. The field description. The maximum length is 1,024 characters.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor description: untyped

        # Optional. Describes the nested schema fields if the type property is set to
        # RECORD.
        # Corresponds to the JSON property `fields`
        # @return [Array<Google::Apis::BigqueryV2::TableFieldSchema>]
        attr_accessor fields: untyped

        # Optional. Definition of the foreign data type. Only valid for top-level schema
        # fields (not nested fields). If the type is FOREIGN, this field is required.
        # Corresponds to the JSON property `foreignTypeDefinition`
        # @return [String]
        attr_accessor foreign_type_definition: untyped

        # Optional. Maximum length of values of this field for STRINGS or BYTES. If
        # max_length is not specified, no maximum length constraint is imposed on this
        # field. If type = "STRING", then max_length represents the maximum UTF-8 length
        # of strings in this field. If type = "BYTES", then max_length represents the
        # maximum number of bytes in this field. It is invalid to set this field if type
        # ≠ "STRING" and ≠ "BYTES".
        # Corresponds to the JSON property `maxLength`
        # @return [Fixnum]
        attr_accessor max_length: untyped

        # Optional. The field mode. Possible values include NULLABLE, REQUIRED and
        # REPEATED. The default value is NULLABLE.
        # Corresponds to the JSON property `mode`
        # @return [String]
        attr_accessor mode: untyped

        # Required. The field name. The name must contain only letters (a-z, A-Z),
        # numbers (0-9), or underscores (_), and must start with a letter or underscore.
        # The maximum length is 300 characters.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor name: untyped

        # Optional. The policy tags attached to this field, used for field-level access
        # control. If not set, defaults to empty policy_tags.
        # Corresponds to the JSON property `policyTags`
        # @return [Google::Apis::BigqueryV2::TableFieldSchema::PolicyTags]
        attr_accessor policy_tags: untyped

        # Optional. Precision (maximum number of total digits in base 10) and scale (
        # maximum number of digits in the fractional part in base 10) constraints for
        # values of this field for NUMERIC or BIGNUMERIC. It is invalid to set precision
        # or scale if type ≠ "NUMERIC" and ≠ "BIGNUMERIC". If precision and scale are
        # not specified, no value range constraint is imposed on this field insofar as
        # values are permitted by the type. Values of this NUMERIC or BIGNUMERIC field
        # must be in this range when: * Precision (P) and scale (S) are specified: [-10P-
        # S + 10-S, 10P-S - 10-S] * Precision (P) is specified but not scale (and thus
        # scale is interpreted to be equal to zero): [-10P + 1, 10P - 1]. Acceptable
        # values for precision and scale if both are specified: * If type = "NUMERIC": 1
        # ≤ precision - scale ≤ 29 and 0 ≤ scale ≤ 9. * If type = "BIGNUMERIC": 1 ≤
        # precision - scale ≤ 38 and 0 ≤ scale ≤ 38. Acceptable values for precision if
        # only precision is specified but not scale (and thus scale is interpreted to be
        # equal to zero): * If type = "NUMERIC": 1 ≤ precision ≤ 29. * If type = "
        # BIGNUMERIC": 1 ≤ precision ≤ 38. If scale is specified but not precision, then
        # it is invalid.
        # Corresponds to the JSON property `precision`
        # @return [Fixnum]
        attr_accessor precision: untyped

        # Represents the type of a field element.
        # Corresponds to the JSON property `rangeElementType`
        # @return [Google::Apis::BigqueryV2::TableFieldSchema::RangeElementType]
        attr_accessor range_element_type: untyped

        # Optional. Specifies the rounding mode to be used when storing values of
        # NUMERIC and BIGNUMERIC type.
        # Corresponds to the JSON property `roundingMode`
        # @return [String]
        attr_accessor rounding_mode: untyped

        # Optional. See documentation for precision.
        # Corresponds to the JSON property `scale`
        # @return [Fixnum]
        attr_accessor scale: untyped

        # Required. The field data type. Possible values include: * STRING * BYTES *
        # INTEGER (or INT64) * FLOAT (or FLOAT64) * BOOLEAN (or BOOL) * TIMESTAMP * DATE
        # * TIME * DATETIME * GEOGRAPHY * NUMERIC * BIGNUMERIC * JSON * RECORD (or
        # STRUCT) * RANGE Use of RECORD/STRUCT indicates that the field contains a
        # nested schema.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        # Deprecated.
        class Categories
          @names: untyped

          include Google::Apis::Core::Hashable

          # Deprecated.
          # Corresponds to the JSON property `names`
          # @return [Array<String>]
          attr_accessor names: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> (untyped | nil)
        end

        # Optional. The policy tags attached to this field, used for field-level access
        # control. If not set, defaults to empty policy_tags.
        class PolicyTags
          @names: untyped

          include Google::Apis::Core::Hashable

          # A list of policy tag resource names. For example, "projects/1/locations/eu/
          # taxonomies/2/policyTags/3". At most 1 policy tag is currently allowed.
          # Corresponds to the JSON property `names`
          # @return [Array<String>]
          attr_accessor names: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> (untyped | nil)
        end

        # Represents the type of a field element.
        class RangeElementType
          @type: untyped

          include Google::Apis::Core::Hashable

          # Required. The type of a field element. For more information, see
          # TableFieldSchema.type.
          # Corresponds to the JSON property `type`
          # @return [String]
          attr_accessor type: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> (untyped | nil)
        end
      end

      # Partial projection of the metadata for a given table in a list response.
      class TableList
        @etag: untyped

        @kind: untyped

        @next_page_token: untyped

        @tables: untyped

        @total_items: untyped

        include Google::Apis::Core::Hashable

        # A hash of this page of results.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor etag: untyped

        # The type of list.
        # Corresponds to the JSON property `kind`
        # @return [String]
        attr_accessor kind: untyped

        # A token to request the next page of results.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor next_page_token: untyped

        # Tables in the requested dataset.
        # Corresponds to the JSON property `tables`
        # @return [Array<Google::Apis::BigqueryV2::TableList::Table>]
        attr_accessor tables: untyped

        # The total number of tables in the dataset.
        # Corresponds to the JSON property `totalItems`
        # @return [Fixnum]
        attr_accessor total_items: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped

        #
        class Table
          @clustering: untyped

          @creation_time: untyped

          @expiration_time: untyped

          @friendly_name: untyped

          @id: untyped

          @kind: untyped

          @labels: untyped

          @range_partitioning: untyped

          @require_partition_filter: untyped

          @table_reference: untyped

          @time_partitioning: untyped

          @type: untyped

          @view: untyped

          include Google::Apis::Core::Hashable

          # Configures table clustering.
          # Corresponds to the JSON property `clustering`
          # @return [Google::Apis::BigqueryV2::Clustering]
          attr_accessor clustering: untyped

          # Output only. The time when this table was created, in milliseconds since the
          # epoch.
          # Corresponds to the JSON property `creationTime`
          # @return [Fixnum]
          attr_accessor creation_time: untyped

          # The time when this table expires, in milliseconds since the epoch. If not
          # present, the table will persist indefinitely. Expired tables will be deleted
          # and their storage reclaimed.
          # Corresponds to the JSON property `expirationTime`
          # @return [Fixnum]
          attr_accessor expiration_time: untyped

          # The user-friendly name for this table.
          # Corresponds to the JSON property `friendlyName`
          # @return [String]
          attr_accessor friendly_name: untyped

          # An opaque ID of the table.
          # Corresponds to the JSON property `id`
          # @return [String]
          attr_accessor id: untyped

          # The resource type.
          # Corresponds to the JSON property `kind`
          # @return [String]
          attr_accessor kind: untyped

          # The labels associated with this table. You can use these to organize and group
          # your tables.
          # Corresponds to the JSON property `labels`
          # @return [Hash<String,String>]
          attr_accessor labels: untyped

          # The range partitioning for this table.
          # Corresponds to the JSON property `rangePartitioning`
          # @return [Google::Apis::BigqueryV2::RangePartitioning]
          attr_accessor range_partitioning: untyped

          # Optional. If set to true, queries including this table must specify a
          # partition filter. This filter is used for partition elimination.
          # Corresponds to the JSON property `requirePartitionFilter`
          # @return [Boolean]
          attr_accessor require_partition_filter: untyped

          alias require_partition_filter? require_partition_filter

          # A reference uniquely identifying table.
          # Corresponds to the JSON property `tableReference`
          # @return [Google::Apis::BigqueryV2::TableReference]
          attr_accessor table_reference: untyped

          # The time-based partitioning for this table.
          # Corresponds to the JSON property `timePartitioning`
          # @return [Google::Apis::BigqueryV2::TimePartitioning]
          attr_accessor time_partitioning: untyped

          # The type of table.
          # Corresponds to the JSON property `type`
          # @return [String]
          attr_accessor type: untyped

          # Information about a logical view.
          # Corresponds to the JSON property `view`
          # @return [Google::Apis::BigqueryV2::TableList::Table::View]
          attr_accessor view: untyped

          def initialize: (**untyped args) -> void

          # Update properties of this object
          def update!: (**untyped args) -> untyped

          # Information about a logical view.
          class View
            @privacy_policy: untyped

            @use_legacy_sql: untyped

            include Google::Apis::Core::Hashable

            # Represents privacy policy that contains the privacy requirements specified by
            # the data owner. Currently, this is only supported on views.
            # Corresponds to the JSON property `privacyPolicy`
            # @return [Google::Apis::BigqueryV2::PrivacyPolicy]
            attr_accessor privacy_policy: untyped

            # True if view is defined in legacy SQL dialect, false if in GoogleSQL.
            # Corresponds to the JSON property `useLegacySql`
            # @return [Boolean]
            attr_accessor use_legacy_sql: untyped

            alias use_legacy_sql? use_legacy_sql

            def initialize: (**untyped args) -> void

            # Update properties of this object
            def update!: (**untyped args) -> untyped
          end
        end
      end

      # Table level detail on the usage of metadata caching. Only set for Metadata
      # caching eligible tables referenced in the query.
      class TableMetadataCacheUsage
        @explanation: untyped

        @staleness: untyped

        @table_reference: untyped

        @table_type: untyped

        @unused_reason: untyped

        include Google::Apis::Core::Hashable

        # Free form human-readable reason metadata caching was unused for the job.
        # Corresponds to the JSON property `explanation`
        # @return [String]
        attr_accessor explanation: untyped

        # Duration since last refresh as of this job for managed tables (indicates
        # metadata cache staleness as seen by this job).
        # Corresponds to the JSON property `staleness`
        # @return [String]
        attr_accessor staleness: untyped

        # Metadata caching eligible table referenced in the query.
        # Corresponds to the JSON property `tableReference`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor table_reference: untyped

        # [Table type](/bigquery/docs/reference/rest/v2/tables#Table.FIELDS.type).
        # Corresponds to the JSON property `tableType`
        # @return [String]
        attr_accessor table_type: untyped

        # Reason for not using metadata caching for the table.
        # Corresponds to the JSON property `unusedReason`
        # @return [String]
        attr_accessor unused_reason: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class TableReference
        @dataset_id: untyped

        @project_id: untyped

        @table_id: untyped

        include Google::Apis::Core::Hashable

        # Required. The ID of the dataset containing this table.
        # Corresponds to the JSON property `datasetId`
        # @return [String]
        attr_accessor dataset_id: untyped

        # Required. The ID of the project containing this table.
        # Corresponds to the JSON property `projectId`
        # @return [String]
        attr_accessor project_id: untyped

        # Required. The ID of the table. The ID can contain Unicode characters in
        # category L (letter), M (mark), N (number), Pc (connector, including underscore)
        # , Pd (dash), and Zs (space). For more information, see [General Category](
        # https://wikipedia.org/wiki/Unicode_character_property#General_Category). The
        # maximum length is 1,024 characters. Certain operations allow suffixing of the
        # table ID with a partition decorator, such as `sample_table$20190123`.
        # Corresponds to the JSON property `tableId`
        # @return [String]
        attr_accessor table_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Replication info of a table created using `AS REPLICA` DDL like: `CREATE
      # MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`
      class TableReplicationInfo
        @replicated_source_last_refresh_time: untyped

        @replication_error: untyped

        @replication_interval_ms: untyped

        @replication_status: untyped

        @source_table: untyped

        include Google::Apis::Core::Hashable

        # Optional. Output only. If source is a materialized view, this field signifies
        # the last refresh time of the source.
        # Corresponds to the JSON property `replicatedSourceLastRefreshTime`
        # @return [Fixnum]
        attr_accessor replicated_source_last_refresh_time: untyped

        # Error details.
        # Corresponds to the JSON property `replicationError`
        # @return [Google::Apis::BigqueryV2::ErrorProto]
        attr_accessor replication_error: untyped

        # Optional. Specifies the interval at which the source table is polled for
        # updates. It's Optional. If not specified, default replication interval would
        # be applied.
        # Corresponds to the JSON property `replicationIntervalMs`
        # @return [Fixnum]
        attr_accessor replication_interval_ms: untyped

        # Optional. Output only. Replication status of configured replication.
        # Corresponds to the JSON property `replicationStatus`
        # @return [String]
        attr_accessor replication_status: untyped

        # Required. Source table reference that is replicated.
        # Corresponds to the JSON property `sourceTable`
        # @return [Google::Apis::BigqueryV2::TableReference]
        attr_accessor source_table: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      #
      class TableRow
        @f: untyped

        include Google::Apis::Core::Hashable

        # Represents a single row in the result set, consisting of one or more fields.
        # Corresponds to the JSON property `f`
        # @return [Array<Google::Apis::BigqueryV2::TableCell>]
        attr_accessor f: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Schema of a table
      class TableSchema
        @fields: untyped

        @foreign_type_info: untyped

        include Google::Apis::Core::Hashable

        # Describes the fields in a table.
        # Corresponds to the JSON property `fields`
        # @return [Array<Google::Apis::BigqueryV2::TableFieldSchema>]
        attr_accessor fields: untyped

        # Metadata about the foreign data type definition such as the system in which
        # the type is defined.
        # Corresponds to the JSON property `foreignTypeInfo`
        # @return [Google::Apis::BigqueryV2::ForeignTypeInfo]
        attr_accessor foreign_type_info: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Request message for `TestIamPermissions` method.
      class TestIamPermissionsRequest
        @permissions: untyped

        include Google::Apis::Core::Hashable

        # The set of permissions to check for the `resource`. Permissions with wildcards
        # (such as `*` or `storage.*`) are not allowed. For more information see [IAM
        # Overview](https://cloud.google.com/iam/docs/overview#permissions).
        # Corresponds to the JSON property `permissions`
        # @return [Array<String>]
        attr_accessor permissions: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Response message for `TestIamPermissions` method.
      class TestIamPermissionsResponse
        @permissions: untyped

        include Google::Apis::Core::Hashable

        # A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
        # Corresponds to the JSON property `permissions`
        # @return [Array<String>]
        attr_accessor permissions: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      #
      class TimePartitioning
        @expiration_ms: untyped

        @field: untyped

        @require_partition_filter: untyped

        @type: untyped

        include Google::Apis::Core::Hashable

        # Optional. Number of milliseconds for which to keep the storage for a partition.
        # A wrapper is used here because 0 is an invalid value.
        # Corresponds to the JSON property `expirationMs`
        # @return [Fixnum]
        attr_accessor expiration_ms: untyped

        # Optional. If not set, the table is partitioned by pseudo column '
        # _PARTITIONTIME'; if set, the table is partitioned by this field. The field
        # must be a top-level TIMESTAMP or DATE field. Its mode must be NULLABLE or
        # REQUIRED. A wrapper is used here because an empty string is an invalid value.
        # Corresponds to the JSON property `field`
        # @return [String]
        attr_accessor field: untyped

        # If set to true, queries over this table require a partition filter that can be
        # used for partition elimination to be specified. This field is deprecated;
        # please set the field with the same name on the table itself instead. This
        # field needs a wrapper because we want to output the default value, false, if
        # the user explicitly set it.
        # Corresponds to the JSON property `requirePartitionFilter`
        # @return [Boolean]
        attr_accessor require_partition_filter: untyped

        alias require_partition_filter? require_partition_filter

        # Required. The supported types are DAY, HOUR, MONTH, and YEAR, which will
        # generate one partition per day, hour, month, and year, respectively.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Options used in model training.
      class TrainingOptions
        @activation_fn: untyped

        @adjust_step_changes: untyped

        @approx_global_feature_contrib: untyped

        @auto_arima: untyped

        @auto_arima_max_order: untyped

        @auto_arima_min_order: untyped

        @auto_class_weights: untyped

        @batch_size: untyped

        @booster_type: untyped

        @budget_hours: untyped

        @calculate_p_values: untyped

        @category_encoding_method: untyped

        @clean_spikes_and_dips: untyped

        @color_space: untyped

        @colsample_bylevel: untyped

        @colsample_bynode: untyped

        @colsample_bytree: untyped

        @dart_normalize_type: untyped

        @data_frequency: untyped

        @data_split_column: untyped

        @data_split_eval_fraction: untyped

        @data_split_method: untyped

        @decompose_time_series: untyped

        @distance_type: untyped

        @dropout: untyped

        @early_stop: untyped

        @enable_global_explain: untyped

        @feedback_type: untyped

        @fit_intercept: untyped

        @hidden_units: untyped

        @holiday_region: untyped

        @holiday_regions: untyped

        @horizon: untyped

        @hparam_tuning_objectives: untyped

        @include_drift: untyped

        @initial_learn_rate: untyped

        @input_label_columns: untyped

        @instance_weight_column: untyped

        @integrated_gradients_num_steps: untyped

        @item_column: untyped

        @kmeans_initialization_column: untyped

        @kmeans_initialization_method: untyped

        @l1_reg_activation: untyped

        @l1_regularization: untyped

        @l2_regularization: untyped

        @label_class_weights: untyped

        @learn_rate: untyped

        @learn_rate_strategy: untyped

        @loss_type: untyped

        @max_iterations: untyped

        @max_parallel_trials: untyped

        @max_time_series_length: untyped

        @max_tree_depth: untyped

        @min_relative_progress: untyped

        @min_split_loss: untyped

        @min_time_series_length: untyped

        @min_tree_child_weight: untyped

        @model_registry: untyped

        @model_uri: untyped

        @non_seasonal_order: untyped

        @num_clusters: untyped

        @num_factors: untyped

        @num_parallel_tree: untyped

        @num_principal_components: untyped

        @num_trials: untyped

        @optimization_strategy: untyped

        @optimizer: untyped

        @pca_explained_variance_ratio: untyped

        @pca_solver: untyped

        @sampled_shapley_num_paths: untyped

        @scale_features: untyped

        @standardize_features: untyped

        @subsample: untyped

        @tf_version: untyped

        @time_series_data_column: untyped

        @time_series_id_column: untyped

        @time_series_id_columns: untyped

        @time_series_length_fraction: untyped

        @time_series_timestamp_column: untyped

        @tree_method: untyped

        @trend_smoothing_window_size: untyped

        @user_column: untyped

        @vertex_ai_model_version_aliases: untyped

        @wals_alpha: untyped

        @warm_start: untyped

        @xgboost_version: untyped

        include Google::Apis::Core::Hashable

        # Activation function of the neural nets.
        # Corresponds to the JSON property `activationFn`
        # @return [String]
        attr_accessor activation_fn: untyped

        # If true, detect step changes and make data adjustment in the input time series.
        # Corresponds to the JSON property `adjustStepChanges`
        # @return [Boolean]
        attr_accessor adjust_step_changes: untyped

        alias adjust_step_changes? adjust_step_changes

        # Whether to use approximate feature contribution method in XGBoost model
        # explanation for global explain.
        # Corresponds to the JSON property `approxGlobalFeatureContrib`
        # @return [Boolean]
        attr_accessor approx_global_feature_contrib: untyped

        alias approx_global_feature_contrib? approx_global_feature_contrib

        # Whether to enable auto ARIMA or not.
        # Corresponds to the JSON property `autoArima`
        # @return [Boolean]
        attr_accessor auto_arima: untyped

        alias auto_arima? auto_arima

        # The max value of the sum of non-seasonal p and q.
        # Corresponds to the JSON property `autoArimaMaxOrder`
        # @return [Fixnum]
        attr_accessor auto_arima_max_order: untyped

        # The min value of the sum of non-seasonal p and q.
        # Corresponds to the JSON property `autoArimaMinOrder`
        # @return [Fixnum]
        attr_accessor auto_arima_min_order: untyped

        # Whether to calculate class weights automatically based on the popularity of
        # each label.
        # Corresponds to the JSON property `autoClassWeights`
        # @return [Boolean]
        attr_accessor auto_class_weights: untyped

        alias auto_class_weights? auto_class_weights

        # Batch size for dnn models.
        # Corresponds to the JSON property `batchSize`
        # @return [Fixnum]
        attr_accessor batch_size: untyped

        # Booster type for boosted tree models.
        # Corresponds to the JSON property `boosterType`
        # @return [String]
        attr_accessor booster_type: untyped

        # Budget in hours for AutoML training.
        # Corresponds to the JSON property `budgetHours`
        # @return [Float]
        attr_accessor budget_hours: untyped

        # Whether or not p-value test should be computed for this model. Only available
        # for linear and logistic regression models.
        # Corresponds to the JSON property `calculatePValues`
        # @return [Boolean]
        attr_accessor calculate_p_values: untyped

        alias calculate_p_values? calculate_p_values

        # Categorical feature encoding method.
        # Corresponds to the JSON property `categoryEncodingMethod`
        # @return [String]
        attr_accessor category_encoding_method: untyped

        # If true, clean spikes and dips in the input time series.
        # Corresponds to the JSON property `cleanSpikesAndDips`
        # @return [Boolean]
        attr_accessor clean_spikes_and_dips: untyped

        alias clean_spikes_and_dips? clean_spikes_and_dips

        # Enums for color space, used for processing images in Object Table. See more
        # details at https://www.tensorflow.org/io/tutorials/colorspace.
        # Corresponds to the JSON property `colorSpace`
        # @return [String]
        attr_accessor color_space: untyped

        # Subsample ratio of columns for each level for boosted tree models.
        # Corresponds to the JSON property `colsampleBylevel`
        # @return [Float]
        attr_accessor colsample_bylevel: untyped

        # Subsample ratio of columns for each node(split) for boosted tree models.
        # Corresponds to the JSON property `colsampleBynode`
        # @return [Float]
        attr_accessor colsample_bynode: untyped

        # Subsample ratio of columns when constructing each tree for boosted tree models.
        # Corresponds to the JSON property `colsampleBytree`
        # @return [Float]
        attr_accessor colsample_bytree: untyped

        # Type of normalization algorithm for boosted tree models using dart booster.
        # Corresponds to the JSON property `dartNormalizeType`
        # @return [String]
        attr_accessor dart_normalize_type: untyped

        # The data frequency of a time series.
        # Corresponds to the JSON property `dataFrequency`
        # @return [String]
        attr_accessor data_frequency: untyped

        # The column to split data with. This column won't be used as a feature. 1. When
        # data_split_method is CUSTOM, the corresponding column should be boolean. The
        # rows with true value tag are eval data, and the false are training data. 2.
        # When data_split_method is SEQ, the first DATA_SPLIT_EVAL_FRACTION rows (from
        # smallest to largest) in the corresponding column are used as training data,
        # and the rest are eval data. It respects the order in Orderable data types:
        # https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#data-
        # type-properties
        # Corresponds to the JSON property `dataSplitColumn`
        # @return [String]
        attr_accessor data_split_column: untyped

        # The fraction of evaluation data over the whole input data. The rest of data
        # will be used as training data. The format should be double. Accurate to two
        # decimal places. Default value is 0.2.
        # Corresponds to the JSON property `dataSplitEvalFraction`
        # @return [Float]
        attr_accessor data_split_eval_fraction: untyped

        # The data split type for training and evaluation, e.g. RANDOM.
        # Corresponds to the JSON property `dataSplitMethod`
        # @return [String]
        attr_accessor data_split_method: untyped

        # If true, perform decompose time series and save the results.
        # Corresponds to the JSON property `decomposeTimeSeries`
        # @return [Boolean]
        attr_accessor decompose_time_series: untyped

        alias decompose_time_series? decompose_time_series

        # Distance type for clustering models.
        # Corresponds to the JSON property `distanceType`
        # @return [String]
        attr_accessor distance_type: untyped

        # Dropout probability for dnn models.
        # Corresponds to the JSON property `dropout`
        # @return [Float]
        attr_accessor dropout: untyped

        # Whether to stop early when the loss doesn't improve significantly any more (
        # compared to min_relative_progress). Used only for iterative training
        # algorithms.
        # Corresponds to the JSON property `earlyStop`
        # @return [Boolean]
        attr_accessor early_stop: untyped

        alias early_stop? early_stop

        # If true, enable global explanation during training.
        # Corresponds to the JSON property `enableGlobalExplain`
        # @return [Boolean]
        attr_accessor enable_global_explain: untyped

        alias enable_global_explain? enable_global_explain

        # Feedback type that specifies which algorithm to run for matrix factorization.
        # Corresponds to the JSON property `feedbackType`
        # @return [String]
        attr_accessor feedback_type: untyped

        # Whether the model should include intercept during model training.
        # Corresponds to the JSON property `fitIntercept`
        # @return [Boolean]
        attr_accessor fit_intercept: untyped

        alias fit_intercept? fit_intercept

        # Hidden units for dnn models.
        # Corresponds to the JSON property `hiddenUnits`
        # @return [Array<Fixnum>]
        attr_accessor hidden_units: untyped

        # The geographical region based on which the holidays are considered in time
        # series modeling. If a valid value is specified, then holiday effects modeling
        # is enabled.
        # Corresponds to the JSON property `holidayRegion`
        # @return [String]
        attr_accessor holiday_region: untyped

        # A list of geographical regions that are used for time series modeling.
        # Corresponds to the JSON property `holidayRegions`
        # @return [Array<String>]
        attr_accessor holiday_regions: untyped

        # The number of periods ahead that need to be forecasted.
        # Corresponds to the JSON property `horizon`
        # @return [Fixnum]
        attr_accessor horizon: untyped

        # The target evaluation metrics to optimize the hyperparameters for.
        # Corresponds to the JSON property `hparamTuningObjectives`
        # @return [Array<String>]
        attr_accessor hparam_tuning_objectives: untyped

        # Include drift when fitting an ARIMA model.
        # Corresponds to the JSON property `includeDrift`
        # @return [Boolean]
        attr_accessor include_drift: untyped

        alias include_drift? include_drift

        # Specifies the initial learning rate for the line search learn rate strategy.
        # Corresponds to the JSON property `initialLearnRate`
        # @return [Float]
        attr_accessor initial_learn_rate: untyped

        # Name of input label columns in training data.
        # Corresponds to the JSON property `inputLabelColumns`
        # @return [Array<String>]
        attr_accessor input_label_columns: untyped

        # Name of the instance weight column for training data. This column isn't be
        # used as a feature.
        # Corresponds to the JSON property `instanceWeightColumn`
        # @return [String]
        attr_accessor instance_weight_column: untyped

        # Number of integral steps for the integrated gradients explain method.
        # Corresponds to the JSON property `integratedGradientsNumSteps`
        # @return [Fixnum]
        attr_accessor integrated_gradients_num_steps: untyped

        # Item column specified for matrix factorization models.
        # Corresponds to the JSON property `itemColumn`
        # @return [String]
        attr_accessor item_column: untyped

        # The column used to provide the initial centroids for kmeans algorithm when
        # kmeans_initialization_method is CUSTOM.
        # Corresponds to the JSON property `kmeansInitializationColumn`
        # @return [String]
        attr_accessor kmeans_initialization_column: untyped

        # The method used to initialize the centroids for kmeans algorithm.
        # Corresponds to the JSON property `kmeansInitializationMethod`
        # @return [String]
        attr_accessor kmeans_initialization_method: untyped

        # L1 regularization coefficient to activations.
        # Corresponds to the JSON property `l1RegActivation`
        # @return [Float]
        attr_accessor l1_reg_activation: untyped

        # L1 regularization coefficient.
        # Corresponds to the JSON property `l1Regularization`
        # @return [Float]
        attr_accessor l1_regularization: untyped

        # L2 regularization coefficient.
        # Corresponds to the JSON property `l2Regularization`
        # @return [Float]
        attr_accessor l2_regularization: untyped

        # Weights associated with each label class, for rebalancing the training data.
        # Only applicable for classification models.
        # Corresponds to the JSON property `labelClassWeights`
        # @return [Hash<String,Float>]
        attr_accessor label_class_weights: untyped

        # Learning rate in training. Used only for iterative training algorithms.
        # Corresponds to the JSON property `learnRate`
        # @return [Float]
        attr_accessor learn_rate: untyped

        # The strategy to determine learn rate for the current iteration.
        # Corresponds to the JSON property `learnRateStrategy`
        # @return [String]
        attr_accessor learn_rate_strategy: untyped

        # Type of loss function used during training run.
        # Corresponds to the JSON property `lossType`
        # @return [String]
        attr_accessor loss_type: untyped

        # The maximum number of iterations in training. Used only for iterative training
        # algorithms.
        # Corresponds to the JSON property `maxIterations`
        # @return [Fixnum]
        attr_accessor max_iterations: untyped

        # Maximum number of trials to run in parallel.
        # Corresponds to the JSON property `maxParallelTrials`
        # @return [Fixnum]
        attr_accessor max_parallel_trials: untyped

        # The maximum number of time points in a time series that can be used in
        # modeling the trend component of the time series. Don't use this option with
        # the `timeSeriesLengthFraction` or `minTimeSeriesLength` options.
        # Corresponds to the JSON property `maxTimeSeriesLength`
        # @return [Fixnum]
        attr_accessor max_time_series_length: untyped

        # Maximum depth of a tree for boosted tree models.
        # Corresponds to the JSON property `maxTreeDepth`
        # @return [Fixnum]
        attr_accessor max_tree_depth: untyped

        # When early_stop is true, stops training when accuracy improvement is less than
        # 'min_relative_progress'. Used only for iterative training algorithms.
        # Corresponds to the JSON property `minRelativeProgress`
        # @return [Float]
        attr_accessor min_relative_progress: untyped

        # Minimum split loss for boosted tree models.
        # Corresponds to the JSON property `minSplitLoss`
        # @return [Float]
        attr_accessor min_split_loss: untyped

        # The minimum number of time points in a time series that are used in modeling
        # the trend component of the time series. If you use this option you must also
        # set the `timeSeriesLengthFraction` option. This training option ensures that
        # enough time points are available when you use `timeSeriesLengthFraction` in
        # trend modeling. This is particularly important when forecasting multiple time
        # series in a single query using `timeSeriesIdColumn`. If the total number of
        # time points is less than the `minTimeSeriesLength` value, then the query uses
        # all available time points.
        # Corresponds to the JSON property `minTimeSeriesLength`
        # @return [Fixnum]
        attr_accessor min_time_series_length: untyped

        # Minimum sum of instance weight needed in a child for boosted tree models.
        # Corresponds to the JSON property `minTreeChildWeight`
        # @return [Fixnum]
        attr_accessor min_tree_child_weight: untyped

        # The model registry.
        # Corresponds to the JSON property `modelRegistry`
        # @return [String]
        attr_accessor model_registry: untyped

        # Google Cloud Storage URI from which the model was imported. Only applicable
        # for imported models.
        # Corresponds to the JSON property `modelUri`
        # @return [String]
        attr_accessor model_uri: untyped

        # Arima order, can be used for both non-seasonal and seasonal parts.
        # Corresponds to the JSON property `nonSeasonalOrder`
        # @return [Google::Apis::BigqueryV2::ArimaOrder]
        attr_accessor non_seasonal_order: untyped

        # Number of clusters for clustering models.
        # Corresponds to the JSON property `numClusters`
        # @return [Fixnum]
        attr_accessor num_clusters: untyped

        # Num factors specified for matrix factorization models.
        # Corresponds to the JSON property `numFactors`
        # @return [Fixnum]
        attr_accessor num_factors: untyped

        # Number of parallel trees constructed during each iteration for boosted tree
        # models.
        # Corresponds to the JSON property `numParallelTree`
        # @return [Fixnum]
        attr_accessor num_parallel_tree: untyped

        # Number of principal components to keep in the PCA model. Must be <= the number
        # of features.
        # Corresponds to the JSON property `numPrincipalComponents`
        # @return [Fixnum]
        attr_accessor num_principal_components: untyped

        # Number of trials to run this hyperparameter tuning job.
        # Corresponds to the JSON property `numTrials`
        # @return [Fixnum]
        attr_accessor num_trials: untyped

        # Optimization strategy for training linear regression models.
        # Corresponds to the JSON property `optimizationStrategy`
        # @return [String]
        attr_accessor optimization_strategy: untyped

        # Optimizer used for training the neural nets.
        # Corresponds to the JSON property `optimizer`
        # @return [String]
        attr_accessor optimizer: untyped

        # The minimum ratio of cumulative explained variance that needs to be given by
        # the PCA model.
        # Corresponds to the JSON property `pcaExplainedVarianceRatio`
        # @return [Float]
        attr_accessor pca_explained_variance_ratio: untyped

        # The solver for PCA.
        # Corresponds to the JSON property `pcaSolver`
        # @return [String]
        attr_accessor pca_solver: untyped

        # Number of paths for the sampled Shapley explain method.
        # Corresponds to the JSON property `sampledShapleyNumPaths`
        # @return [Fixnum]
        attr_accessor sampled_shapley_num_paths: untyped

        # If true, scale the feature values by dividing the feature standard deviation.
        # Currently only apply to PCA.
        # Corresponds to the JSON property `scaleFeatures`
        # @return [Boolean]
        attr_accessor scale_features: untyped

        alias scale_features? scale_features

        # Whether to standardize numerical features. Default to true.
        # Corresponds to the JSON property `standardizeFeatures`
        # @return [Boolean]
        attr_accessor standardize_features: untyped

        alias standardize_features? standardize_features

        # Subsample fraction of the training data to grow tree to prevent overfitting
        # for boosted tree models.
        # Corresponds to the JSON property `subsample`
        # @return [Float]
        attr_accessor subsample: untyped

        # Based on the selected TF version, the corresponding docker image is used to
        # train external models.
        # Corresponds to the JSON property `tfVersion`
        # @return [String]
        attr_accessor tf_version: untyped

        # Column to be designated as time series data for ARIMA model.
        # Corresponds to the JSON property `timeSeriesDataColumn`
        # @return [String]
        attr_accessor time_series_data_column: untyped

        # The time series id column that was used during ARIMA model training.
        # Corresponds to the JSON property `timeSeriesIdColumn`
        # @return [String]
        attr_accessor time_series_id_column: untyped

        # The time series id columns that were used during ARIMA model training.
        # Corresponds to the JSON property `timeSeriesIdColumns`
        # @return [Array<String>]
        attr_accessor time_series_id_columns: untyped

        # The fraction of the interpolated length of the time series that's used to
        # model the time series trend component. All of the time points of the time
        # series are used to model the non-trend component. This training option
        # accelerates modeling training without sacrificing much forecasting accuracy.
        # You can use this option with `minTimeSeriesLength` but not with `
        # maxTimeSeriesLength`.
        # Corresponds to the JSON property `timeSeriesLengthFraction`
        # @return [Float]
        attr_accessor time_series_length_fraction: untyped

        # Column to be designated as time series timestamp for ARIMA model.
        # Corresponds to the JSON property `timeSeriesTimestampColumn`
        # @return [String]
        attr_accessor time_series_timestamp_column: untyped

        # Tree construction algorithm for boosted tree models.
        # Corresponds to the JSON property `treeMethod`
        # @return [String]
        attr_accessor tree_method: untyped

        # Smoothing window size for the trend component. When a positive value is
        # specified, a center moving average smoothing is applied on the history trend.
        # When the smoothing window is out of the boundary at the beginning or the end
        # of the trend, the first element or the last element is padded to fill the
        # smoothing window before the average is applied.
        # Corresponds to the JSON property `trendSmoothingWindowSize`
        # @return [Fixnum]
        attr_accessor trend_smoothing_window_size: untyped

        # User column specified for matrix factorization models.
        # Corresponds to the JSON property `userColumn`
        # @return [String]
        attr_accessor user_column: untyped

        # The version aliases to apply in Vertex AI model registry. Always overwrite if
        # the version aliases exists in a existing model.
        # Corresponds to the JSON property `vertexAiModelVersionAliases`
        # @return [Array<String>]
        attr_accessor vertex_ai_model_version_aliases: untyped

        # Hyperparameter for matrix factoration when implicit feedback type is specified.
        # Corresponds to the JSON property `walsAlpha`
        # @return [Float]
        attr_accessor wals_alpha: untyped

        # Whether to train a model from the last checkpoint.
        # Corresponds to the JSON property `warmStart`
        # @return [Boolean]
        attr_accessor warm_start: untyped

        alias warm_start? warm_start

        # User-selected XGBoost versions for training of XGBoost models.
        # Corresponds to the JSON property `xgboostVersion`
        # @return [String]
        attr_accessor xgboost_version: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Information about a single training query run for the model.
      class TrainingRun
        @class_level_global_explanations: untyped

        @data_split_result: untyped

        @evaluation_metrics: untyped

        @model_level_global_explanation: untyped

        @results: untyped

        @start_time: untyped

        @training_options: untyped

        @training_start_time: untyped

        @vertex_ai_model_id: untyped

        @vertex_ai_model_version: untyped

        include Google::Apis::Core::Hashable

        # Output only. Global explanation contains the explanation of top features on
        # the class level. Applies to classification models only.
        # Corresponds to the JSON property `classLevelGlobalExplanations`
        # @return [Array<Google::Apis::BigqueryV2::GlobalExplanation>]
        attr_accessor class_level_global_explanations: untyped

        # Data split result. This contains references to the training and evaluation
        # data tables that were used to train the model.
        # Corresponds to the JSON property `dataSplitResult`
        # @return [Google::Apis::BigqueryV2::DataSplitResult]
        attr_accessor data_split_result: untyped

        # Evaluation metrics of a model. These are either computed on all training data
        # or just the eval data based on whether eval data was used during training.
        # These are not present for imported models.
        # Corresponds to the JSON property `evaluationMetrics`
        # @return [Google::Apis::BigqueryV2::EvaluationMetrics]
        attr_accessor evaluation_metrics: untyped

        # Global explanations containing the top most important features after training.
        # Corresponds to the JSON property `modelLevelGlobalExplanation`
        # @return [Google::Apis::BigqueryV2::GlobalExplanation]
        attr_accessor model_level_global_explanation: untyped

        # Output only. Output of each iteration run, results.size() <= max_iterations.
        # Corresponds to the JSON property `results`
        # @return [Array<Google::Apis::BigqueryV2::IterationResult>]
        attr_accessor results: untyped

        # Output only. The start time of this training run.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor start_time: untyped

        # Options used in model training.
        # Corresponds to the JSON property `trainingOptions`
        # @return [Google::Apis::BigqueryV2::TrainingOptions]
        attr_accessor training_options: untyped

        # Output only. The start time of this training run, in milliseconds since epoch.
        # Corresponds to the JSON property `trainingStartTime`
        # @return [Fixnum]
        attr_accessor training_start_time: untyped

        # The model id in the [Vertex AI Model Registry](https://cloud.google.com/vertex-
        # ai/docs/model-registry/introduction) for this training run.
        # Corresponds to the JSON property `vertexAiModelId`
        # @return [String]
        attr_accessor vertex_ai_model_id: untyped

        # Output only. The model version in the [Vertex AI Model Registry](https://cloud.
        # google.com/vertex-ai/docs/model-registry/introduction) for this training run.
        # Corresponds to the JSON property `vertexAiModelVersion`
        # @return [String]
        attr_accessor vertex_ai_model_version: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # [Alpha] Information of a multi-statement transaction.
      class TransactionInfo
        @transaction_id: untyped

        include Google::Apis::Core::Hashable

        # Output only. [Alpha] Id of the transaction.
        # Corresponds to the JSON property `transactionId`
        # @return [String]
        attr_accessor transaction_id: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # Information about a single transform column.
      class TransformColumn
        @name: untyped

        @transform_sql: untyped

        @type: untyped

        include Google::Apis::Core::Hashable

        # Output only. Name of the column.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor name: untyped

        # Output only. The SQL expression used in the column transform.
        # Corresponds to the JSON property `transformSql`
        # @return [String]
        attr_accessor transform_sql: untyped

        # The data type of a variable such as a function argument. Examples include: *
        # INT64: ``"typeKind": "INT64"`` * ARRAY: ` "typeKind": "ARRAY", "
        # arrayElementType": `"typeKind": "STRING"` ` * STRUCT>: ` "typeKind": "STRUCT",
        # "structType": ` "fields": [ ` "name": "x", "type": `"typeKind": "STRING"` `, `
        # "name": "y", "type": ` "typeKind": "ARRAY", "arrayElementType": `"typeKind": "
        # DATE"` ` ` ] ` ` * RANGE: ` "typeKind": "RANGE", "rangeElementType": `"
        # typeKind": "DATE"` `
        # Corresponds to the JSON property `type`
        # @return [Google::Apis::BigqueryV2::StandardSqlDataType]
        attr_accessor type: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Request format for undeleting a dataset.
      class UndeleteDatasetRequest
        @deletion_time: untyped

        include Google::Apis::Core::Hashable

        # Optional. The exact time when the dataset was deleted. If not specified, the
        # most recently deleted version is undeleted. Undeleting a dataset using
        # deletion time is not supported.
        # Corresponds to the JSON property `deletionTime`
        # @return [String]
        attr_accessor deletion_time: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> (untyped | nil)
      end

      # This is used for defining User Defined Function (UDF) resources only when
      # using legacy SQL. Users of GoogleSQL should leverage either DDL (e.g. CREATE [
      # TEMPORARY] FUNCTION ... ) or the Routines API to define UDF resources. For
      # additional information on migrating, see: https://cloud.google.com/bigquery/
      # docs/reference/standard-sql/migrating-from-legacy-sql#differences_in_user-
      # defined_javascript_functions
      class UserDefinedFunctionResource
        @inline_code: untyped

        @resource_uri: untyped

        include Google::Apis::Core::Hashable

        # [Pick one] An inline resource that contains code for a user-defined function (
        # UDF). Providing a inline code resource is equivalent to providing a URI for a
        # file containing the same code.
        # Corresponds to the JSON property `inlineCode`
        # @return [String]
        attr_accessor inline_code: untyped

        # [Pick one] A code resource to load from a Google Cloud Storage URI (gs://
        # bucket/path).
        # Corresponds to the JSON property `resourceUri`
        # @return [String]
        attr_accessor resource_uri: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Statistics for a vector search query. Populated as part of JobStatistics2.
      class VectorSearchStatistics
        @index_unused_reasons: untyped

        @index_usage_mode: untyped

        include Google::Apis::Core::Hashable

        # When `indexUsageMode` is `UNUSED` or `PARTIALLY_USED`, this field explains why
        # indexes were not used in all or part of the vector search query. If `
        # indexUsageMode` is `FULLY_USED`, this field is not populated.
        # Corresponds to the JSON property `indexUnusedReasons`
        # @return [Array<Google::Apis::BigqueryV2::IndexUnusedReason>]
        attr_accessor index_unused_reasons: untyped

        # Specifies the index usage mode for the query.
        # Corresponds to the JSON property `indexUsageMode`
        # @return [String]
        attr_accessor index_usage_mode: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end

      # Describes the definition of a logical view.
      class ViewDefinition
        @foreign_definitions: untyped

        @privacy_policy: untyped

        @query: untyped

        @use_explicit_column_names: untyped

        @use_legacy_sql: untyped

        @user_defined_function_resources: untyped

        include Google::Apis::Core::Hashable

        # Optional. Foreign view representations.
        # Corresponds to the JSON property `foreignDefinitions`
        # @return [Array<Google::Apis::BigqueryV2::ForeignViewDefinition>]
        attr_accessor foreign_definitions: untyped

        # Represents privacy policy that contains the privacy requirements specified by
        # the data owner. Currently, this is only supported on views.
        # Corresponds to the JSON property `privacyPolicy`
        # @return [Google::Apis::BigqueryV2::PrivacyPolicy]
        attr_accessor privacy_policy: untyped

        # Required. A query that BigQuery executes when the view is referenced.
        # Corresponds to the JSON property `query`
        # @return [String]
        attr_accessor query: untyped

        # True if the column names are explicitly specified. For example by using the '
        # CREATE VIEW v(c1, c2) AS ...' syntax. Can only be set for GoogleSQL views.
        # Corresponds to the JSON property `useExplicitColumnNames`
        # @return [Boolean]
        attr_accessor use_explicit_column_names: untyped

        alias use_explicit_column_names? use_explicit_column_names

        # Specifies whether to use BigQuery's legacy SQL for this view. The default
        # value is true. If set to false, the view will use BigQuery's GoogleSQL: https:/
        # /cloud.google.com/bigquery/sql-reference/ Queries and views that reference
        # this view must use the same flag value. A wrapper is used here because the
        # default value is True.
        # Corresponds to the JSON property `useLegacySql`
        # @return [Boolean]
        attr_accessor use_legacy_sql: untyped

        alias use_legacy_sql? use_legacy_sql

        # Describes user-defined function resources used in the query.
        # Corresponds to the JSON property `userDefinedFunctionResources`
        # @return [Array<Google::Apis::BigqueryV2::UserDefinedFunctionResource>]
        attr_accessor user_defined_function_resources: untyped

        def initialize: (**untyped args) -> void

        # Update properties of this object
        def update!: (**untyped args) -> untyped
      end
    end
  end
end
