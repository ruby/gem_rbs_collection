module Stripe
  # Refund objects allow you to refund a previously created charge that isn't
  # refunded yet. Funds are refunded to the credit or debit card that's
  # initially charged.
  #
  # Related guide: [Refunds](https://stripe.com/docs/refunds)
  class Refund < APIResource
    include _Refund

    def self.object_name: () -> "refund"

    # When you create a new refund, you must specify a Charge or a PaymentIntent object on which to create it.
    #
    # Creating a new refund will refund a charge that has previously been created but not yet refunded.
    # Funds will be refunded to the credit or debit card that was originally charged.
    #
    # You can optionally refund only part of a charge.
    # You can do so multiple times, until the entire charge has been refunded.
    #
    # Once entirely refunded, a charge can't be refunded again.
    # This method will raise an error when called on an already-refunded charge,
    # or when trying to refund more money than is left on a charge.
    def self.create: (?untyped params, ?untyped opts) -> Refund

    # Returns a list of all refunds you created. We return the refunds in sorted order, with the most recent refunds appearing first. The 10 most recent refunds are always available by default on the Charge object.
    def self.list: (?untyped filters, ?untyped opts) -> ListObject[Refund]
  end

  # https://docs.stripe.com/api/refunds/object
  interface _Refund
    # Amount, in cents (or local equivalent).
    def amount: () -> Integer

    # Amount, in cents (or local equivalent).
    def amount=: (Integer) -> Integer

    # Balance transaction that describes the impact on your account balance.
    def balance_transaction: () -> String?

    # Balance transaction that describes the impact on your account balance.
    def balance_transaction=: (String?) -> String?

    # ID of the charge that's refunded.
    def charge: () -> String?

    # ID of the charge that's refunded.
    def charge=: (String?) -> String?

    # Time at which the object was created. Measured in seconds since the Unix epoch.
    def created: () -> Integer

    # Time at which the object was created. Measured in seconds since the Unix epoch.
    def created=: (Integer) -> Integer

    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    def currency: () -> String

    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    def currency=: (String) -> String

    # An arbitrary string attached to the object. You can use this for displaying to users (available on non-card refunds only).
    def description: () -> String

    # An arbitrary string attached to the object. You can use this for displaying to users (available on non-card refunds only).
    def description=: (String) -> String

    def destination_details: () -> untyped

    def destination_details=: (untyped) -> untyped

    # After the refund fails, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
    def failure_balance_transaction: () -> String

    # After the refund fails, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
    def failure_balance_transaction=: (String) -> String

    # Provides the reason for the refund failure. Possible values are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`, `insufficient_funds`, `declined`, `merchant_request`, or `unknown`.
    def failure_reason: () -> String

    # Provides the reason for the refund failure. Possible values are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`, `insufficient_funds`, `declined`, `merchant_request`, or `unknown`.
    def failure_reason=: (String) -> String

    # Unique identifier for the object.
    def id: () -> String

    # Unique identifier for the object.
    def id=: (String) -> String

    # For payment methods without native refund support (for example, Konbini, PromptPay), provide an email address for the customer to receive refund instructions.
    def instructions_email: () -> String

    # For payment methods without native refund support (for example, Konbini, PromptPay), provide an email address for the customer to receive refund instructions.
    def instructions_email=: (String) -> String

    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    def metadata: () -> untyped?

    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    def metadata=: (untyped?) -> untyped?

    def next_action: () -> untyped

    def next_action=: (untyped) -> untyped

    # String representing the object's type. Objects of the same type share the same value.
    def object: () -> "refund"

    # String representing the object's type. Objects of the same type share the same value.
    def object=: ("refund") -> "refund"

    # ID of the PaymentIntent that's refunded.
    def payment_intent: () -> String?

    # ID of the PaymentIntent that's refunded.
    def payment_intent=: (String?) -> String?

    # Reason for the refund, which is either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).
    def reason: () -> ("duplicate" | "expired_uncaptured_charge" | "fraudulent" | "requested_by_customer")?

    # Reason for the refund, which is either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).
    def reason=: (("duplicate" | "expired_uncaptured_charge" | "fraudulent" | "requested_by_customer")?) -> ("duplicate" | "expired_uncaptured_charge" | "fraudulent" | "requested_by_customer")?

    # This is the transaction number that appears on email receipts sent for this refund.
    def receipt_number: () -> String?

    # This is the transaction number that appears on email receipts sent for this refund.
    def receipt_number=: (String?) -> String?

    # The transfer reversal that's associated with the refund. Only present if the charge came from another Stripe account.
    def source_transfer_reversal: () -> String?

    # The transfer reversal that's associated with the refund. Only present if the charge came from another Stripe account.
    def source_transfer_reversal=: (String?) -> String?

    # Status of the refund. This can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds).
    def status: () -> String?

    # Status of the refund. This can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds).
    def status=: (String?) -> String?

    # This refers to the transfer reversal object if the accompanying transfer reverses. This is only applicable if the charge was created using the destination parameter.
    def transfer_reversal: () -> String?

    # This refers to the transfer reversal object if the accompanying transfer reverses. This is only applicable if the charge was created using the destination parameter.
    def transfer_reversal=: (String?) -> String?
  end
end
