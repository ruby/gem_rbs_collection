module StackProf
  VERSION: String

  type mode = :cpu | :wall | :object | :custom
  type result = Hash[Symbol, untyped] # TODO: Use record type for more useful type

  def self.run: (?mode: mode, out: String, ?interval: Integer) { () -> void } -> result

  def self.results: (?String out) -> result

  def self.running?: () -> bool

  def self.sample: () -> bool

  def self.start: (?mode: mode, out: String, ?interval: Integer) -> bool

  def self.stop: () -> bool

  def self.use_postponed_job!: () -> nil
end
