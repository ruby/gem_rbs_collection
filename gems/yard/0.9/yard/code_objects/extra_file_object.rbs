# !!! GENERATED FILE !!!
# Please see generators/yard-generator/README.md

# An ExtraFileObject represents an extra documentation file (README or other
# file). It is not strictly a CodeObject (does not inherit from `Base`) although
# it implements `path`, `name` and `type`, and therefore should be structurally
# compatible with most CodeObject interfaces.
class YARD::CodeObjects::ExtraFileObject
  # Returns the value of attribute filename.
  attr_accessor filename: untyped
  attr_accessor attributes: untyped
  # Returns the value of attribute name.
  attr_accessor name: untyped
  # @since 0.8.3
  attr_accessor locale: untyped
  # Creates a new extra file object.
  # @param [String] filename the location on disk of the file
  # @param [String] contents the file contents. If not set, the contents
  #   will be read from disk using the +filename+.
  def initialize: (String filename, ?String contents) -> void
  # Returns the value of attribute name.
  #
  def path: () -> untyped
  def title: () -> untyped
  def contents: () -> untyped
  def contents=: (untyped contents) -> untyped
  def inspect: () -> untyped
  #
  #
  def to_s: () -> untyped
  def type: () -> untyped
  def ==: (untyped other) -> untyped
  #
  #
  def eql?: (untyped other) -> untyped
  #
  #
  def equal?: (untyped other) -> untyped
  def hash: () -> untyped
  private def ensure_parsed: () -> untyped
  # @param [String] data the file contents
  private def parse_contents: (String data) -> untyped
  private def translate: (untyped data) -> untyped
end
