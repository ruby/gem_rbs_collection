class Regexp::Parser
  def parse: (Regexp | String input, ?String? syntax, ?options: Integer?) { (Regexp::Expression::Root) -> untyped } -> untyped
           | (Regexp | String input, ?String? syntax, ?options: Integer?) -> Regexp::Expression::Root
  def self.parse: (Regexp | String input, ?String? syntax, ?options: Integer?) { (Regexp::Expression::Root) -> untyped } -> untyped
                | (Regexp | String input, ?String? syntax, ?options: Integer?) -> Regexp::Expression::Root
end

module Regexp::Expression
  class Root < Subexpression
  end

  class Subexpression < Base
  end

  class Base
  end
end
