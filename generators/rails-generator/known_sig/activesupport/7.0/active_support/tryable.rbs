module ActiveSupport
  module Tryable : BasicObject
    def try: [T] () { (self) -> T } -> T # When yield self
           | [T] () { () -> T } -> T # When instance_eval
           | (Object::name method_name, *untyped args) ?{ (*untyped) -> untyped } -> untyped

    def try!: [T] () { (self) -> T } -> T # When yield self
            | [T] () { () -> T } -> T # When instance_eval
            | (Object::name method_name, *untyped args) ?{ (*untyped) -> untyped } -> untyped
  end
end
